{"ast":null,"code":"var _jsxFileName = \"/Users/natellaverde/\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B/MC_Portfolio/src/app/components/common/cards/addCardForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../../utils/validator\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"../form/textField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddCommentForm = _ref => {\n  _s();\n  let {\n    onSubmit\n  } = _ref;\n  const initialState = {\n    answer: \"\",\n    question: \"\"\n  };\n  const [data, setData] = useState(initialState);\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    validate();\n  }, [data]);\n  const handleChange = target => {\n    setData(prevState => ({\n      ...prevState,\n      [target.name]: target.value\n    }));\n  };\n  const validatorConfig = {\n    question: {\n      isRequired: {\n        message: \"Field question can't be empty\"\n      },\n      max: {\n        message: \"Name must have a maximum of 100 characters\",\n        value: 100\n      }\n    },\n    answer: {\n      isRequired: {\n        message: \"Field answer can't be empty\"\n      },\n      max: {\n        message: \"Name must have a maximum of 100 characters\",\n        value: 100\n      }\n    }\n  };\n  const validate = () => {\n    const errors = validator(data, validatorConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const isValid = Object.keys(errors).length === 0;\n  const clearForm = () => {\n    setData(initialState);\n    setErrors({});\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    onSubmit(data);\n    clearForm();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"New Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        value: data.question || \"\",\n        onChange: handleChange,\n        name: \"question\",\n        label: \"Question\",\n        error: errors.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: data.answer || \"\",\n        onChange: handleChange,\n        name: \"answer\",\n        label: \"Answer\",\n        error: errors.answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-end\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          style: {\n            background: \"rgb(12, 74, 52)\",\n            color: \"white\"\n          },\n          disabled: !isValid,\n          children: \"Create card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(AddCommentForm, \"qegERNRzVvZk3dbDrmqidr7jDQw=\");\n_c = AddCommentForm;\nAddCommentForm.propTypes = {\n  onSubmit: PropTypes.func\n};\nexport default AddCommentForm;\nvar _c;\n$RefreshReg$(_c, \"AddCommentForm\");","map":{"version":3,"names":["React","useEffect","useState","validator","PropTypes","TextField","jsxDEV","_jsxDEV","AddCommentForm","_ref","_s","onSubmit","initialState","answer","question","data","setData","errors","setErrors","validate","handleChange","target","prevState","name","value","validatorConfig","isRequired","message","max","Object","keys","length","isValid","clearForm","handleSubmit","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","label","error","className","style","background","color","disabled","_c","propTypes","func","$RefreshReg$"],"sources":["/Users/natellaverde/Проекты/MC_Portfolio/src/app/components/common/cards/addCardForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../../utils/validator\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"../form/textField\";\n\nconst AddCommentForm = ({ onSubmit }) => {\n    const initialState = { answer: \"\", question: \"\" };\n    const [data, setData] = useState(initialState);\n    const [errors, setErrors] = useState({});\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        question: {\n            isRequired: {\n                message: \"Field question can't be empty\"\n            },\n            max: {\n                message: \"Name must have a maximum of 100 characters\",\n                value: 100\n            }\n        },\n        answer: {\n            isRequired: {\n                message: \"Field answer can't be empty\"\n            },\n            max: {\n                message: \"Name must have a maximum of 100 characters\",\n                value: 100\n            }\n        }\n    };\n\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n    const clearForm = () => {\n        setData(initialState);\n        setErrors({});\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        onSubmit(data);\n        clearForm();\n    };\n\n    return (\n        <div>\n            <h2>New Card</h2>\n            <form onSubmit={handleSubmit}>\n                <TextField\n                    value={data.question || \"\"}\n                    onChange={handleChange}\n                    name=\"question\"\n                    label=\"Question\"\n                    error={errors.question}\n                />\n                <TextField\n                    value={data.answer || \"\"}\n                    onChange={handleChange}\n                    name=\"answer\"\n                    label=\"Answer\"\n                    error={errors.answer}\n                />\n                <div className=\"d-flex justify-content-end\">\n                    <button className=\"btn\"\n                            style={{ background: \"rgb(12, 74, 52)\", color: \"white\" }}\n                            disabled={!isValid}\n                    >Create card</button>\n                </div>\n            </form>\n        </div>\n    );\n};\nAddCommentForm.propTypes = {\n    onSubmit: PropTypes.func\n};\n\nexport default AddCommentForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}