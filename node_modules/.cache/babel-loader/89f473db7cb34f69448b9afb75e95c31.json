{"ast":null,"code":"import axios from \"axios\";\nimport localStorageService from \"./localStorage.service\";\nimport config from \"../config.json\";\nconst httpAuth = axios.create({\n  baseURL: config.apiEndpoint + \"/auth/\",\n  params: {\n    key: process.env.REACT_APP_FIREBASE_KEY\n  }\n});\nconst authService = {\n  register: async payload => {\n    const {\n      data\n    } = await httpAuth.post(`signUp`, payload);\n    return data;\n  },\n  login: async _ref => {\n    let {\n      email,\n      password\n    } = _ref;\n    const {\n      data\n    } = await httpAuth.post(`signInWithPassword`, {\n      email,\n      password,\n      returnSecureToken: true\n    });\n    return data;\n  },\n  refresh: async () => {\n    const {\n      data\n    } = await httpAuth.post(\"token\", {\n      grant_type: \"refresh_token\",\n      refresh_token: localStorageService.getRefreshToken()\n    });\n    return data;\n  }\n};\nexport default authService;","map":{"version":3,"names":["axios","localStorageService","config","httpAuth","create","baseURL","apiEndpoint","params","key","process","env","REACT_APP_FIREBASE_KEY","authService","register","payload","data","post","login","_ref","email","password","returnSecureToken","refresh","grant_type","refresh_token","getRefreshToken"],"sources":["/Users/natellaverde/Проекты/MC_Portfolio/src/app/services/auth.service.js"],"sourcesContent":["import axios from \"axios\";\nimport localStorageService from \"./localStorage.service\";\nimport config from \"../config.json\";\n\nconst httpAuth = axios.create({\n    baseURL: config.apiEndpoint + \"/auth/\",\n    params: {\n        key: process.env.REACT_APP_FIREBASE_KEY\n    }\n});\n\nconst authService = {\n    register: async (payload) => {\n        const { data } = await httpAuth.post(`signUp`, payload);\n        return data;\n    },\n    login: async ({ email, password }) => {\n        const { data } = await httpAuth.post(`signInWithPassword`, {\n            email,\n            password,\n            returnSecureToken: true\n        });\n        return data;\n    },\n    refresh: async () => {\n        const { data } = await httpAuth.post(\"token\", {\n            grant_type: \"refresh_token\",\n            refresh_token: localStorageService.getRefreshToken()\n        });\n        return data;\n    }\n};\nexport default authService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,mBAAmB,MAAM,wBAAwB;AACxD,OAAOC,MAAM,MAAM,gBAAgB;AAEnC,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAM,CAAC;EAC1BC,OAAO,EAAEH,MAAM,CAACI,WAAW,GAAG,QAAQ;EACtCC,MAAM,EAAE;IACJC,GAAG,EAAEC,OAAO,CAACC,GAAG,CAACC;EACrB;AACJ,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAG;EAChBC,QAAQ,EAAE,MAAOC,OAAO,IAAK;IACzB,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAE,QAAO,EAAEF,OAAO,CAAC;IACvD,OAAOC,IAAI;EACf,CAAC;EACDE,KAAK,EAAE,MAAAC,IAAA,IAA+B;IAAA,IAAxB;MAAEC,KAAK;MAAEC;IAAS,CAAC,GAAAF,IAAA;IAC7B,MAAM;MAAEH;IAAK,CAAC,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAE,oBAAmB,EAAE;MACvDG,KAAK;MACLC,QAAQ;MACRC,iBAAiB,EAAE;IACvB,CAAC,CAAC;IACF,OAAON,IAAI;EACf,CAAC;EACDO,OAAO,EAAE,MAAAA,CAAA,KAAY;IACjB,MAAM;MAAEP;IAAK,CAAC,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,OAAO,EAAE;MAC1CO,UAAU,EAAE,eAAe;MAC3BC,aAAa,EAAEvB,mBAAmB,CAACwB,eAAe,CAAC;IACvD,CAAC,CAAC;IACF,OAAOV,IAAI;EACf;AACJ,CAAC;AACD,eAAeH,WAAW"},"metadata":{},"sourceType":"module"}