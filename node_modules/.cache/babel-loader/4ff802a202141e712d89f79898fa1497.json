{"ast":null,"code":"import { createAction, createSlice } from \"@reduxjs/toolkit\";\nimport authService from \"../services/auth.service\";\nimport localStorageService from \"../services/localStorage.service\";\nimport userService from \"../services/user.service\";\nimport { generateAuthError } from \"../utils/generateAuthError\";\nimport history from \"../utils/history\";\nconst initialState = localStorageService.getAccessToken() ? {\n  entities: null,\n  isLoading: true,\n  error: null,\n  auth: {\n    userId: localStorageService.getUserId()\n  },\n  isLoggedIn: true,\n  dataLoaded: false\n} : {\n  entities: null,\n  isLoading: false,\n  error: null,\n  auth: null,\n  isLoggedIn: false,\n  dataLoaded: false\n};\nconst usersSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {\n    usersRequested: state => {\n      state.isLoading = true;\n    },\n    usersReceived: (state, action) => {\n      state.entities = action.payload;\n      state.dataLoaded = true;\n      state.isLoading = false;\n    },\n    usersRequestFiled: (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    },\n    authRequestSuccess: (state, action) => {\n      state.auth = action.payload;\n      state.isLoggedIn = true;\n    },\n    authRequestFailed: (state, action) => {\n      state.error = action.payload;\n    },\n    userCreated: (state, action) => {\n      state.entities.push(action.payload);\n    },\n    userLoggedOut: state => {\n      state.entities = null;\n      state.isLoggedIn = false;\n      state.auth = null;\n      state.dataLoaded = false;\n    },\n    userUpdateSuccess: (state, action) => {\n      state.entities[state.entities.findIndex(u => u._id === action.payload._id)] = action.payload;\n    },\n    authRequested: state => {\n      state.error = null;\n    }\n  }\n});\nconst {\n  reducer: usersReducer,\n  actions\n} = usersSlice;\nconst {\n  usersRequested,\n  usersReceived,\n  usersRequestFiled,\n  authRequestFailed,\n  authRequestSuccess,\n  userLoggedOut,\n  userUpdateSuccess\n} = actions;\nconst authRequested = createAction(\"users/authRequested\");\nconst userUpdateFailed = createAction(\"users/userUpdateFailed\");\nconst userUpdateRequested = createAction(\"users/userUpdateRequested\");\nexport const login = _ref => {\n  let {\n    payload,\n    redirect\n  } = _ref;\n  return async dispatch => {\n    const {\n      email,\n      password\n    } = payload;\n    dispatch(authRequested());\n    try {\n      const data = await authService.login({\n        email,\n        password\n      });\n      localStorageService.setTokens(data);\n      dispatch(authRequestSuccess({\n        userId: data.userId\n      }));\n      history.push(redirect);\n    } catch (error) {\n      console.log(\"err\", error);\n      const {\n        code,\n        message\n      } = error.response.data.error;\n      if (code === 400) {\n        const errorMessage = generateAuthError(message);\n        dispatch(authRequestFailed(errorMessage));\n      } else {\n        dispatch(authRequestFailed(error.message));\n      }\n    }\n  };\n};\nexport const signUp = payload => async dispatch => {\n  dispatch(authRequested());\n  try {\n    const data = await authService.register(payload);\n    localStorageService.setTokens(data);\n    dispatch(authRequestSuccess({\n      userId: data.userId\n    }));\n    history.push(\"/users\");\n  } catch (error) {\n    dispatch(authRequestFailed(error.message));\n  }\n};\nexport const logOut = () => dispatch => {\n  localStorageService.removeAuthData();\n  dispatch(userLoggedOut());\n  history.push(\"/\");\n};\nexport const loadUsersList = () => async dispatch => {\n  dispatch(usersRequested());\n  try {\n    const {\n      content\n    } = await userService.get();\n    dispatch(usersReceived(content));\n  } catch (error) {\n    dispatch(usersRequestFiled(error.message));\n  }\n};\nexport const updateUser = payload => async dispatch => {\n  dispatch(userUpdateRequested());\n  try {\n    const {\n      content\n    } = await userService.update(payload);\n    dispatch(userUpdateSuccess(content));\n    history.push(`/users/${content._id}`);\n  } catch (error) {\n    dispatch(userUpdateFailed(error.message));\n  }\n};\nexport const getUsersList = () => state => state.users.entities;\nexport const getCurrentUserData = () => state => {\n  return state.users.entities ? state.users.entities.find(u => u._id === state.users.auth.userId) : null;\n};\nexport const getUserById = userId => state => {\n  if (state.users.entities) {\n    return state.users.entities.find(u => u._id === userId);\n  }\n};\nexport const getIsLoggedIn = () => state => state.users.isLoggedIn;\nexport const getDataStatus = () => state => state.users.dataLoaded;\nexport const getUsersLoadingStatus = () => state => state.users.isLoading;\nexport const getCurrentUserId = () => state => {\n  var _state$users$auth;\n  return (_state$users$auth = state.users.auth) === null || _state$users$auth === void 0 ? void 0 : _state$users$auth.userId;\n};\nexport const getAuthErrors = () => state => state.users.error;\nexport default usersReducer;","map":{"version":3,"names":["createAction","createSlice","authService","localStorageService","userService","generateAuthError","history","initialState","getAccessToken","entities","isLoading","error","auth","userId","getUserId","isLoggedIn","dataLoaded","usersSlice","name","reducers","usersRequested","state","usersReceived","action","payload","usersRequestFiled","authRequestSuccess","authRequestFailed","userCreated","push","userLoggedOut","userUpdateSuccess","findIndex","u","_id","authRequested","reducer","usersReducer","actions","userUpdateFailed","userUpdateRequested","login","_ref","redirect","dispatch","email","password","data","setTokens","console","log","code","message","response","errorMessage","signUp","register","logOut","removeAuthData","loadUsersList","content","get","updateUser","update","getUsersList","users","getCurrentUserData","find","getUserById","getIsLoggedIn","getDataStatus","getUsersLoadingStatus","getCurrentUserId","_state$users$auth","getAuthErrors"],"sources":["/Users/natellaverde/Проекты/MC_Portfolio/src/app/store/users.js"],"sourcesContent":["import { createAction, createSlice } from \"@reduxjs/toolkit\";\nimport authService from \"../services/auth.service\";\nimport localStorageService from \"../services/localStorage.service\";\nimport userService from \"../services/user.service\";\nimport { generateAuthError } from \"../utils/generateAuthError\";\nimport history from \"../utils/history\";\nconst initialState = localStorageService.getAccessToken()\n    ? {\n          entities: null,\n          isLoading: true,\n          error: null,\n          auth: { userId: localStorageService.getUserId() },\n          isLoggedIn: true,\n          dataLoaded: false\n      }\n    : {\n          entities: null,\n          isLoading: false,\n          error: null,\n          auth: null,\n          isLoggedIn: false,\n          dataLoaded: false\n      };\n\nconst usersSlice = createSlice({\n    name: \"users\",\n    initialState,\n    reducers: {\n        usersRequested: (state) => {\n            state.isLoading = true;\n        },\n        usersReceived: (state, action) => {\n            state.entities = action.payload;\n            state.dataLoaded = true;\n            state.isLoading = false;\n        },\n        usersRequestFiled: (state, action) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        },\n        authRequestSuccess: (state, action) => {\n            state.auth = action.payload;\n            state.isLoggedIn = true;\n        },\n        authRequestFailed: (state, action) => {\n            state.error = action.payload;\n        },\n        userCreated: (state, action) => {\n            state.entities.push(action.payload);\n        },\n        userLoggedOut: (state) => {\n            state.entities = null;\n            state.isLoggedIn = false;\n            state.auth = null;\n            state.dataLoaded = false;\n        },\n        userUpdateSuccess: (state, action) => {\n            state.entities[\n                state.entities.findIndex((u) => u._id === action.payload._id)\n            ] = action.payload;\n        },\n        authRequested: (state) => {\n            state.error = null;\n        }\n    }\n});\n\nconst { reducer: usersReducer, actions } = usersSlice;\nconst {\n    usersRequested,\n    usersReceived,\n    usersRequestFiled,\n    authRequestFailed,\n    authRequestSuccess,\n    userLoggedOut,\n    userUpdateSuccess\n} = actions;\n\nconst authRequested = createAction(\"users/authRequested\");\nconst userUpdateFailed = createAction(\"users/userUpdateFailed\");\nconst userUpdateRequested = createAction(\"users/userUpdateRequested\");\n\nexport const login =\n    ({ payload, redirect }) =>\n    async (dispatch) => {\n        const { email, password } = payload;\n        dispatch(authRequested());\n        try {\n            const data = await authService.login({ email, password });\n            localStorageService.setTokens(data);\n            dispatch(authRequestSuccess({ userId: data.userId }));\n            history.push(redirect);\n        } catch (error) {\n            console.log(\"err\", error);\n            const { code, message } = error.response.data.error;\n            if (code === 400) {\n                const errorMessage = generateAuthError(message);\n                dispatch(authRequestFailed(errorMessage));\n            } else {\n                dispatch(authRequestFailed(error.message));\n            }\n        }\n    };\n\nexport const signUp = (payload) =>\n    async (dispatch) => {\n        dispatch(authRequested());\n        try {\n            const data = await authService.register(payload);\n            localStorageService.setTokens(data);\n            dispatch(authRequestSuccess({ userId: data.userId }));\n            history.push(\"/users\");\n        } catch (error) {\n            dispatch(authRequestFailed(error.message));\n        }\n    };\nexport const logOut = () => (dispatch) => {\n    localStorageService.removeAuthData();\n    dispatch(userLoggedOut());\n    history.push(\"/\");\n};\nexport const loadUsersList = () => async (dispatch) => {\n    dispatch(usersRequested());\n    try {\n        const { content } = await userService.get();\n        dispatch(usersReceived(content));\n    } catch (error) {\n        dispatch(usersRequestFiled(error.message));\n    }\n};\nexport const updateUser = (payload) => async (dispatch) => {\n    dispatch(userUpdateRequested());\n    try {\n        const { content } = await userService.update(payload);\n        dispatch(userUpdateSuccess(content));\n        history.push(`/users/${content._id}`);\n    } catch (error) {\n        dispatch(userUpdateFailed(error.message));\n    }\n};\n\nexport const getUsersList = () => (state) => state.users.entities;\nexport const getCurrentUserData = () => (state) => {\n    return state.users.entities\n        ? state.users.entities.find((u) => u._id === state.users.auth.userId)\n        : null;\n};\nexport const getUserById = (userId) => (state) => {\n    if (state.users.entities) {\n        return state.users.entities.find((u) => u._id === userId);\n    }\n};\n\nexport const getIsLoggedIn = () => (state) => state.users.isLoggedIn;\nexport const getDataStatus = () => (state) => state.users.dataLoaded;\nexport const getUsersLoadingStatus = () => (state) => state.users.isLoading;\nexport const getCurrentUserId = () => (state) => state.users.auth?.userId;\nexport const getAuthErrors = () => (state) => state.users.error;\nexport default usersReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}