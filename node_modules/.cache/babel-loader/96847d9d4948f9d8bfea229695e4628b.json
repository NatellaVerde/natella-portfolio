{"ast":null,"code":"import { getCurrentHub, addBreadcrumb, addGlobalEventProcessor, prepareEvent, setContext, captureException } from '@sentry/core';\nimport { GLOBAL_OBJ, logger, uuid4, htmlTreeAsString, addInstrumentationHandler, browserPerformanceTimeOrigin, createEnvelope, createEventEnvelopeHeaders, getSdkMetadataForEnvelopeHeader, isNodeEnv, dropUndefinedKeys } from '@sentry/utils';\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and replay packages should `@sentry/browser` import\n// from `@sentry/replay` in the future\nconst WINDOW = GLOBAL_OBJ;\nconst REPLAY_SESSION_KEY = 'sentryReplaySession';\nconst REPLAY_EVENT_NAME = 'replay_event';\nconst UNABLE_TO_SEND_REPLAY = 'Unable to send Replay';\n\n// The idle limit for a session\nconst SESSION_IDLE_DURATION = 300000; // 5 minutes in ms\n\n// Grace period to keep a session when a user changes tabs or hides window\nconst VISIBILITY_CHANGE_TIMEOUT = SESSION_IDLE_DURATION;\n\n// The maximum length of a session\nconst MAX_SESSION_LIFE = 3600000; // 60 minutes\n\n/** The select to use for the `maskAllText` option  */\nconst MASK_ALL_TEXT_SELECTOR = 'body *:not(style), body *:not(script)';\n\n/** Default flush delays */\nconst DEFAULT_FLUSH_MIN_DELAY = 5000;\nconst DEFAULT_FLUSH_MAX_DELAY = 5000;\n\n/* How long to wait for error checkouts */\nconst ERROR_CHECKOUT_TIME = 60000;\nconst RETRY_BASE_INTERVAL = 5000;\nconst RETRY_MAX_COUNT = 3;\n\n/*! *****************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nfunction __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nfunction __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n}\nfunction __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\nvar NodeType;\n(function (NodeType) {\n  NodeType[NodeType[\"Document\"] = 0] = \"Document\";\n  NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\n  NodeType[NodeType[\"Element\"] = 2] = \"Element\";\n  NodeType[NodeType[\"Text\"] = 3] = \"Text\";\n  NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\n  NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\n})(NodeType || (NodeType = {}));\nfunction isElement(n) {\n  return n.nodeType === n.ELEMENT_NODE;\n}\nfunction isShadowRoot(n) {\n  var _a;\n  var host = (_a = n) === null || _a === void 0 ? void 0 : _a.host;\n  return Boolean(host && host.shadowRoot && host.shadowRoot === n);\n}\nfunction maskInputValue(_a) {\n  var input = _a.input,\n    maskInputSelector = _a.maskInputSelector,\n    unmaskInputSelector = _a.unmaskInputSelector,\n    maskInputOptions = _a.maskInputOptions,\n    tagName = _a.tagName,\n    type = _a.type,\n    value = _a.value,\n    maskInputFn = _a.maskInputFn;\n  var text = value || '';\n  if (unmaskInputSelector && input.matches(unmaskInputSelector)) {\n    return text;\n  }\n  if (maskInputOptions[tagName.toLowerCase()] || maskInputOptions[type] || maskInputSelector && input.matches(maskInputSelector)) {\n    if (maskInputFn) {\n      text = maskInputFn(text);\n    } else {\n      text = '*'.repeat(text.length);\n    }\n  }\n  return text;\n}\nvar ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\nfunction is2DCanvasBlank(canvas) {\n  var ctx = canvas.getContext('2d');\n  if (!ctx) return true;\n  var chunkSize = 50;\n  for (var x = 0; x < canvas.width; x += chunkSize) {\n    for (var y = 0; y < canvas.height; y += chunkSize) {\n      var getImageData = ctx.getImageData;\n      var originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData ? getImageData[ORIGINAL_ATTRIBUTE_NAME] : getImageData;\n      var pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\n      if (pixelBuffer.some(function (pixel) {\n        return pixel !== 0;\n      })) return false;\n    }\n  }\n  return true;\n}\nvar _id = 1;\nvar tagNameRegex = new RegExp('[^a-z0-9-_:]');\nvar IGNORED_NODE = -2;\nfunction genId() {\n  return _id++;\n}\nfunction getValidTagName(element) {\n  if (element instanceof HTMLFormElement) {\n    return 'form';\n  }\n  var processedTagName = element.tagName.toLowerCase().trim();\n  if (tagNameRegex.test(processedTagName)) {\n    return 'div';\n  }\n  return processedTagName;\n}\nfunction getCssRulesString(s) {\n  try {\n    var rules = s.rules || s.cssRules;\n    return rules ? Array.from(rules).map(getCssRuleString).join('') : null;\n  } catch (error) {\n    return null;\n  }\n}\nfunction getCssRuleString(rule) {\n  var cssStringified = rule.cssText;\n  if (isCSSImportRule(rule)) {\n    try {\n      cssStringified = getCssRulesString(rule.styleSheet) || cssStringified;\n    } catch (_a) {}\n  }\n  return cssStringified;\n}\nfunction isCSSImportRule(rule) {\n  return 'styleSheet' in rule;\n}\nfunction stringifyStyleSheet(sheet) {\n  return sheet.cssRules ? Array.from(sheet.cssRules).map(function (rule) {\n    return rule.cssText || '';\n  }).join('') : '';\n}\nfunction extractOrigin(url) {\n  var origin = '';\n  if (url.indexOf('//') > -1) {\n    origin = url.split('/').slice(0, 3).join('/');\n  } else {\n    origin = url.split('/')[0];\n  }\n  origin = origin.split('?')[0];\n  return origin;\n}\nvar canvasService;\nvar canvasCtx;\nvar URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\nvar RELATIVE_PATH = /^(?!www\\.|(?:http|ftp)s?:\\/\\/|[A-Za-z]:\\\\|\\/\\/|#).*/;\nvar DATA_URI = /^(data:)([^,]*),(.*)/i;\nfunction absoluteToStylesheet(cssText, href) {\n  return (cssText || '').replace(URL_IN_CSS_REF, function (origin, quote1, path1, quote2, path2, path3) {\n    var filePath = path1 || path2 || path3;\n    var maybeQuote = quote1 || quote2 || '';\n    if (!filePath) {\n      return origin;\n    }\n    if (!RELATIVE_PATH.test(filePath)) {\n      return \"url(\" + maybeQuote + filePath + maybeQuote + \")\";\n    }\n    if (DATA_URI.test(filePath)) {\n      return \"url(\" + maybeQuote + filePath + maybeQuote + \")\";\n    }\n    if (filePath[0] === '/') {\n      return \"url(\" + maybeQuote + (extractOrigin(href) + filePath) + maybeQuote + \")\";\n    }\n    var stack = href.split('/');\n    var parts = filePath.split('/');\n    stack.pop();\n    for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n      var part = parts_1[_i];\n      if (part === '.') {\n        continue;\n      } else if (part === '..') {\n        stack.pop();\n      } else {\n        stack.push(part);\n      }\n    }\n    return \"url(\" + maybeQuote + stack.join('/') + maybeQuote + \")\";\n  });\n}\nvar SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\nvar SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\n  if (attributeValue.trim() === '') {\n    return attributeValue;\n  }\n  var pos = 0;\n  function collectCharacters(regEx) {\n    var chars;\n    var match = regEx.exec(attributeValue.substring(pos));\n    if (match) {\n      chars = match[0];\n      pos += chars.length;\n      return chars;\n    }\n    return '';\n  }\n  var output = [];\n  while (true) {\n    collectCharacters(SRCSET_COMMAS_OR_SPACES);\n    if (pos >= attributeValue.length) {\n      break;\n    }\n    var url = collectCharacters(SRCSET_NOT_SPACES);\n    if (url.slice(-1) === ',') {\n      url = absoluteToDoc(doc, url.substring(0, url.length - 1));\n      output.push(url);\n    } else {\n      var descriptorsStr = '';\n      url = absoluteToDoc(doc, url);\n      var inParens = false;\n      while (true) {\n        var c = attributeValue.charAt(pos);\n        if (c === '') {\n          output.push((url + descriptorsStr).trim());\n          break;\n        } else if (!inParens) {\n          if (c === ',') {\n            pos += 1;\n            output.push((url + descriptorsStr).trim());\n            break;\n          } else if (c === '(') {\n            inParens = true;\n          }\n        } else {\n          if (c === ')') {\n            inParens = false;\n          }\n        }\n        descriptorsStr += c;\n        pos += 1;\n      }\n    }\n  }\n  return output.join(', ');\n}\nfunction absoluteToDoc(doc, attributeValue) {\n  if (!attributeValue || attributeValue.trim() === '') {\n    return attributeValue;\n  }\n  var a = doc.createElement('a');\n  a.href = attributeValue;\n  return a.href;\n}\nfunction isSVGElement(el) {\n  return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\n}\nfunction getHref() {\n  var a = document.createElement('a');\n  a.href = '';\n  return a.href;\n}\nfunction transformAttribute(doc, tagName, name, value) {\n  if (name === 'src' || name === 'href' && value) {\n    return absoluteToDoc(doc, value);\n  } else if (name === 'xlink:href' && value && value[0] !== '#') {\n    return absoluteToDoc(doc, value);\n  } else if (name === 'background' && value && (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\n    return absoluteToDoc(doc, value);\n  } else if (name === 'srcset' && value) {\n    return getAbsoluteSrcsetString(doc, value);\n  } else if (name === 'style' && value) {\n    return absoluteToStylesheet(value, getHref());\n  } else if (tagName === 'object' && name === 'data' && value) {\n    return absoluteToDoc(doc, value);\n  } else {\n    return value;\n  }\n}\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\n  if (unblockSelector && element.matches(unblockSelector)) {\n    return false;\n  }\n  if (typeof blockClass === 'string') {\n    if (element.classList.contains(blockClass)) {\n      return true;\n    }\n  } else {\n    for (var eIndex = 0; eIndex < element.classList.length; eIndex++) {\n      var className = element.classList[eIndex];\n      if (blockClass.test(className)) {\n        return true;\n      }\n    }\n  }\n  if (blockSelector) {\n    return element.matches(blockSelector);\n  }\n  return false;\n}\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextSelector) {\n  if (!node) {\n    return false;\n  }\n  if (node.nodeType === node.ELEMENT_NODE) {\n    if (unmaskTextSelector) {\n      if (node.matches(unmaskTextSelector) || node.closest(unmaskTextSelector)) {\n        return false;\n      }\n    }\n    if (typeof maskTextClass === 'string') {\n      if (node.classList.contains(maskTextClass)) {\n        return true;\n      }\n    } else {\n      for (var eIndex = 0; eIndex < node.classList.length; eIndex++) {\n        var className = node.classList[eIndex];\n        if (maskTextClass.test(className)) {\n          return true;\n        }\n      }\n    }\n    if (maskTextSelector) {\n      if (node.matches(maskTextSelector)) {\n        return true;\n      }\n    }\n    return needMaskingText(node.parentNode, maskTextClass, maskTextSelector, unmaskTextSelector);\n  }\n  if (node.nodeType === node.TEXT_NODE) {\n    return needMaskingText(node.parentNode, maskTextClass, maskTextSelector, unmaskTextSelector);\n  }\n  return needMaskingText(node.parentNode, maskTextClass, maskTextSelector, unmaskTextSelector);\n}\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\n  var win = iframeEl.contentWindow;\n  if (!win) {\n    return;\n  }\n  var fired = false;\n  var readyState;\n  try {\n    readyState = win.document.readyState;\n  } catch (error) {\n    return;\n  }\n  if (readyState !== 'complete') {\n    var timer_1 = setTimeout(function () {\n      if (!fired) {\n        listener();\n        fired = true;\n      }\n    }, iframeLoadTimeout);\n    iframeEl.addEventListener('load', function () {\n      clearTimeout(timer_1);\n      fired = true;\n      listener();\n    });\n    return;\n  }\n  var blankUrl = 'about:blank';\n  if (win.location.href !== blankUrl || iframeEl.src === blankUrl || iframeEl.src === '') {\n    setTimeout(listener, 0);\n    return;\n  }\n  iframeEl.addEventListener('load', listener);\n}\nfunction serializeNode(n, options) {\n  var _a;\n  var doc = options.doc,\n    blockClass = options.blockClass,\n    blockSelector = options.blockSelector,\n    unblockSelector = options.unblockSelector,\n    maskTextClass = options.maskTextClass,\n    maskTextSelector = options.maskTextSelector,\n    unmaskTextSelector = options.unmaskTextSelector,\n    inlineStylesheet = options.inlineStylesheet,\n    maskInputSelector = options.maskInputSelector,\n    unmaskInputSelector = options.unmaskInputSelector,\n    _b = options.maskInputOptions,\n    maskInputOptions = _b === void 0 ? {} : _b,\n    maskTextFn = options.maskTextFn,\n    maskInputFn = options.maskInputFn,\n    _c = options.dataURLOptions,\n    dataURLOptions = _c === void 0 ? {} : _c,\n    inlineImages = options.inlineImages,\n    recordCanvas = options.recordCanvas,\n    keepIframeSrcFn = options.keepIframeSrcFn;\n  var rootId;\n  if (doc.__sn) {\n    var docId = doc.__sn.id;\n    rootId = docId === 1 ? undefined : docId;\n  }\n  switch (n.nodeType) {\n    case n.DOCUMENT_NODE:\n      if (n.compatMode !== 'CSS1Compat') {\n        return {\n          type: NodeType.Document,\n          childNodes: [],\n          compatMode: n.compatMode,\n          rootId: rootId\n        };\n      } else {\n        return {\n          type: NodeType.Document,\n          childNodes: [],\n          rootId: rootId\n        };\n      }\n    case n.DOCUMENT_TYPE_NODE:\n      return {\n        type: NodeType.DocumentType,\n        name: n.name,\n        publicId: n.publicId,\n        systemId: n.systemId,\n        rootId: rootId\n      };\n    case n.ELEMENT_NODE:\n      var needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\n      var tagName = getValidTagName(n);\n      var attributes_1 = {};\n      for (var _i = 0, _d = Array.from(n.attributes); _i < _d.length; _i++) {\n        var _e = _d[_i],\n          name_1 = _e.name,\n          value = _e.value;\n        attributes_1[name_1] = transformAttribute(doc, tagName, name_1, value);\n      }\n      if (tagName === 'link' && inlineStylesheet) {\n        var stylesheet = Array.from(doc.styleSheets).find(function (s) {\n          return s.href === n.href;\n        });\n        var cssText = null;\n        if (stylesheet) {\n          cssText = getCssRulesString(stylesheet);\n        }\n        if (cssText) {\n          delete attributes_1.rel;\n          delete attributes_1.href;\n          attributes_1._cssText = absoluteToStylesheet(cssText, stylesheet.href);\n        }\n      }\n      if (tagName === 'style' && n.sheet && !(n.innerText || n.textContent || '').trim().length) {\n        var cssText = getCssRulesString(n.sheet);\n        if (cssText) {\n          attributes_1._cssText = absoluteToStylesheet(cssText, getHref());\n        }\n      }\n      if (tagName === 'input' || tagName === 'textarea' || tagName === 'select') {\n        var value = n.value;\n        if (attributes_1.type !== 'radio' && attributes_1.type !== 'checkbox' && attributes_1.type !== 'submit' && attributes_1.type !== 'button' && value) {\n          attributes_1.value = maskInputValue({\n            input: n,\n            type: attributes_1.type,\n            tagName: tagName,\n            value: value,\n            maskInputSelector: maskInputSelector,\n            unmaskInputSelector: unmaskInputSelector,\n            maskInputOptions: maskInputOptions,\n            maskInputFn: maskInputFn\n          });\n        } else if (n.checked) {\n          attributes_1.checked = n.checked;\n        }\n      }\n      if (tagName === 'option') {\n        if (n.selected && !maskInputOptions['select']) {\n          attributes_1.selected = true;\n        } else {\n          delete attributes_1.selected;\n        }\n      }\n      if (tagName === 'canvas' && recordCanvas) {\n        if (n.__context === '2d') {\n          if (!is2DCanvasBlank(n)) {\n            attributes_1.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n          }\n        } else if (!('__context' in n)) {\n          var canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n          var blankCanvas = document.createElement('canvas');\n          blankCanvas.width = n.width;\n          blankCanvas.height = n.height;\n          var blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n          if (canvasDataURL !== blankCanvasDataURL) {\n            attributes_1.rr_dataURL = canvasDataURL;\n          }\n        }\n      }\n      if (tagName === 'img' && inlineImages) {\n        if (!canvasService) {\n          canvasService = doc.createElement('canvas');\n          canvasCtx = canvasService.getContext('2d');\n        }\n        var image_1 = n;\n        var oldValue_1 = image_1.crossOrigin;\n        image_1.crossOrigin = 'anonymous';\n        var recordInlineImage = function () {\n          try {\n            canvasService.width = image_1.naturalWidth;\n            canvasService.height = image_1.naturalHeight;\n            canvasCtx.drawImage(image_1, 0, 0);\n            attributes_1.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n          } catch (err) {\n            console.warn(\"Cannot inline img src=\" + image_1.currentSrc + \"! Error: \" + err);\n          }\n          oldValue_1 ? attributes_1.crossOrigin = oldValue_1 : delete attributes_1.crossOrigin;\n        };\n        if (image_1.complete && image_1.naturalWidth !== 0) recordInlineImage();else image_1.onload = recordInlineImage;\n      }\n      if (tagName === 'audio' || tagName === 'video') {\n        attributes_1.rr_mediaState = n.paused ? 'paused' : 'played';\n        attributes_1.rr_mediaCurrentTime = n.currentTime;\n      }\n      if (n.scrollLeft) {\n        attributes_1.rr_scrollLeft = n.scrollLeft;\n      }\n      if (n.scrollTop) {\n        attributes_1.rr_scrollTop = n.scrollTop;\n      }\n      if (needBlock) {\n        var _f = n.getBoundingClientRect(),\n          width = _f.width,\n          height = _f.height;\n        attributes_1 = {\n          \"class\": attributes_1[\"class\"],\n          rr_width: width + \"px\",\n          rr_height: height + \"px\"\n        };\n      }\n      if (tagName === 'iframe' && !keepIframeSrcFn(attributes_1.src)) {\n        if (!n.contentDocument) {\n          attributes_1.rr_src = attributes_1.src;\n        }\n        delete attributes_1.src;\n      }\n      return {\n        type: NodeType.Element,\n        tagName: tagName,\n        attributes: attributes_1,\n        childNodes: [],\n        isSVG: isSVGElement(n) || undefined,\n        needBlock: needBlock,\n        rootId: rootId\n      };\n    case n.TEXT_NODE:\n      var parentTagName = n.parentNode && n.parentNode.tagName;\n      var textContent = n.textContent;\n      var isStyle = parentTagName === 'STYLE' ? true : undefined;\n      var isScript = parentTagName === 'SCRIPT' ? true : undefined;\n      if (isStyle && textContent) {\n        try {\n          if (n.nextSibling || n.previousSibling) {} else if ((_a = n.parentNode.sheet) === null || _a === void 0 ? void 0 : _a.cssRules) {\n            textContent = stringifyStyleSheet(n.parentNode.sheet);\n          }\n        } catch (err) {\n          console.warn(\"Cannot get CSS styles from text's parentNode. Error: \" + err, n);\n        }\n        textContent = absoluteToStylesheet(textContent, getHref());\n      }\n      if (isScript) {\n        textContent = 'SCRIPT_PLACEHOLDER';\n      }\n      if (!isStyle && !isScript && needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextSelector) && textContent) {\n        textContent = maskTextFn ? maskTextFn(textContent) : textContent.replace(/[\\S]/g, '*');\n      }\n      return {\n        type: NodeType.Text,\n        textContent: textContent || '',\n        isStyle: isStyle,\n        rootId: rootId\n      };\n    case n.CDATA_SECTION_NODE:\n      return {\n        type: NodeType.CDATA,\n        textContent: '',\n        rootId: rootId\n      };\n    case n.COMMENT_NODE:\n      return {\n        type: NodeType.Comment,\n        textContent: n.textContent || '',\n        rootId: rootId\n      };\n    default:\n      return false;\n  }\n}\nfunction lowerIfExists(maybeAttr) {\n  if (maybeAttr === undefined) {\n    return '';\n  } else {\n    return maybeAttr.toLowerCase();\n  }\n}\nfunction slimDOMExcluded(sn, slimDOMOptions) {\n  if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\n    return true;\n  } else if (sn.type === NodeType.Element) {\n    if (slimDOMOptions.script && (sn.tagName === 'script' || sn.tagName === 'link' && sn.attributes.rel === 'preload' && sn.attributes.as === 'script' || sn.tagName === 'link' && sn.attributes.rel === 'prefetch' && typeof sn.attributes.href === 'string' && sn.attributes.href.endsWith('.js'))) {\n      return true;\n    } else if (slimDOMOptions.headFavicon && (sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon' || sn.tagName === 'meta' && (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) || lowerIfExists(sn.attributes.name) === 'application-name' || lowerIfExists(sn.attributes.rel) === 'icon' || lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' || lowerIfExists(sn.attributes.rel) === 'shortcut icon'))) {\n      return true;\n    } else if (sn.tagName === 'meta') {\n      if (slimDOMOptions.headMetaDescKeywords && lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\n        return true;\n      } else if (slimDOMOptions.headMetaSocial && (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) || lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) || lowerIfExists(sn.attributes.name) === 'pinterest')) {\n        return true;\n      } else if (slimDOMOptions.headMetaRobots && (lowerIfExists(sn.attributes.name) === 'robots' || lowerIfExists(sn.attributes.name) === 'googlebot' || lowerIfExists(sn.attributes.name) === 'bingbot')) {\n        return true;\n      } else if (slimDOMOptions.headMetaHttpEquiv && sn.attributes['http-equiv'] !== undefined) {\n        return true;\n      } else if (slimDOMOptions.headMetaAuthorship && (lowerIfExists(sn.attributes.name) === 'author' || lowerIfExists(sn.attributes.name) === 'generator' || lowerIfExists(sn.attributes.name) === 'framework' || lowerIfExists(sn.attributes.name) === 'publisher' || lowerIfExists(sn.attributes.name) === 'progid' || lowerIfExists(sn.attributes.property).match(/^article:/) || lowerIfExists(sn.attributes.property).match(/^product:/))) {\n        return true;\n      } else if (slimDOMOptions.headMetaVerification && (lowerIfExists(sn.attributes.name) === 'google-site-verification' || lowerIfExists(sn.attributes.name) === 'yandex-verification' || lowerIfExists(sn.attributes.name) === 'csrf-token' || lowerIfExists(sn.attributes.name) === 'p:domain_verify' || lowerIfExists(sn.attributes.name) === 'verify-v1' || lowerIfExists(sn.attributes.name) === 'verification' || lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction serializeNodeWithId(n, options) {\n  var doc = options.doc,\n    map = options.map,\n    blockClass = options.blockClass,\n    blockSelector = options.blockSelector,\n    unblockSelector = options.unblockSelector,\n    maskTextClass = options.maskTextClass,\n    maskTextSelector = options.maskTextSelector,\n    unmaskTextSelector = options.unmaskTextSelector,\n    _a = options.skipChild,\n    skipChild = _a === void 0 ? false : _a,\n    _b = options.inlineStylesheet,\n    inlineStylesheet = _b === void 0 ? true : _b,\n    maskInputSelector = options.maskInputSelector,\n    unmaskInputSelector = options.unmaskInputSelector,\n    _c = options.maskInputOptions,\n    maskInputOptions = _c === void 0 ? {} : _c,\n    maskTextFn = options.maskTextFn,\n    maskInputFn = options.maskInputFn,\n    slimDOMOptions = options.slimDOMOptions,\n    _d = options.dataURLOptions,\n    dataURLOptions = _d === void 0 ? {} : _d,\n    _e = options.inlineImages,\n    inlineImages = _e === void 0 ? false : _e,\n    _f = options.recordCanvas,\n    recordCanvas = _f === void 0 ? false : _f,\n    onSerialize = options.onSerialize,\n    onIframeLoad = options.onIframeLoad,\n    _g = options.iframeLoadTimeout,\n    iframeLoadTimeout = _g === void 0 ? 5000 : _g,\n    _h = options.keepIframeSrcFn,\n    keepIframeSrcFn = _h === void 0 ? function () {\n      return false;\n    } : _h;\n  var _j = options.preserveWhiteSpace,\n    preserveWhiteSpace = _j === void 0 ? true : _j;\n  var _serializedNode = serializeNode(n, {\n    doc: doc,\n    blockClass: blockClass,\n    blockSelector: blockSelector,\n    unblockSelector: unblockSelector,\n    maskTextClass: maskTextClass,\n    maskTextSelector: maskTextSelector,\n    unmaskTextSelector: unmaskTextSelector,\n    inlineStylesheet: inlineStylesheet,\n    maskInputSelector: maskInputSelector,\n    unmaskInputSelector: unmaskInputSelector,\n    maskInputOptions: maskInputOptions,\n    maskTextFn: maskTextFn,\n    maskInputFn: maskInputFn,\n    dataURLOptions: dataURLOptions,\n    inlineImages: inlineImages,\n    recordCanvas: recordCanvas,\n    keepIframeSrcFn: keepIframeSrcFn\n  });\n  if (!_serializedNode) {\n    console.warn(n, 'not serialized');\n    return null;\n  }\n  var id;\n  if ('__sn' in n) {\n    id = n.__sn.id;\n  } else if (slimDOMExcluded(_serializedNode, slimDOMOptions) || !preserveWhiteSpace && _serializedNode.type === NodeType.Text && !_serializedNode.isStyle && !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length) {\n    id = IGNORED_NODE;\n  } else {\n    id = genId();\n  }\n  var serializedNode = Object.assign(_serializedNode, {\n    id: id\n  });\n  n.__sn = serializedNode;\n  if (id === IGNORED_NODE) {\n    return null;\n  }\n  map[id] = n;\n  if (onSerialize) {\n    onSerialize(n);\n  }\n  var recordChild = !skipChild;\n  if (serializedNode.type === NodeType.Element) {\n    recordChild = recordChild && !serializedNode.needBlock;\n    delete serializedNode.needBlock;\n    if (n.shadowRoot) serializedNode.isShadowHost = true;\n  }\n  if ((serializedNode.type === NodeType.Document || serializedNode.type === NodeType.Element) && recordChild) {\n    if (slimDOMOptions.headWhitespace && _serializedNode.type === NodeType.Element && _serializedNode.tagName === 'head') {\n      preserveWhiteSpace = false;\n    }\n    var bypassOptions = {\n      doc: doc,\n      map: map,\n      blockClass: blockClass,\n      blockSelector: blockSelector,\n      unblockSelector: unblockSelector,\n      maskTextClass: maskTextClass,\n      maskTextSelector: maskTextSelector,\n      unmaskTextSelector: unmaskTextSelector,\n      skipChild: skipChild,\n      inlineStylesheet: inlineStylesheet,\n      maskInputSelector: maskInputSelector,\n      unmaskInputSelector: unmaskInputSelector,\n      maskInputOptions: maskInputOptions,\n      maskTextFn: maskTextFn,\n      maskInputFn: maskInputFn,\n      slimDOMOptions: slimDOMOptions,\n      dataURLOptions: dataURLOptions,\n      inlineImages: inlineImages,\n      recordCanvas: recordCanvas,\n      preserveWhiteSpace: preserveWhiteSpace,\n      onSerialize: onSerialize,\n      onIframeLoad: onIframeLoad,\n      iframeLoadTimeout: iframeLoadTimeout,\n      keepIframeSrcFn: keepIframeSrcFn\n    };\n    for (var _i = 0, _k = Array.from(n.childNodes); _i < _k.length; _i++) {\n      var childN = _k[_i];\n      var serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n      if (serializedChildNode) {\n        serializedNode.childNodes.push(serializedChildNode);\n      }\n    }\n    if (isElement(n) && n.shadowRoot) {\n      for (var _l = 0, _m = Array.from(n.shadowRoot.childNodes); _l < _m.length; _l++) {\n        var childN = _m[_l];\n        var serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n        if (serializedChildNode) {\n          serializedChildNode.isShadow = true;\n          serializedNode.childNodes.push(serializedChildNode);\n        }\n      }\n    }\n  }\n  if (n.parentNode && isShadowRoot(n.parentNode)) {\n    serializedNode.isShadow = true;\n  }\n  if (serializedNode.type === NodeType.Element && serializedNode.tagName === 'iframe') {\n    onceIframeLoaded(n, function () {\n      var iframeDoc = n.contentDocument;\n      if (iframeDoc && onIframeLoad) {\n        var serializedIframeNode = serializeNodeWithId(iframeDoc, {\n          doc: iframeDoc,\n          map: map,\n          blockClass: blockClass,\n          blockSelector: blockSelector,\n          unblockSelector: unblockSelector,\n          maskTextClass: maskTextClass,\n          maskTextSelector: maskTextSelector,\n          unmaskTextSelector: unmaskTextSelector,\n          skipChild: false,\n          inlineStylesheet: inlineStylesheet,\n          maskInputSelector: maskInputSelector,\n          unmaskInputSelector: unmaskInputSelector,\n          maskInputOptions: maskInputOptions,\n          maskTextFn: maskTextFn,\n          maskInputFn: maskInputFn,\n          slimDOMOptions: slimDOMOptions,\n          dataURLOptions: dataURLOptions,\n          inlineImages: inlineImages,\n          recordCanvas: recordCanvas,\n          preserveWhiteSpace: preserveWhiteSpace,\n          onSerialize: onSerialize,\n          onIframeLoad: onIframeLoad,\n          iframeLoadTimeout: iframeLoadTimeout,\n          keepIframeSrcFn: keepIframeSrcFn\n        });\n        if (serializedIframeNode) {\n          onIframeLoad(n, serializedIframeNode);\n        }\n      }\n    }, iframeLoadTimeout);\n  }\n  return serializedNode;\n}\nfunction snapshot(n, options) {\n  var _a = options || {},\n    _b = _a.blockClass,\n    blockClass = _b === void 0 ? 'rr-block' : _b,\n    _c = _a.blockSelector,\n    blockSelector = _c === void 0 ? null : _c,\n    _d = _a.unblockSelector,\n    unblockSelector = _d === void 0 ? null : _d,\n    _e = _a.maskTextClass,\n    maskTextClass = _e === void 0 ? 'rr-mask' : _e,\n    _f = _a.maskTextSelector,\n    maskTextSelector = _f === void 0 ? null : _f,\n    _g = _a.unmaskTextSelector,\n    unmaskTextSelector = _g === void 0 ? null : _g,\n    _h = _a.inlineStylesheet,\n    inlineStylesheet = _h === void 0 ? true : _h,\n    _j = _a.inlineImages,\n    inlineImages = _j === void 0 ? false : _j,\n    _k = _a.recordCanvas,\n    recordCanvas = _k === void 0 ? false : _k,\n    _l = _a.maskInputSelector,\n    maskInputSelector = _l === void 0 ? null : _l,\n    _m = _a.unmaskInputSelector,\n    unmaskInputSelector = _m === void 0 ? null : _m,\n    _o = _a.maskAllInputs,\n    maskAllInputs = _o === void 0 ? false : _o,\n    maskTextFn = _a.maskTextFn,\n    maskInputFn = _a.maskInputFn,\n    _p = _a.slimDOM,\n    slimDOM = _p === void 0 ? false : _p,\n    dataURLOptions = _a.dataURLOptions,\n    preserveWhiteSpace = _a.preserveWhiteSpace,\n    onSerialize = _a.onSerialize,\n    onIframeLoad = _a.onIframeLoad,\n    iframeLoadTimeout = _a.iframeLoadTimeout,\n    _q = _a.keepIframeSrcFn,\n    keepIframeSrcFn = _q === void 0 ? function () {\n      return false;\n    } : _q;\n  var idNodeMap = {};\n  var maskInputOptions = maskAllInputs === true ? {\n    color: true,\n    date: true,\n    'datetime-local': true,\n    email: true,\n    month: true,\n    number: true,\n    range: true,\n    search: true,\n    tel: true,\n    text: true,\n    time: true,\n    url: true,\n    week: true,\n    textarea: true,\n    select: true,\n    password: true\n  } : maskAllInputs === false ? {\n    password: true\n  } : maskAllInputs;\n  var slimDOMOptions = slimDOM === true || slimDOM === 'all' ? {\n    script: true,\n    comment: true,\n    headFavicon: true,\n    headWhitespace: true,\n    headMetaDescKeywords: slimDOM === 'all',\n    headMetaSocial: true,\n    headMetaRobots: true,\n    headMetaHttpEquiv: true,\n    headMetaAuthorship: true,\n    headMetaVerification: true\n  } : slimDOM === false ? {} : slimDOM;\n  return [serializeNodeWithId(n, {\n    doc: n,\n    map: idNodeMap,\n    blockClass: blockClass,\n    blockSelector: blockSelector,\n    unblockSelector: unblockSelector,\n    maskTextClass: maskTextClass,\n    maskTextSelector: maskTextSelector,\n    unmaskTextSelector: unmaskTextSelector,\n    skipChild: false,\n    inlineStylesheet: inlineStylesheet,\n    maskInputSelector: maskInputSelector,\n    unmaskInputSelector: unmaskInputSelector,\n    maskInputOptions: maskInputOptions,\n    maskTextFn: maskTextFn,\n    maskInputFn: maskInputFn,\n    slimDOMOptions: slimDOMOptions,\n    dataURLOptions: dataURLOptions,\n    inlineImages: inlineImages,\n    recordCanvas: recordCanvas,\n    preserveWhiteSpace: preserveWhiteSpace,\n    onSerialize: onSerialize,\n    onIframeLoad: onIframeLoad,\n    iframeLoadTimeout: iframeLoadTimeout,\n    keepIframeSrcFn: keepIframeSrcFn\n  }), idNodeMap];\n}\nvar EventType;\n(function (EventType) {\n  EventType[EventType[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n  EventType[EventType[\"Load\"] = 1] = \"Load\";\n  EventType[EventType[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n  EventType[EventType[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n  EventType[EventType[\"Meta\"] = 4] = \"Meta\";\n  EventType[EventType[\"Custom\"] = 5] = \"Custom\";\n  EventType[EventType[\"Plugin\"] = 6] = \"Plugin\";\n})(EventType || (EventType = {}));\nvar IncrementalSource;\n(function (IncrementalSource) {\n  IncrementalSource[IncrementalSource[\"Mutation\"] = 0] = \"Mutation\";\n  IncrementalSource[IncrementalSource[\"MouseMove\"] = 1] = \"MouseMove\";\n  IncrementalSource[IncrementalSource[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n  IncrementalSource[IncrementalSource[\"Scroll\"] = 3] = \"Scroll\";\n  IncrementalSource[IncrementalSource[\"ViewportResize\"] = 4] = \"ViewportResize\";\n  IncrementalSource[IncrementalSource[\"Input\"] = 5] = \"Input\";\n  IncrementalSource[IncrementalSource[\"TouchMove\"] = 6] = \"TouchMove\";\n  IncrementalSource[IncrementalSource[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n  IncrementalSource[IncrementalSource[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n  IncrementalSource[IncrementalSource[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n  IncrementalSource[IncrementalSource[\"Font\"] = 10] = \"Font\";\n  IncrementalSource[IncrementalSource[\"Log\"] = 11] = \"Log\";\n  IncrementalSource[IncrementalSource[\"Drag\"] = 12] = \"Drag\";\n  IncrementalSource[IncrementalSource[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n})(IncrementalSource || (IncrementalSource = {}));\nvar MouseInteractions;\n(function (MouseInteractions) {\n  MouseInteractions[MouseInteractions[\"MouseUp\"] = 0] = \"MouseUp\";\n  MouseInteractions[MouseInteractions[\"MouseDown\"] = 1] = \"MouseDown\";\n  MouseInteractions[MouseInteractions[\"Click\"] = 2] = \"Click\";\n  MouseInteractions[MouseInteractions[\"ContextMenu\"] = 3] = \"ContextMenu\";\n  MouseInteractions[MouseInteractions[\"DblClick\"] = 4] = \"DblClick\";\n  MouseInteractions[MouseInteractions[\"Focus\"] = 5] = \"Focus\";\n  MouseInteractions[MouseInteractions[\"Blur\"] = 6] = \"Blur\";\n  MouseInteractions[MouseInteractions[\"TouchStart\"] = 7] = \"TouchStart\";\n  MouseInteractions[MouseInteractions[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n  MouseInteractions[MouseInteractions[\"TouchEnd\"] = 9] = \"TouchEnd\";\n  MouseInteractions[MouseInteractions[\"TouchCancel\"] = 10] = \"TouchCancel\";\n})(MouseInteractions || (MouseInteractions = {}));\nvar CanvasContext;\n(function (CanvasContext) {\n  CanvasContext[CanvasContext[\"2D\"] = 0] = \"2D\";\n  CanvasContext[CanvasContext[\"WebGL\"] = 1] = \"WebGL\";\n  CanvasContext[CanvasContext[\"WebGL2\"] = 2] = \"WebGL2\";\n})(CanvasContext || (CanvasContext = {}));\nvar MediaInteractions;\n(function (MediaInteractions) {\n  MediaInteractions[MediaInteractions[\"Play\"] = 0] = \"Play\";\n  MediaInteractions[MediaInteractions[\"Pause\"] = 1] = \"Pause\";\n  MediaInteractions[MediaInteractions[\"Seeked\"] = 2] = \"Seeked\";\n  MediaInteractions[MediaInteractions[\"VolumeChange\"] = 3] = \"VolumeChange\";\n})(MediaInteractions || (MediaInteractions = {}));\nvar ReplayerEvents;\n(function (ReplayerEvents) {\n  ReplayerEvents[\"Start\"] = \"start\";\n  ReplayerEvents[\"Pause\"] = \"pause\";\n  ReplayerEvents[\"Resume\"] = \"resume\";\n  ReplayerEvents[\"Resize\"] = \"resize\";\n  ReplayerEvents[\"Finish\"] = \"finish\";\n  ReplayerEvents[\"FullsnapshotRebuilded\"] = \"fullsnapshot-rebuilded\";\n  ReplayerEvents[\"LoadStylesheetStart\"] = \"load-stylesheet-start\";\n  ReplayerEvents[\"LoadStylesheetEnd\"] = \"load-stylesheet-end\";\n  ReplayerEvents[\"SkipStart\"] = \"skip-start\";\n  ReplayerEvents[\"SkipEnd\"] = \"skip-end\";\n  ReplayerEvents[\"MouseInteraction\"] = \"mouse-interaction\";\n  ReplayerEvents[\"EventCast\"] = \"event-cast\";\n  ReplayerEvents[\"CustomEvent\"] = \"custom-event\";\n  ReplayerEvents[\"Flush\"] = \"flush\";\n  ReplayerEvents[\"StateChange\"] = \"state-change\";\n  ReplayerEvents[\"PlayBack\"] = \"play-back\";\n})(ReplayerEvents || (ReplayerEvents = {}));\nfunction on(type, fn, target) {\n  if (target === void 0) {\n    target = document;\n  }\n  var options = {\n    capture: true,\n    passive: true\n  };\n  target.addEventListener(type, fn, options);\n  return function () {\n    return target.removeEventListener(type, fn, options);\n  };\n}\nfunction createMirror() {\n  return {\n    map: {},\n    getId: function (n) {\n      if (!n || !n.__sn) {\n        return -1;\n      }\n      return n.__sn.id;\n    },\n    getNode: function (id) {\n      return this.map[id] || null;\n    },\n    removeNodeFromMap: function (n) {\n      var _this = this;\n      var id = n.__sn && n.__sn.id;\n      delete this.map[id];\n      if (n.childNodes) {\n        n.childNodes.forEach(function (child) {\n          return _this.removeNodeFromMap(child);\n        });\n      }\n    },\n    has: function (id) {\n      return this.map.hasOwnProperty(id);\n    },\n    reset: function () {\n      this.map = {};\n    }\n  };\n}\nvar DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' + '\\r\\n' + 'now you can use replayer.getMirror() to access the mirror instance of a replayer,' + '\\r\\n' + 'or you can use record.mirror to access the mirror instance during recording.';\nvar _mirror = {\n  map: {},\n  getId: function () {\n    console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    return -1;\n  },\n  getNode: function () {\n    console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    return null;\n  },\n  removeNodeFromMap: function () {\n    console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n  },\n  has: function () {\n    console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    return false;\n  },\n  reset: function () {\n    console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n  }\n};\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\n  _mirror = new Proxy(_mirror, {\n    get: function (target, prop, receiver) {\n      if (prop === 'map') {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n      }\n      return Reflect.get(target, prop, receiver);\n    }\n  });\n}\nfunction throttle(func, wait, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var timeout = null;\n  var previous = 0;\n  return function (arg) {\n    var now = Date.now();\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n    var remaining = wait - (now - previous);\n    var context = this;\n    var args = arguments;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = now;\n      func.apply(context, args);\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(function () {\n        previous = options.leading === false ? 0 : Date.now();\n        timeout = null;\n        func.apply(context, args);\n      }, remaining);\n    }\n  };\n}\nfunction hookSetter(target, key, d, isRevoked, win) {\n  if (win === void 0) {\n    win = window;\n  }\n  var original = win.Object.getOwnPropertyDescriptor(target, key);\n  win.Object.defineProperty(target, key, isRevoked ? d : {\n    set: function (value) {\n      var _this = this;\n      setTimeout(function () {\n        d.set.call(_this, value);\n      }, 0);\n      if (original && original.set) {\n        original.set.call(this, value);\n      }\n    }\n  });\n  return function () {\n    return hookSetter(target, key, original || {}, true);\n  };\n}\nfunction patch(source, name, replacement) {\n  try {\n    if (!(name in source)) {\n      return function () {};\n    }\n    var original_1 = source[name];\n    var wrapped = replacement(original_1);\n    if (typeof wrapped === 'function') {\n      wrapped.prototype = wrapped.prototype || {};\n      Object.defineProperties(wrapped, {\n        __rrweb_original__: {\n          enumerable: false,\n          value: original_1\n        }\n      });\n    }\n    source[name] = wrapped;\n    return function () {\n      source[name] = original_1;\n    };\n  } catch (_a) {\n    return function () {};\n  }\n}\nfunction getWindowHeight() {\n  return window.innerHeight || document.documentElement && document.documentElement.clientHeight || document.body && document.body.clientHeight;\n}\nfunction getWindowWidth() {\n  return window.innerWidth || document.documentElement && document.documentElement.clientWidth || document.body && document.body.clientWidth;\n}\nfunction isBlocked(node, blockClass) {\n  if (!node) {\n    return false;\n  }\n  if (node.nodeType === node.ELEMENT_NODE) {\n    var needBlock_1 = false;\n    if (typeof blockClass === 'string') {\n      if (node.closest !== undefined) {\n        return node.closest('.' + blockClass) !== null;\n      } else {\n        needBlock_1 = node.classList.contains(blockClass);\n      }\n    } else {\n      node.classList.forEach(function (className) {\n        if (blockClass.test(className)) {\n          needBlock_1 = true;\n        }\n      });\n    }\n    return needBlock_1 || isBlocked(node.parentNode, blockClass);\n  }\n  if (node.nodeType === node.TEXT_NODE) {\n    return isBlocked(node.parentNode, blockClass);\n  }\n  return isBlocked(node.parentNode, blockClass);\n}\nfunction isIgnored(n) {\n  if ('__sn' in n) {\n    return n.__sn.id === IGNORED_NODE;\n  }\n  return false;\n}\nfunction isAncestorRemoved(target, mirror) {\n  if (isShadowRoot(target)) {\n    return false;\n  }\n  var id = mirror.getId(target);\n  if (!mirror.has(id)) {\n    return true;\n  }\n  if (target.parentNode && target.parentNode.nodeType === target.DOCUMENT_NODE) {\n    return false;\n  }\n  if (!target.parentNode) {\n    return true;\n  }\n  return isAncestorRemoved(target.parentNode, mirror);\n}\nfunction isTouchEvent(event) {\n  return Boolean(event.changedTouches);\n}\nfunction polyfill(win) {\n  if (win === void 0) {\n    win = window;\n  }\n  if ('NodeList' in win && !win.NodeList.prototype.forEach) {\n    win.NodeList.prototype.forEach = Array.prototype.forEach;\n  }\n  if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\n    win.DOMTokenList.prototype.forEach = Array.prototype.forEach;\n  }\n  if (!Node.prototype.contains) {\n    Node.prototype.contains = function contains(node) {\n      if (!(0 in arguments)) {\n        throw new TypeError('1 argument is required');\n      }\n      do {\n        if (this === node) {\n          return true;\n        }\n      } while (node = node && node.parentNode);\n      return false;\n    };\n  }\n}\nfunction isIframeINode(node) {\n  if ('__sn' in node) {\n    return node.__sn.type === NodeType.Element && node.__sn.tagName === 'iframe';\n  }\n  return false;\n}\nfunction hasShadowRoot(n) {\n  return Boolean(n === null || n === void 0 ? void 0 : n.shadowRoot);\n}\nfunction isNodeInLinkedList(n) {\n  return '__ln' in n;\n}\nvar DoubleLinkedList = function () {\n  function DoubleLinkedList() {\n    this.length = 0;\n    this.head = null;\n  }\n  DoubleLinkedList.prototype.get = function (position) {\n    if (position >= this.length) {\n      throw new Error('Position outside of list range');\n    }\n    var current = this.head;\n    for (var index = 0; index < position; index++) {\n      current = (current === null || current === void 0 ? void 0 : current.next) || null;\n    }\n    return current;\n  };\n  DoubleLinkedList.prototype.addNode = function (n) {\n    var node = {\n      value: n,\n      previous: null,\n      next: null\n    };\n    n.__ln = node;\n    if (n.previousSibling && isNodeInLinkedList(n.previousSibling)) {\n      var current = n.previousSibling.__ln.next;\n      node.next = current;\n      node.previous = n.previousSibling.__ln;\n      n.previousSibling.__ln.next = node;\n      if (current) {\n        current.previous = node;\n      }\n    } else if (n.nextSibling && isNodeInLinkedList(n.nextSibling) && n.nextSibling.__ln.previous) {\n      var current = n.nextSibling.__ln.previous;\n      node.previous = current;\n      node.next = n.nextSibling.__ln;\n      n.nextSibling.__ln.previous = node;\n      if (current) {\n        current.next = node;\n      }\n    } else {\n      if (this.head) {\n        this.head.previous = node;\n      }\n      node.next = this.head;\n      this.head = node;\n    }\n    this.length++;\n  };\n  DoubleLinkedList.prototype.removeNode = function (n) {\n    var current = n.__ln;\n    if (!this.head) {\n      return;\n    }\n    if (!current.previous) {\n      this.head = current.next;\n      if (this.head) {\n        this.head.previous = null;\n      }\n    } else {\n      current.previous.next = current.next;\n      if (current.next) {\n        current.next.previous = current.previous;\n      }\n    }\n    if (n.__ln) {\n      delete n.__ln;\n    }\n    this.length--;\n  };\n  return DoubleLinkedList;\n}();\nvar moveKey = function (id, parentId) {\n  return \"\".concat(id, \"@\").concat(parentId);\n};\nfunction isINode(n) {\n  return '__sn' in n;\n}\nvar MutationBuffer = function () {\n  function MutationBuffer() {\n    var _this = this;\n    this.frozen = false;\n    this.locked = false;\n    this.texts = [];\n    this.attributes = [];\n    this.removes = [];\n    this.mapRemoves = [];\n    this.movedMap = {};\n    this.addedSet = new Set();\n    this.movedSet = new Set();\n    this.droppedSet = new Set();\n    this.processMutations = function (mutations) {\n      mutations.forEach(_this.processMutation);\n      _this.emit();\n    };\n    this.emit = function () {\n      var e_1, _a, e_2, _b;\n      if (_this.frozen || _this.locked) {\n        return;\n      }\n      var adds = [];\n      var addList = new DoubleLinkedList();\n      var getNextId = function (n) {\n        var ns = n;\n        var nextId = IGNORED_NODE;\n        while (nextId === IGNORED_NODE) {\n          ns = ns && ns.nextSibling;\n          nextId = ns && _this.mirror.getId(ns);\n        }\n        return nextId;\n      };\n      var pushAdd = function (n) {\n        var _a, _b, _c, _d, _e;\n        var shadowHost = n.getRootNode ? (_a = n.getRootNode()) === null || _a === void 0 ? void 0 : _a.host : null;\n        var rootShadowHost = shadowHost;\n        while ((_c = (_b = rootShadowHost === null || rootShadowHost === void 0 ? void 0 : rootShadowHost.getRootNode) === null || _b === void 0 ? void 0 : _b.call(rootShadowHost)) === null || _c === void 0 ? void 0 : _c.host) rootShadowHost = ((_e = (_d = rootShadowHost === null || rootShadowHost === void 0 ? void 0 : rootShadowHost.getRootNode) === null || _d === void 0 ? void 0 : _d.call(rootShadowHost)) === null || _e === void 0 ? void 0 : _e.host) || null;\n        var notInDoc = !_this.doc.contains(n) && (rootShadowHost === null || !_this.doc.contains(rootShadowHost));\n        if (!n.parentNode || notInDoc) {\n          return;\n        }\n        var parentId = isShadowRoot(n.parentNode) ? _this.mirror.getId(shadowHost) : _this.mirror.getId(n.parentNode);\n        var nextId = getNextId(n);\n        if (parentId === -1 || nextId === -1) {\n          return addList.addNode(n);\n        }\n        var sn = serializeNodeWithId(n, {\n          doc: _this.doc,\n          map: _this.mirror.map,\n          blockClass: _this.blockClass,\n          blockSelector: _this.blockSelector,\n          unblockSelector: _this.unblockSelector,\n          maskTextClass: _this.maskTextClass,\n          maskTextSelector: _this.maskTextSelector,\n          unmaskTextSelector: _this.unmaskTextSelector,\n          maskInputSelector: _this.maskInputSelector,\n          unmaskInputSelector: _this.unmaskInputSelector,\n          skipChild: true,\n          inlineStylesheet: _this.inlineStylesheet,\n          maskInputOptions: _this.maskInputOptions,\n          maskTextFn: _this.maskTextFn,\n          maskInputFn: _this.maskInputFn,\n          slimDOMOptions: _this.slimDOMOptions,\n          recordCanvas: _this.recordCanvas,\n          inlineImages: _this.inlineImages,\n          onSerialize: function (currentN) {\n            if (isIframeINode(currentN)) {\n              _this.iframeManager.addIframe(currentN);\n            }\n            if (hasShadowRoot(n)) {\n              _this.shadowDomManager.addShadowRoot(n.shadowRoot, document);\n            }\n          },\n          onIframeLoad: function (iframe, childSn) {\n            _this.iframeManager.attachIframe(iframe, childSn);\n            _this.shadowDomManager.observeAttachShadow(iframe);\n          }\n        });\n        if (sn) {\n          adds.push({\n            parentId: parentId,\n            nextId: nextId,\n            node: sn\n          });\n        }\n      };\n      while (_this.mapRemoves.length) {\n        _this.mirror.removeNodeFromMap(_this.mapRemoves.shift());\n      }\n      try {\n        for (var _c = __values(_this.movedSet), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var n = _d.value;\n          if (isParentRemoved(_this.removes, n, _this.mirror) && !_this.movedSet.has(n.parentNode)) {\n            continue;\n          }\n          pushAdd(n);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n      try {\n        for (var _e = __values(_this.addedSet), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var n = _f.value;\n          if (!isAncestorInSet(_this.droppedSet, n) && !isParentRemoved(_this.removes, n, _this.mirror)) {\n            pushAdd(n);\n          } else if (isAncestorInSet(_this.movedSet, n)) {\n            pushAdd(n);\n          } else {\n            _this.droppedSet.add(n);\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n      var candidate = null;\n      while (addList.length) {\n        var node = null;\n        if (candidate) {\n          var parentId = _this.mirror.getId(candidate.value.parentNode);\n          var nextId = getNextId(candidate.value);\n          if (parentId !== -1 && nextId !== -1) {\n            node = candidate;\n          }\n        }\n        if (!node) {\n          for (var index = addList.length - 1; index >= 0; index--) {\n            var _node = addList.get(index);\n            if (_node) {\n              var parentId = _this.mirror.getId(_node.value.parentNode);\n              var nextId = getNextId(_node.value);\n              if (parentId !== -1 && nextId !== -1) {\n                node = _node;\n                break;\n              }\n            }\n          }\n        }\n        if (!node) {\n          while (addList.head) {\n            addList.removeNode(addList.head.value);\n          }\n          break;\n        }\n        candidate = node.previous;\n        addList.removeNode(node.value);\n        pushAdd(node.value);\n      }\n      var payload = {\n        texts: _this.texts.map(function (text) {\n          return {\n            id: _this.mirror.getId(text.node),\n            value: text.value\n          };\n        }).filter(function (text) {\n          return _this.mirror.has(text.id);\n        }),\n        attributes: _this.attributes.map(function (attribute) {\n          return {\n            id: _this.mirror.getId(attribute.node),\n            attributes: attribute.attributes\n          };\n        }).filter(function (attribute) {\n          return _this.mirror.has(attribute.id);\n        }),\n        removes: _this.removes,\n        adds: adds\n      };\n      if (!payload.texts.length && !payload.attributes.length && !payload.removes.length && !payload.adds.length) {\n        return;\n      }\n      _this.texts = [];\n      _this.attributes = [];\n      _this.removes = [];\n      _this.addedSet = new Set();\n      _this.movedSet = new Set();\n      _this.droppedSet = new Set();\n      _this.movedMap = {};\n      _this.mutationCb(payload);\n    };\n    this.processMutation = function (m) {\n      var e_3, _a, e_4, _b;\n      if (isIgnored(m.target)) {\n        return;\n      }\n      switch (m.type) {\n        case 'characterData':\n          {\n            var value = m.target.textContent;\n            if (!isBlocked(m.target, _this.blockClass) && value !== m.oldValue) {\n              _this.texts.push({\n                value: needMaskingText(m.target, _this.maskTextClass, _this.maskTextSelector, _this.unmaskTextSelector) && value ? _this.maskTextFn ? _this.maskTextFn(value) : value.replace(/[\\S]/g, '*') : value,\n                node: m.target\n              });\n            }\n            break;\n          }\n        case 'attributes':\n          {\n            var target = m.target;\n            var value = m.target.getAttribute(m.attributeName);\n            if (m.attributeName === 'value') {\n              value = maskInputValue({\n                input: target,\n                maskInputSelector: _this.maskInputSelector,\n                unmaskInputSelector: _this.unmaskInputSelector,\n                maskInputOptions: _this.maskInputOptions,\n                tagName: m.target.tagName,\n                type: m.target.getAttribute('type'),\n                value: value,\n                maskInputFn: _this.maskInputFn\n              });\n            }\n            if (isBlocked(m.target, _this.blockClass) || value === m.oldValue) {\n              return;\n            }\n            var item = _this.attributes.find(function (a) {\n              return a.node === m.target;\n            });\n            if (!item) {\n              item = {\n                node: m.target,\n                attributes: {}\n              };\n              _this.attributes.push(item);\n            }\n            if (m.attributeName === 'style') {\n              var old = _this.doc.createElement('span');\n              if (m.oldValue) {\n                old.setAttribute('style', m.oldValue);\n              }\n              if (item.attributes.style === undefined || item.attributes.style === null) {\n                item.attributes.style = {};\n              }\n              try {\n                var styleObj = item.attributes.style;\n                try {\n                  for (var _c = __values(Array.from(target.style)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var pname = _d.value;\n                    var newValue = target.style.getPropertyValue(pname);\n                    var newPriority = target.style.getPropertyPriority(pname);\n                    if (newValue !== old.style.getPropertyValue(pname) || newPriority !== old.style.getPropertyPriority(pname)) {\n                      if (newPriority === '') {\n                        styleObj[pname] = newValue;\n                      } else {\n                        styleObj[pname] = [newValue, newPriority];\n                      }\n                    }\n                  }\n                } catch (e_3_1) {\n                  e_3 = {\n                    error: e_3_1\n                  };\n                } finally {\n                  try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                  } finally {\n                    if (e_3) throw e_3.error;\n                  }\n                }\n                try {\n                  for (var _e = __values(Array.from(old.style)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                    var pname = _f.value;\n                    if (target.style.getPropertyValue(pname) === '') {\n                      styleObj[pname] = false;\n                    }\n                  }\n                } catch (e_4_1) {\n                  e_4 = {\n                    error: e_4_1\n                  };\n                } finally {\n                  try {\n                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                  } finally {\n                    if (e_4) throw e_4.error;\n                  }\n                }\n              } catch (error) {\n                console.warn('[rrweb] Error when parsing update to style attribute:', error);\n              }\n            } else {\n              item.attributes[m.attributeName] = transformAttribute(_this.doc, m.target.tagName, m.attributeName, value);\n            }\n            break;\n          }\n        case 'childList':\n          {\n            m.addedNodes.forEach(function (n) {\n              return _this.genAdds(n, m.target);\n            });\n            m.removedNodes.forEach(function (n) {\n              var nodeId = _this.mirror.getId(n);\n              var parentId = isShadowRoot(m.target) ? _this.mirror.getId(m.target.host) : _this.mirror.getId(m.target);\n              if (isBlocked(m.target, _this.blockClass) || isIgnored(n)) {\n                return;\n              }\n              if (_this.addedSet.has(n)) {\n                deepDelete(_this.addedSet, n);\n                _this.droppedSet.add(n);\n              } else if (_this.addedSet.has(m.target) && nodeId === -1) ;else if (isAncestorRemoved(m.target, _this.mirror)) ;else if (_this.movedSet.has(n) && _this.movedMap[moveKey(nodeId, parentId)]) {\n                deepDelete(_this.movedSet, n);\n              } else {\n                _this.removes.push({\n                  parentId: parentId,\n                  id: nodeId,\n                  isShadow: isShadowRoot(m.target) ? true : undefined\n                });\n              }\n              _this.mapRemoves.push(n);\n            });\n            break;\n          }\n      }\n    };\n    this.genAdds = function (n, target) {\n      if (target && isBlocked(target, _this.blockClass)) {\n        return;\n      }\n      if (isINode(n)) {\n        if (isIgnored(n)) {\n          return;\n        }\n        _this.movedSet.add(n);\n        var targetId = null;\n        if (target && isINode(target)) {\n          targetId = target.__sn.id;\n        }\n        if (targetId) {\n          _this.movedMap[moveKey(n.__sn.id, targetId)] = true;\n        }\n      } else {\n        _this.addedSet.add(n);\n        _this.droppedSet.delete(n);\n      }\n      if (!isBlocked(n, _this.blockClass)) n.childNodes.forEach(function (childN) {\n        return _this.genAdds(childN);\n      });\n    };\n  }\n  MutationBuffer.prototype.init = function (options) {\n    var _this = this;\n    ['mutationCb', 'blockClass', 'blockSelector', 'unblockSelector', 'maskTextClass', 'maskTextSelector', 'unmaskTextSelector', 'maskInputSelector', 'unmaskInputSelector', 'inlineStylesheet', 'maskInputOptions', 'maskTextFn', 'maskInputFn', 'recordCanvas', 'inlineImages', 'slimDOMOptions', 'doc', 'mirror', 'iframeManager', 'shadowDomManager', 'canvasManager'].forEach(function (key) {\n      _this[key] = options[key];\n    });\n  };\n  MutationBuffer.prototype.freeze = function () {\n    this.frozen = true;\n    this.canvasManager.freeze();\n  };\n  MutationBuffer.prototype.unfreeze = function () {\n    this.frozen = false;\n    this.canvasManager.unfreeze();\n    this.emit();\n  };\n  MutationBuffer.prototype.isFrozen = function () {\n    return this.frozen;\n  };\n  MutationBuffer.prototype.lock = function () {\n    this.locked = true;\n    this.canvasManager.lock();\n  };\n  MutationBuffer.prototype.unlock = function () {\n    this.locked = false;\n    this.canvasManager.unlock();\n    this.emit();\n  };\n  MutationBuffer.prototype.reset = function () {\n    this.shadowDomManager.reset();\n    this.canvasManager.reset();\n  };\n  return MutationBuffer;\n}();\nfunction deepDelete(addsSet, n) {\n  addsSet.delete(n);\n  n.childNodes.forEach(function (childN) {\n    return deepDelete(addsSet, childN);\n  });\n}\nfunction isParentRemoved(removes, n, mirror) {\n  var parentNode = n.parentNode;\n  if (!parentNode) {\n    return false;\n  }\n  var parentId = mirror.getId(parentNode);\n  if (removes.some(function (r) {\n    return r.id === parentId;\n  })) {\n    return true;\n  }\n  return isParentRemoved(removes, parentNode, mirror);\n}\nfunction isAncestorInSet(set, n) {\n  var parentNode = n.parentNode;\n  if (!parentNode) {\n    return false;\n  }\n  if (set.has(parentNode)) {\n    return true;\n  }\n  return isAncestorInSet(set, parentNode);\n}\nconst MutationBuffer$1 = MutationBuffer;\nvar mutationBuffers = [];\nvar isCSSGroupingRuleSupported = typeof CSSGroupingRule !== 'undefined';\nvar isCSSMediaRuleSupported = typeof CSSMediaRule !== 'undefined';\nvar isCSSSupportsRuleSupported = typeof CSSSupportsRule !== 'undefined';\nvar isCSSConditionRuleSupported = typeof CSSConditionRule !== 'undefined';\nfunction getEventTarget(event) {\n  try {\n    if ('composedPath' in event) {\n      var path = event.composedPath();\n      if (path.length) {\n        return path[0];\n      }\n    } else if ('path' in event && event.path.length) {\n      return event.path[0];\n    }\n  } catch (_a) {}\n  return event && event.target;\n}\nfunction initMutationObserver(options, rootEl) {\n  var _a, _b;\n  var mutationBuffer = new MutationBuffer$1();\n  mutationBuffers.push(mutationBuffer);\n  mutationBuffer.init(options);\n  var mutationObserverCtor = window.MutationObserver || window.__rrMutationObserver;\n  var angularZoneSymbol = (_b = (_a = window === null || window === void 0 ? void 0 : window.Zone) === null || _a === void 0 ? void 0 : _a.__symbol__) === null || _b === void 0 ? void 0 : _b.call(_a, 'MutationObserver');\n  if (angularZoneSymbol && window[angularZoneSymbol]) {\n    mutationObserverCtor = window[angularZoneSymbol];\n  }\n  var observer = new mutationObserverCtor(mutationBuffer.processMutations.bind(mutationBuffer));\n  observer.observe(rootEl, {\n    attributes: true,\n    attributeOldValue: true,\n    characterData: true,\n    characterDataOldValue: true,\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction initMoveObserver(_a) {\n  var mousemoveCb = _a.mousemoveCb,\n    sampling = _a.sampling,\n    doc = _a.doc,\n    mirror = _a.mirror;\n  if (sampling.mousemove === false) {\n    return function () {};\n  }\n  var threshold = typeof sampling.mousemove === 'number' ? sampling.mousemove : 50;\n  var callbackThreshold = typeof sampling.mousemoveCallback === 'number' ? sampling.mousemoveCallback : 500;\n  var positions = [];\n  var timeBaseline;\n  var wrappedCb = throttle(function (source) {\n    var totalOffset = Date.now() - timeBaseline;\n    mousemoveCb(positions.map(function (p) {\n      p.timeOffset -= totalOffset;\n      return p;\n    }), source);\n    positions = [];\n    timeBaseline = null;\n  }, callbackThreshold);\n  var updatePosition = throttle(function (evt) {\n    var target = getEventTarget(evt);\n    var _a = isTouchEvent(evt) ? evt.changedTouches[0] : evt,\n      clientX = _a.clientX,\n      clientY = _a.clientY;\n    if (!timeBaseline) {\n      timeBaseline = Date.now();\n    }\n    positions.push({\n      x: clientX,\n      y: clientY,\n      id: mirror.getId(target),\n      timeOffset: Date.now() - timeBaseline\n    });\n    wrappedCb(typeof DragEvent !== 'undefined' && evt instanceof DragEvent ? IncrementalSource.Drag : evt instanceof MouseEvent ? IncrementalSource.MouseMove : IncrementalSource.TouchMove);\n  }, threshold, {\n    trailing: false\n  });\n  var handlers = [on('mousemove', updatePosition, doc), on('touchmove', updatePosition, doc), on('drag', updatePosition, doc)];\n  return function () {\n    handlers.forEach(function (h) {\n      return h();\n    });\n  };\n}\nfunction initMouseInteractionObserver(_a) {\n  var mouseInteractionCb = _a.mouseInteractionCb,\n    doc = _a.doc,\n    mirror = _a.mirror,\n    blockClass = _a.blockClass,\n    sampling = _a.sampling;\n  if (sampling.mouseInteraction === false) {\n    return function () {};\n  }\n  var disableMap = sampling.mouseInteraction === true || sampling.mouseInteraction === undefined ? {} : sampling.mouseInteraction;\n  var handlers = [];\n  var getHandler = function (eventKey) {\n    return function (event) {\n      var target = getEventTarget(event);\n      if (isBlocked(target, blockClass)) {\n        return;\n      }\n      var e = isTouchEvent(event) ? event.changedTouches[0] : event;\n      if (!e) {\n        return;\n      }\n      var id = mirror.getId(target);\n      var clientX = e.clientX,\n        clientY = e.clientY;\n      mouseInteractionCb({\n        type: MouseInteractions[eventKey],\n        id: id,\n        x: clientX,\n        y: clientY\n      });\n    };\n  };\n  Object.keys(MouseInteractions).filter(function (key) {\n    return Number.isNaN(Number(key)) && !key.endsWith('_Departed') && disableMap[key] !== false;\n  }).forEach(function (eventKey) {\n    var eventName = eventKey.toLowerCase();\n    var handler = getHandler(eventKey);\n    handlers.push(on(eventName, handler, doc));\n  });\n  return function () {\n    handlers.forEach(function (h) {\n      return h();\n    });\n  };\n}\nfunction initScrollObserver(_a) {\n  var scrollCb = _a.scrollCb,\n    doc = _a.doc,\n    mirror = _a.mirror,\n    blockClass = _a.blockClass,\n    sampling = _a.sampling;\n  var updatePosition = throttle(function (evt) {\n    var target = getEventTarget(evt);\n    if (!target || isBlocked(target, blockClass)) {\n      return;\n    }\n    var id = mirror.getId(target);\n    if (target === doc) {\n      var scrollEl = doc.scrollingElement || doc.documentElement;\n      scrollCb({\n        id: id,\n        x: scrollEl.scrollLeft,\n        y: scrollEl.scrollTop\n      });\n    } else {\n      scrollCb({\n        id: id,\n        x: target.scrollLeft,\n        y: target.scrollTop\n      });\n    }\n  }, sampling.scroll || 100);\n  return on('scroll', updatePosition, doc);\n}\nfunction initViewportResizeObserver(_a) {\n  var viewportResizeCb = _a.viewportResizeCb;\n  var lastH = -1;\n  var lastW = -1;\n  var updateDimension = throttle(function () {\n    var height = getWindowHeight();\n    var width = getWindowWidth();\n    if (lastH !== height || lastW !== width) {\n      viewportResizeCb({\n        width: Number(width),\n        height: Number(height)\n      });\n      lastH = height;\n      lastW = width;\n    }\n  }, 200);\n  return on('resize', updateDimension, window);\n}\nfunction wrapEventWithUserTriggeredFlag(v, enable) {\n  var value = __assign({}, v);\n  if (!enable) delete value.userTriggered;\n  return value;\n}\nvar INPUT_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\nvar lastInputValueMap = new WeakMap();\nfunction initInputObserver(_a) {\n  var inputCb = _a.inputCb,\n    doc = _a.doc,\n    mirror = _a.mirror,\n    blockClass = _a.blockClass,\n    ignoreClass = _a.ignoreClass,\n    ignoreSelector = _a.ignoreSelector,\n    maskInputSelector = _a.maskInputSelector,\n    unmaskInputSelector = _a.unmaskInputSelector,\n    maskInputOptions = _a.maskInputOptions,\n    maskInputFn = _a.maskInputFn,\n    sampling = _a.sampling,\n    userTriggeredOnInput = _a.userTriggeredOnInput;\n  function eventHandler(event) {\n    var target = getEventTarget(event);\n    var userTriggered = event.isTrusted;\n    if (target && target.tagName === 'OPTION') target = target.parentElement;\n    if (!target || !target.tagName || INPUT_TAGS.indexOf(target.tagName) < 0 || isBlocked(target, blockClass)) {\n      return;\n    }\n    var type = target.type;\n    if (target.classList.contains(ignoreClass) || ignoreSelector && target.matches(ignoreSelector)) {\n      return;\n    }\n    var text = target.value;\n    var isChecked = false;\n    if (type === 'radio' || type === 'checkbox') {\n      isChecked = target.checked;\n    } else if (maskInputOptions[target.tagName.toLowerCase()] || maskInputOptions[type]) {\n      text = maskInputValue({\n        input: target,\n        maskInputOptions: maskInputOptions,\n        maskInputSelector: maskInputSelector,\n        unmaskInputSelector: unmaskInputSelector,\n        tagName: target.tagName,\n        type: type,\n        value: text,\n        maskInputFn: maskInputFn\n      });\n    }\n    cbWithDedup(target, wrapEventWithUserTriggeredFlag({\n      text: text,\n      isChecked: isChecked,\n      userTriggered: userTriggered\n    }, userTriggeredOnInput));\n    var name = target.name;\n    if (type === 'radio' && name && isChecked) {\n      doc.querySelectorAll(\"input[type=\\\"radio\\\"][name=\\\"\".concat(name, \"\\\"]\")).forEach(function (el) {\n        if (el !== target) {\n          cbWithDedup(el, wrapEventWithUserTriggeredFlag({\n            text: el.value,\n            isChecked: !isChecked,\n            userTriggered: false\n          }, userTriggeredOnInput));\n        }\n      });\n    }\n  }\n  function cbWithDedup(target, v) {\n    var lastInputValue = lastInputValueMap.get(target);\n    if (!lastInputValue || lastInputValue.text !== v.text || lastInputValue.isChecked !== v.isChecked) {\n      lastInputValueMap.set(target, v);\n      var id = mirror.getId(target);\n      inputCb(__assign(__assign({}, v), {\n        id: id\n      }));\n    }\n  }\n  var events = sampling.input === 'last' ? ['change'] : ['input', 'change'];\n  var handlers = events.map(function (eventName) {\n    return on(eventName, eventHandler, doc);\n  });\n  var propertyDescriptor = Object.getOwnPropertyDescriptor(HTMLInputElement.prototype, 'value');\n  var hookProperties = [[HTMLInputElement.prototype, 'value'], [HTMLInputElement.prototype, 'checked'], [HTMLSelectElement.prototype, 'value'], [HTMLTextAreaElement.prototype, 'value'], [HTMLSelectElement.prototype, 'selectedIndex'], [HTMLOptionElement.prototype, 'selected']];\n  if (propertyDescriptor && propertyDescriptor.set) {\n    handlers.push.apply(handlers, __spreadArray([], __read(hookProperties.map(function (p) {\n      return hookSetter(p[0], p[1], {\n        set: function () {\n          eventHandler({\n            target: this\n          });\n        }\n      });\n    })), false));\n  }\n  return function () {\n    handlers.forEach(function (h) {\n      return h();\n    });\n  };\n}\nfunction getNestedCSSRulePositions(rule) {\n  var positions = [];\n  function recurse(childRule, pos) {\n    if (isCSSGroupingRuleSupported && childRule.parentRule instanceof CSSGroupingRule || isCSSMediaRuleSupported && childRule.parentRule instanceof CSSMediaRule || isCSSSupportsRuleSupported && childRule.parentRule instanceof CSSSupportsRule || isCSSConditionRuleSupported && childRule.parentRule instanceof CSSConditionRule) {\n      var rules = Array.from(childRule.parentRule.cssRules);\n      var index = rules.indexOf(childRule);\n      pos.unshift(index);\n    } else {\n      var rules = Array.from(childRule.parentStyleSheet.cssRules);\n      var index = rules.indexOf(childRule);\n      pos.unshift(index);\n    }\n    return pos;\n  }\n  return recurse(rule, positions);\n}\nfunction initStyleSheetObserver(_a, _b) {\n  var styleSheetRuleCb = _a.styleSheetRuleCb,\n    mirror = _a.mirror;\n  var win = _b.win;\n  if (!win.CSSStyleSheet || !win.CSSStyleSheet.prototype) {\n    return function () {};\n  }\n  var insertRule = win.CSSStyleSheet.prototype.insertRule;\n  win.CSSStyleSheet.prototype.insertRule = function (rule, index) {\n    var id = mirror.getId(this.ownerNode);\n    if (id !== -1) {\n      styleSheetRuleCb({\n        id: id,\n        adds: [{\n          rule: rule,\n          index: index\n        }]\n      });\n    }\n    return insertRule.apply(this, arguments);\n  };\n  var deleteRule = win.CSSStyleSheet.prototype.deleteRule;\n  win.CSSStyleSheet.prototype.deleteRule = function (index) {\n    var id = mirror.getId(this.ownerNode);\n    if (id !== -1) {\n      styleSheetRuleCb({\n        id: id,\n        removes: [{\n          index: index\n        }]\n      });\n    }\n    return deleteRule.apply(this, arguments);\n  };\n  var supportedNestedCSSRuleTypes = {};\n  if (isCSSGroupingRuleSupported) {\n    supportedNestedCSSRuleTypes.CSSGroupingRule = win.CSSGroupingRule;\n  } else {\n    if (isCSSMediaRuleSupported) {\n      supportedNestedCSSRuleTypes.CSSMediaRule = win.CSSMediaRule;\n    }\n    if (isCSSConditionRuleSupported) {\n      supportedNestedCSSRuleTypes.CSSConditionRule = win.CSSConditionRule;\n    }\n    if (isCSSSupportsRuleSupported) {\n      supportedNestedCSSRuleTypes.CSSSupportsRule = win.CSSSupportsRule;\n    }\n  }\n  var unmodifiedFunctions = {};\n  Object.entries(supportedNestedCSSRuleTypes).forEach(function (_a) {\n    var _b = __read(_a, 2),\n      typeKey = _b[0],\n      type = _b[1];\n    unmodifiedFunctions[typeKey] = {\n      insertRule: type.prototype.insertRule,\n      deleteRule: type.prototype.deleteRule\n    };\n    type.prototype.insertRule = function (rule, index) {\n      var id = mirror.getId(this.parentStyleSheet.ownerNode);\n      if (id !== -1) {\n        styleSheetRuleCb({\n          id: id,\n          adds: [{\n            rule: rule,\n            index: __spreadArray(__spreadArray([], __read(getNestedCSSRulePositions(this)), false), [index || 0], false)\n          }]\n        });\n      }\n      return unmodifiedFunctions[typeKey].insertRule.apply(this, arguments);\n    };\n    type.prototype.deleteRule = function (index) {\n      var id = mirror.getId(this.parentStyleSheet.ownerNode);\n      if (id !== -1) {\n        styleSheetRuleCb({\n          id: id,\n          removes: [{\n            index: __spreadArray(__spreadArray([], __read(getNestedCSSRulePositions(this)), false), [index], false)\n          }]\n        });\n      }\n      return unmodifiedFunctions[typeKey].deleteRule.apply(this, arguments);\n    };\n  });\n  return function () {\n    win.CSSStyleSheet.prototype.insertRule = insertRule;\n    win.CSSStyleSheet.prototype.deleteRule = deleteRule;\n    Object.entries(supportedNestedCSSRuleTypes).forEach(function (_a) {\n      var _b = __read(_a, 2),\n        typeKey = _b[0],\n        type = _b[1];\n      type.prototype.insertRule = unmodifiedFunctions[typeKey].insertRule;\n      type.prototype.deleteRule = unmodifiedFunctions[typeKey].deleteRule;\n    });\n  };\n}\nfunction initStyleDeclarationObserver(_a, _b) {\n  var styleDeclarationCb = _a.styleDeclarationCb,\n    mirror = _a.mirror;\n  var win = _b.win;\n  var setProperty = win.CSSStyleDeclaration.prototype.setProperty;\n  win.CSSStyleDeclaration.prototype.setProperty = function (property, value, priority) {\n    var _a, _b;\n    var id = mirror.getId((_b = (_a = this.parentRule) === null || _a === void 0 ? void 0 : _a.parentStyleSheet) === null || _b === void 0 ? void 0 : _b.ownerNode);\n    if (id !== -1) {\n      styleDeclarationCb({\n        id: id,\n        set: {\n          property: property,\n          value: value,\n          priority: priority\n        },\n        index: getNestedCSSRulePositions(this.parentRule)\n      });\n    }\n    return setProperty.apply(this, arguments);\n  };\n  var removeProperty = win.CSSStyleDeclaration.prototype.removeProperty;\n  win.CSSStyleDeclaration.prototype.removeProperty = function (property) {\n    var _a, _b;\n    var id = mirror.getId((_b = (_a = this.parentRule) === null || _a === void 0 ? void 0 : _a.parentStyleSheet) === null || _b === void 0 ? void 0 : _b.ownerNode);\n    if (id !== -1) {\n      styleDeclarationCb({\n        id: id,\n        remove: {\n          property: property\n        },\n        index: getNestedCSSRulePositions(this.parentRule)\n      });\n    }\n    return removeProperty.apply(this, arguments);\n  };\n  return function () {\n    win.CSSStyleDeclaration.prototype.setProperty = setProperty;\n    win.CSSStyleDeclaration.prototype.removeProperty = removeProperty;\n  };\n}\nfunction initMediaInteractionObserver(_a) {\n  var mediaInteractionCb = _a.mediaInteractionCb,\n    blockClass = _a.blockClass,\n    mirror = _a.mirror,\n    sampling = _a.sampling;\n  var handler = function (type) {\n    return throttle(function (event) {\n      var target = getEventTarget(event);\n      if (!target || isBlocked(target, blockClass)) {\n        return;\n      }\n      var _a = target,\n        currentTime = _a.currentTime,\n        volume = _a.volume,\n        muted = _a.muted;\n      mediaInteractionCb({\n        type: type,\n        id: mirror.getId(target),\n        currentTime: currentTime,\n        volume: volume,\n        muted: muted\n      });\n    }, sampling.media || 500);\n  };\n  var handlers = [on('play', handler(0)), on('pause', handler(1)), on('seeked', handler(2)), on('volumechange', handler(3))];\n  return function () {\n    handlers.forEach(function (h) {\n      return h();\n    });\n  };\n}\nfunction initFontObserver(_a) {\n  var fontCb = _a.fontCb,\n    doc = _a.doc;\n  var win = doc.defaultView;\n  if (!win) {\n    return function () {};\n  }\n  var handlers = [];\n  var fontMap = new WeakMap();\n  var originalFontFace = win.FontFace;\n  win.FontFace = function FontFace(family, source, descriptors) {\n    var fontFace = new originalFontFace(family, source, descriptors);\n    fontMap.set(fontFace, {\n      family: family,\n      buffer: typeof source !== 'string',\n      descriptors: descriptors,\n      fontSource: typeof source === 'string' ? source : JSON.stringify(Array.from(new Uint8Array(source)))\n    });\n    return fontFace;\n  };\n  var restoreHandler = patch(doc.fonts, 'add', function (original) {\n    return function (fontFace) {\n      setTimeout(function () {\n        var p = fontMap.get(fontFace);\n        if (p) {\n          fontCb(p);\n          fontMap.delete(fontFace);\n        }\n      }, 0);\n      return original.apply(this, [fontFace]);\n    };\n  });\n  handlers.push(function () {\n    win.FontFace = originalFontFace;\n  });\n  handlers.push(restoreHandler);\n  return function () {\n    handlers.forEach(function (h) {\n      return h();\n    });\n  };\n}\nfunction mergeHooks(o, hooks) {\n  var mutationCb = o.mutationCb,\n    mousemoveCb = o.mousemoveCb,\n    mouseInteractionCb = o.mouseInteractionCb,\n    scrollCb = o.scrollCb,\n    viewportResizeCb = o.viewportResizeCb,\n    inputCb = o.inputCb,\n    mediaInteractionCb = o.mediaInteractionCb,\n    styleSheetRuleCb = o.styleSheetRuleCb,\n    styleDeclarationCb = o.styleDeclarationCb,\n    canvasMutationCb = o.canvasMutationCb,\n    fontCb = o.fontCb;\n  o.mutationCb = function () {\n    var p = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      p[_i] = arguments[_i];\n    }\n    if (hooks.mutation) {\n      hooks.mutation.apply(hooks, __spreadArray([], __read(p), false));\n    }\n    mutationCb.apply(void 0, __spreadArray([], __read(p), false));\n  };\n  o.mousemoveCb = function () {\n    var p = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      p[_i] = arguments[_i];\n    }\n    if (hooks.mousemove) {\n      hooks.mousemove.apply(hooks, __spreadArray([], __read(p), false));\n    }\n    mousemoveCb.apply(void 0, __spreadArray([], __read(p), false));\n  };\n  o.mouseInteractionCb = function () {\n    var p = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      p[_i] = arguments[_i];\n    }\n    if (hooks.mouseInteraction) {\n      hooks.mouseInteraction.apply(hooks, __spreadArray([], __read(p), false));\n    }\n    mouseInteractionCb.apply(void 0, __spreadArray([], __read(p), false));\n  };\n  o.scrollCb = function () {\n    var p = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      p[_i] = arguments[_i];\n    }\n    if (hooks.scroll) {\n      hooks.scroll.apply(hooks, __spreadArray([], __read(p), false));\n    }\n    scrollCb.apply(void 0, __spreadArray([], __read(p), false));\n  };\n  o.viewportResizeCb = function () {\n    var p = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      p[_i] = arguments[_i];\n    }\n    if (hooks.viewportResize) {\n      hooks.viewportResize.apply(hooks, __spreadArray([], __read(p), false));\n    }\n    viewportResizeCb.apply(void 0, __spreadArray([], __read(p), false));\n  };\n  o.inputCb = function () {\n    var p = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      p[_i] = arguments[_i];\n    }\n    if (hooks.input) {\n      hooks.input.apply(hooks, __spreadArray([], __read(p), false));\n    }\n    inputCb.apply(void 0, __spreadArray([], __read(p), false));\n  };\n  o.mediaInteractionCb = function () {\n    var p = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      p[_i] = arguments[_i];\n    }\n    if (hooks.mediaInteaction) {\n      hooks.mediaInteaction.apply(hooks, __spreadArray([], __read(p), false));\n    }\n    mediaInteractionCb.apply(void 0, __spreadArray([], __read(p), false));\n  };\n  o.styleSheetRuleCb = function () {\n    var p = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      p[_i] = arguments[_i];\n    }\n    if (hooks.styleSheetRule) {\n      hooks.styleSheetRule.apply(hooks, __spreadArray([], __read(p), false));\n    }\n    styleSheetRuleCb.apply(void 0, __spreadArray([], __read(p), false));\n  };\n  o.styleDeclarationCb = function () {\n    var p = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      p[_i] = arguments[_i];\n    }\n    if (hooks.styleDeclaration) {\n      hooks.styleDeclaration.apply(hooks, __spreadArray([], __read(p), false));\n    }\n    styleDeclarationCb.apply(void 0, __spreadArray([], __read(p), false));\n  };\n  o.canvasMutationCb = function () {\n    var p = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      p[_i] = arguments[_i];\n    }\n    if (hooks.canvasMutation) {\n      hooks.canvasMutation.apply(hooks, __spreadArray([], __read(p), false));\n    }\n    canvasMutationCb.apply(void 0, __spreadArray([], __read(p), false));\n  };\n  o.fontCb = function () {\n    var p = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      p[_i] = arguments[_i];\n    }\n    if (hooks.font) {\n      hooks.font.apply(hooks, __spreadArray([], __read(p), false));\n    }\n    fontCb.apply(void 0, __spreadArray([], __read(p), false));\n  };\n}\nfunction initObservers(o, hooks) {\n  var e_1, _a;\n  if (hooks === void 0) {\n    hooks = {};\n  }\n  var currentWindow = o.doc.defaultView;\n  if (!currentWindow) {\n    return function () {};\n  }\n  mergeHooks(o, hooks);\n  var mutationObserver = initMutationObserver(o, o.doc);\n  var mousemoveHandler = initMoveObserver(o);\n  var mouseInteractionHandler = initMouseInteractionObserver(o);\n  var scrollHandler = initScrollObserver(o);\n  var viewportResizeHandler = initViewportResizeObserver(o);\n  var inputHandler = initInputObserver(o);\n  var mediaInteractionHandler = initMediaInteractionObserver(o);\n  var styleSheetObserver = initStyleSheetObserver(o, {\n    win: currentWindow\n  });\n  var styleDeclarationObserver = initStyleDeclarationObserver(o, {\n    win: currentWindow\n  });\n  var fontObserver = o.collectFonts ? initFontObserver(o) : function () {};\n  var pluginHandlers = [];\n  try {\n    for (var _b = __values(o.plugins), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var plugin = _c.value;\n      pluginHandlers.push(plugin.observer(plugin.callback, currentWindow, plugin.options));\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  return function () {\n    mutationBuffers.forEach(function (b) {\n      return b.reset();\n    });\n    mutationObserver.disconnect();\n    mousemoveHandler();\n    mouseInteractionHandler();\n    scrollHandler();\n    viewportResizeHandler();\n    inputHandler();\n    mediaInteractionHandler();\n    try {\n      styleSheetObserver();\n      styleDeclarationObserver();\n    } catch (e) {}\n    fontObserver();\n    pluginHandlers.forEach(function (h) {\n      return h();\n    });\n  };\n}\nvar IframeManager = function () {\n  function IframeManager(options) {\n    this.iframes = new WeakMap();\n    this.mutationCb = options.mutationCb;\n  }\n  IframeManager.prototype.addIframe = function (iframeEl) {\n    this.iframes.set(iframeEl, true);\n  };\n  IframeManager.prototype.addLoadListener = function (cb) {\n    this.loadListener = cb;\n  };\n  IframeManager.prototype.attachIframe = function (iframeEl, childSn) {\n    var _a;\n    this.mutationCb({\n      adds: [{\n        parentId: iframeEl.__sn.id,\n        nextId: null,\n        node: childSn\n      }],\n      removes: [],\n      texts: [],\n      attributes: [],\n      isAttachIframe: true\n    });\n    (_a = this.loadListener) === null || _a === void 0 ? void 0 : _a.call(this, iframeEl);\n  };\n  return IframeManager;\n}();\nvar ShadowDomManager = function () {\n  function ShadowDomManager(options) {\n    this.restorePatches = [];\n    this.mutationCb = options.mutationCb;\n    this.scrollCb = options.scrollCb;\n    this.bypassOptions = options.bypassOptions;\n    this.mirror = options.mirror;\n    var manager = this;\n    this.restorePatches.push(patch(HTMLElement.prototype, 'attachShadow', function (original) {\n      return function () {\n        var shadowRoot = original.apply(this, arguments);\n        if (this.shadowRoot) manager.addShadowRoot(this.shadowRoot, this.ownerDocument);\n        return shadowRoot;\n      };\n    }));\n  }\n  ShadowDomManager.prototype.addShadowRoot = function (shadowRoot, doc) {\n    initMutationObserver(__assign(__assign({}, this.bypassOptions), {\n      doc: doc,\n      mutationCb: this.mutationCb,\n      mirror: this.mirror,\n      shadowDomManager: this\n    }), shadowRoot);\n    initScrollObserver(__assign(__assign({}, this.bypassOptions), {\n      scrollCb: this.scrollCb,\n      doc: shadowRoot,\n      mirror: this.mirror\n    }));\n  };\n  ShadowDomManager.prototype.observeAttachShadow = function (iframeElement) {\n    if (iframeElement.contentWindow) {\n      var manager_1 = this;\n      this.restorePatches.push(patch(iframeElement.contentWindow.HTMLElement.prototype, 'attachShadow', function (original) {\n        return function () {\n          var shadowRoot = original.apply(this, arguments);\n          if (this.shadowRoot) manager_1.addShadowRoot(this.shadowRoot, iframeElement.contentDocument);\n          return shadowRoot;\n        };\n      }));\n    }\n  };\n  ShadowDomManager.prototype.reset = function () {\n    this.restorePatches.forEach(function (restorePatch) {\n      return restorePatch();\n    });\n  };\n  return ShadowDomManager;\n}();\nfunction initCanvas2DMutationObserver(cb, win, blockClass, mirror) {\n  var e_1, _a;\n  var handlers = [];\n  var props2D = Object.getOwnPropertyNames(win.CanvasRenderingContext2D.prototype);\n  var _loop_1 = function (prop) {\n    try {\n      if (typeof win.CanvasRenderingContext2D.prototype[prop] !== 'function') {\n        return \"continue\";\n      }\n      var restoreHandler = patch(win.CanvasRenderingContext2D.prototype, prop, function (original) {\n        return function () {\n          var _this = this;\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          if (!isBlocked(this.canvas, blockClass)) {\n            setTimeout(function () {\n              var recordArgs = __spreadArray([], __read(args), false);\n              if (prop === 'drawImage') {\n                if (recordArgs[0] && recordArgs[0] instanceof HTMLCanvasElement) {\n                  var canvas = recordArgs[0];\n                  var ctx = canvas.getContext('2d');\n                  var imgd = ctx === null || ctx === void 0 ? void 0 : ctx.getImageData(0, 0, canvas.width, canvas.height);\n                  var pix = imgd === null || imgd === void 0 ? void 0 : imgd.data;\n                  recordArgs[0] = JSON.stringify(pix);\n                }\n              }\n              cb(_this.canvas, {\n                type: CanvasContext['2D'],\n                property: prop,\n                args: recordArgs\n              });\n            }, 0);\n          }\n          return original.apply(this, args);\n        };\n      });\n      handlers.push(restoreHandler);\n    } catch (_b) {\n      var hookHandler = hookSetter(win.CanvasRenderingContext2D.prototype, prop, {\n        set: function (v) {\n          cb(this.canvas, {\n            type: CanvasContext['2D'],\n            property: prop,\n            args: [v],\n            setter: true\n          });\n        }\n      });\n      handlers.push(hookHandler);\n    }\n  };\n  try {\n    for (var props2D_1 = __values(props2D), props2D_1_1 = props2D_1.next(); !props2D_1_1.done; props2D_1_1 = props2D_1.next()) {\n      var prop = props2D_1_1.value;\n      _loop_1(prop);\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (props2D_1_1 && !props2D_1_1.done && (_a = props2D_1.return)) _a.call(props2D_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  return function () {\n    handlers.forEach(function (h) {\n      return h();\n    });\n  };\n}\nfunction initCanvasContextObserver(win, blockClass) {\n  var handlers = [];\n  try {\n    var restoreHandler = patch(win.HTMLCanvasElement.prototype, 'getContext', function (original) {\n      return function (contextType) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n          args[_i - 1] = arguments[_i];\n        }\n        if (!isBlocked(this, blockClass)) {\n          if (!('__context' in this)) this.__context = contextType;\n        }\n        return original.apply(this, __spreadArray([contextType], __read(args), false));\n      };\n    });\n    handlers.push(restoreHandler);\n  } catch (_a) {\n    console.error('failed to patch HTMLCanvasElement.prototype.getContext');\n  }\n  return function () {\n    handlers.forEach(function (h) {\n      return h();\n    });\n  };\n}\n\n/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n  lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n  var bytes = new Uint8Array(arraybuffer),\n    i,\n    len = bytes.length,\n    base64 = '';\n  for (i = 0; i < len; i += 3) {\n    base64 += chars[bytes[i] >> 2];\n    base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n    base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n    base64 += chars[bytes[i + 2] & 63];\n  }\n  if (len % 3 === 2) {\n    base64 = base64.substring(0, base64.length - 1) + '=';\n  } else if (len % 3 === 1) {\n    base64 = base64.substring(0, base64.length - 2) + '==';\n  }\n  return base64;\n};\nvar webGLVarMap = new Map();\nfunction variableListFor(ctx, ctor) {\n  var contextMap = webGLVarMap.get(ctx);\n  if (!contextMap) {\n    contextMap = new Map();\n    webGLVarMap.set(ctx, contextMap);\n  }\n  if (!contextMap.has(ctor)) {\n    contextMap.set(ctor, []);\n  }\n  return contextMap.get(ctor);\n}\nvar saveWebGLVar = function (value, win, ctx) {\n  if (!value || !(isInstanceOfWebGLObject(value, win) || typeof value === 'object')) return;\n  var name = value.constructor.name;\n  var list = variableListFor(ctx, name);\n  var index = list.indexOf(value);\n  if (index === -1) {\n    index = list.length;\n    list.push(value);\n  }\n  return index;\n};\nfunction serializeArg(value, win, ctx) {\n  if (value instanceof Array) {\n    return value.map(function (arg) {\n      return serializeArg(arg, win, ctx);\n    });\n  } else if (value === null) {\n    return value;\n  } else if (value instanceof Float32Array || value instanceof Float64Array || value instanceof Int32Array || value instanceof Uint32Array || value instanceof Uint8Array || value instanceof Uint16Array || value instanceof Int16Array || value instanceof Int8Array || value instanceof Uint8ClampedArray) {\n    var name_1 = value.constructor.name;\n    return {\n      rr_type: name_1,\n      args: [Object.values(value)]\n    };\n  } else if (value instanceof ArrayBuffer) {\n    var name_2 = value.constructor.name;\n    var base64 = encode(value);\n    return {\n      rr_type: name_2,\n      base64: base64\n    };\n  } else if (value instanceof DataView) {\n    var name_3 = value.constructor.name;\n    return {\n      rr_type: name_3,\n      args: [serializeArg(value.buffer, win, ctx), value.byteOffset, value.byteLength]\n    };\n  } else if (value instanceof HTMLImageElement) {\n    var name_4 = value.constructor.name;\n    var src = value.src;\n    return {\n      rr_type: name_4,\n      src: src\n    };\n  } else if (value instanceof ImageData) {\n    var name_5 = value.constructor.name;\n    return {\n      rr_type: name_5,\n      args: [serializeArg(value.data, win, ctx), value.width, value.height]\n    };\n  } else if (isInstanceOfWebGLObject(value, win) || typeof value === 'object') {\n    var name_6 = value.constructor.name;\n    var index = saveWebGLVar(value, win, ctx);\n    return {\n      rr_type: name_6,\n      index: index\n    };\n  }\n  return value;\n}\nvar serializeArgs = function (args, win, ctx) {\n  return __spreadArray([], __read(args), false).map(function (arg) {\n    return serializeArg(arg, win, ctx);\n  });\n};\nvar isInstanceOfWebGLObject = function (value, win) {\n  var webGLConstructorNames = ['WebGLActiveInfo', 'WebGLBuffer', 'WebGLFramebuffer', 'WebGLProgram', 'WebGLRenderbuffer', 'WebGLShader', 'WebGLShaderPrecisionFormat', 'WebGLTexture', 'WebGLUniformLocation', 'WebGLVertexArrayObject', 'WebGLVertexArrayObjectOES'];\n  var supportedWebGLConstructorNames = webGLConstructorNames.filter(function (name) {\n    return typeof win[name] === 'function';\n  });\n  return Boolean(supportedWebGLConstructorNames.find(function (name) {\n    return value instanceof win[name];\n  }));\n};\nfunction patchGLPrototype(prototype, type, cb, blockClass, mirror, win) {\n  var e_1, _a;\n  var handlers = [];\n  var props = Object.getOwnPropertyNames(prototype);\n  var _loop_1 = function (prop) {\n    try {\n      if (typeof prototype[prop] !== 'function') {\n        return \"continue\";\n      }\n      var restoreHandler = patch(prototype, prop, function (original) {\n        return function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          var result = original.apply(this, args);\n          saveWebGLVar(result, win, prototype);\n          if (!isBlocked(this.canvas, blockClass)) {\n            var id = mirror.getId(this.canvas);\n            var recordArgs = serializeArgs(__spreadArray([], __read(args), false), win, prototype);\n            var mutation = {\n              type: type,\n              property: prop,\n              args: recordArgs\n            };\n            cb(this.canvas, mutation);\n          }\n          return result;\n        };\n      });\n      handlers.push(restoreHandler);\n    } catch (_b) {\n      var hookHandler = hookSetter(prototype, prop, {\n        set: function (v) {\n          cb(this.canvas, {\n            type: type,\n            property: prop,\n            args: [v],\n            setter: true\n          });\n        }\n      });\n      handlers.push(hookHandler);\n    }\n  };\n  try {\n    for (var props_1 = __values(props), props_1_1 = props_1.next(); !props_1_1.done; props_1_1 = props_1.next()) {\n      var prop = props_1_1.value;\n      _loop_1(prop);\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (props_1_1 && !props_1_1.done && (_a = props_1.return)) _a.call(props_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  return handlers;\n}\nfunction initCanvasWebGLMutationObserver(cb, win, blockClass, mirror) {\n  var handlers = [];\n  handlers.push.apply(handlers, __spreadArray([], __read(patchGLPrototype(win.WebGLRenderingContext.prototype, CanvasContext.WebGL, cb, blockClass, mirror, win)), false));\n  if (typeof win.WebGL2RenderingContext !== 'undefined') {\n    handlers.push.apply(handlers, __spreadArray([], __read(patchGLPrototype(win.WebGL2RenderingContext.prototype, CanvasContext.WebGL2, cb, blockClass, mirror, win)), false));\n  }\n  return function () {\n    handlers.forEach(function (h) {\n      return h();\n    });\n  };\n}\nvar CanvasManager = function () {\n  function CanvasManager(options) {\n    this.pendingCanvasMutations = new Map();\n    this.rafStamps = {\n      latestId: 0,\n      invokeId: null\n    };\n    this.frozen = false;\n    this.locked = false;\n    this.processMutation = function (target, mutation) {\n      var newFrame = this.rafStamps.invokeId && this.rafStamps.latestId !== this.rafStamps.invokeId;\n      if (newFrame || !this.rafStamps.invokeId) this.rafStamps.invokeId = this.rafStamps.latestId;\n      if (!this.pendingCanvasMutations.has(target)) {\n        this.pendingCanvasMutations.set(target, []);\n      }\n      this.pendingCanvasMutations.get(target).push(mutation);\n    };\n    this.mutationCb = options.mutationCb;\n    this.mirror = options.mirror;\n    if (options.recordCanvas === true) this.initCanvasMutationObserver(options.win, options.blockClass);\n  }\n  CanvasManager.prototype.reset = function () {\n    this.pendingCanvasMutations.clear();\n    this.resetObservers && this.resetObservers();\n  };\n  CanvasManager.prototype.freeze = function () {\n    this.frozen = true;\n  };\n  CanvasManager.prototype.unfreeze = function () {\n    this.frozen = false;\n  };\n  CanvasManager.prototype.lock = function () {\n    this.locked = true;\n  };\n  CanvasManager.prototype.unlock = function () {\n    this.locked = false;\n  };\n  CanvasManager.prototype.initCanvasMutationObserver = function (win, blockClass) {\n    this.startRAFTimestamping();\n    this.startPendingCanvasMutationFlusher();\n    var canvasContextReset = initCanvasContextObserver(win, blockClass);\n    var canvas2DReset = initCanvas2DMutationObserver(this.processMutation.bind(this), win, blockClass, this.mirror);\n    var canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(this.processMutation.bind(this), win, blockClass, this.mirror);\n    this.resetObservers = function () {\n      canvasContextReset();\n      canvas2DReset();\n      canvasWebGL1and2Reset();\n    };\n  };\n  CanvasManager.prototype.startPendingCanvasMutationFlusher = function () {\n    var _this = this;\n    requestAnimationFrame(function () {\n      return _this.flushPendingCanvasMutations();\n    });\n  };\n  CanvasManager.prototype.startRAFTimestamping = function () {\n    var _this = this;\n    var setLatestRAFTimestamp = function (timestamp) {\n      _this.rafStamps.latestId = timestamp;\n      requestAnimationFrame(setLatestRAFTimestamp);\n    };\n    requestAnimationFrame(setLatestRAFTimestamp);\n  };\n  CanvasManager.prototype.flushPendingCanvasMutations = function () {\n    var _this = this;\n    this.pendingCanvasMutations.forEach(function (values, canvas) {\n      var id = _this.mirror.getId(canvas);\n      _this.flushPendingCanvasMutationFor(canvas, id);\n    });\n    requestAnimationFrame(function () {\n      return _this.flushPendingCanvasMutations();\n    });\n  };\n  CanvasManager.prototype.flushPendingCanvasMutationFor = function (canvas, id) {\n    if (this.frozen || this.locked) {\n      return;\n    }\n    var valuesWithType = this.pendingCanvasMutations.get(canvas);\n    if (!valuesWithType || id === -1) return;\n    var values = valuesWithType.map(function (value) {\n      value.type;\n      var rest = __rest(value, [\"type\"]);\n      return rest;\n    });\n    var type = valuesWithType[0].type;\n    this.mutationCb({\n      id: id,\n      type: type,\n      commands: values\n    });\n    this.pendingCanvasMutations.delete(canvas);\n  };\n  return CanvasManager;\n}();\nfunction wrapEvent(e) {\n  return __assign(__assign({}, e), {\n    timestamp: Date.now()\n  });\n}\nvar wrappedEmit;\nvar takeFullSnapshot;\nvar mirror = createMirror();\nfunction record(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var emit = options.emit,\n    checkoutEveryNms = options.checkoutEveryNms,\n    checkoutEveryNth = options.checkoutEveryNth,\n    _a = options.blockClass,\n    blockClass = _a === void 0 ? 'rr-block' : _a,\n    _b = options.blockSelector,\n    blockSelector = _b === void 0 ? null : _b,\n    _c = options.unblockSelector,\n    unblockSelector = _c === void 0 ? null : _c,\n    _d = options.ignoreClass,\n    ignoreClass = _d === void 0 ? 'rr-ignore' : _d,\n    _e = options.ignoreSelector,\n    ignoreSelector = _e === void 0 ? null : _e,\n    _f = options.maskTextClass,\n    maskTextClass = _f === void 0 ? 'rr-mask' : _f,\n    _g = options.maskTextSelector,\n    maskTextSelector = _g === void 0 ? null : _g,\n    _h = options.maskInputSelector,\n    maskInputSelector = _h === void 0 ? null : _h,\n    _j = options.unmaskTextSelector,\n    unmaskTextSelector = _j === void 0 ? null : _j,\n    _k = options.unmaskInputSelector,\n    unmaskInputSelector = _k === void 0 ? null : _k,\n    _l = options.inlineStylesheet,\n    inlineStylesheet = _l === void 0 ? true : _l,\n    maskAllInputs = options.maskAllInputs,\n    _maskInputOptions = options.maskInputOptions,\n    _slimDOMOptions = options.slimDOMOptions,\n    maskInputFn = options.maskInputFn,\n    maskTextFn = options.maskTextFn,\n    hooks = options.hooks,\n    packFn = options.packFn,\n    _m = options.sampling,\n    sampling = _m === void 0 ? {} : _m,\n    mousemoveWait = options.mousemoveWait,\n    _o = options.recordCanvas,\n    recordCanvas = _o === void 0 ? false : _o,\n    _p = options.userTriggeredOnInput,\n    userTriggeredOnInput = _p === void 0 ? false : _p,\n    _q = options.collectFonts,\n    collectFonts = _q === void 0 ? false : _q,\n    _r = options.inlineImages,\n    inlineImages = _r === void 0 ? false : _r,\n    plugins = options.plugins,\n    _s = options.keepIframeSrcFn,\n    keepIframeSrcFn = _s === void 0 ? function () {\n      return false;\n    } : _s;\n  if (!emit) {\n    throw new Error('emit function is required');\n  }\n  if (mousemoveWait !== undefined && sampling.mousemove === undefined) {\n    sampling.mousemove = mousemoveWait;\n  }\n  var maskInputOptions = maskAllInputs === true ? {\n    color: true,\n    date: true,\n    'datetime-local': true,\n    email: true,\n    month: true,\n    number: true,\n    range: true,\n    search: true,\n    tel: true,\n    text: true,\n    time: true,\n    url: true,\n    week: true,\n    textarea: true,\n    select: true,\n    password: true\n  } : _maskInputOptions !== undefined ? _maskInputOptions : {\n    password: true\n  };\n  var slimDOMOptions = _slimDOMOptions === true || _slimDOMOptions === 'all' ? {\n    script: true,\n    comment: true,\n    headFavicon: true,\n    headWhitespace: true,\n    headMetaSocial: true,\n    headMetaRobots: true,\n    headMetaHttpEquiv: true,\n    headMetaVerification: true,\n    headMetaAuthorship: _slimDOMOptions === 'all',\n    headMetaDescKeywords: _slimDOMOptions === 'all'\n  } : _slimDOMOptions ? _slimDOMOptions : {};\n  polyfill();\n  var lastFullSnapshotEvent;\n  var incrementalSnapshotCount = 0;\n  var eventProcessor = function (e) {\n    var e_1, _a;\n    try {\n      for (var _b = __values(plugins || []), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var plugin = _c.value;\n        if (plugin.eventProcessor) {\n          e = plugin.eventProcessor(e);\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    if (packFn) {\n      e = packFn(e);\n    }\n    return e;\n  };\n  wrappedEmit = function (e, isCheckout) {\n    var _a;\n    if (((_a = mutationBuffers[0]) === null || _a === void 0 ? void 0 : _a.isFrozen()) && e.type !== EventType.FullSnapshot && !(e.type === EventType.IncrementalSnapshot && e.data.source === IncrementalSource.Mutation)) {\n      mutationBuffers.forEach(function (buf) {\n        return buf.unfreeze();\n      });\n    }\n    emit(eventProcessor(e), isCheckout);\n    if (e.type === EventType.FullSnapshot) {\n      lastFullSnapshotEvent = e;\n      incrementalSnapshotCount = 0;\n    } else if (e.type === EventType.IncrementalSnapshot) {\n      if (e.data.source === IncrementalSource.Mutation && e.data.isAttachIframe) {\n        return;\n      }\n      incrementalSnapshotCount++;\n      var exceedCount = checkoutEveryNth && incrementalSnapshotCount >= checkoutEveryNth;\n      var exceedTime = checkoutEveryNms && e.timestamp - lastFullSnapshotEvent.timestamp > checkoutEveryNms;\n      if (exceedCount || exceedTime) {\n        takeFullSnapshot(true);\n      }\n    }\n  };\n  var wrappedMutationEmit = function (m) {\n    wrappedEmit(wrapEvent({\n      type: EventType.IncrementalSnapshot,\n      data: __assign({\n        source: IncrementalSource.Mutation\n      }, m)\n    }));\n  };\n  var wrappedScrollEmit = function (p) {\n    return wrappedEmit(wrapEvent({\n      type: EventType.IncrementalSnapshot,\n      data: __assign({\n        source: IncrementalSource.Scroll\n      }, p)\n    }));\n  };\n  var wrappedCanvasMutationEmit = function (p) {\n    return wrappedEmit(wrapEvent({\n      type: EventType.IncrementalSnapshot,\n      data: __assign({\n        source: IncrementalSource.CanvasMutation\n      }, p)\n    }));\n  };\n  var iframeManager = new IframeManager({\n    mutationCb: wrappedMutationEmit\n  });\n  var canvasManager = new CanvasManager({\n    recordCanvas: recordCanvas,\n    mutationCb: wrappedCanvasMutationEmit,\n    win: window,\n    blockClass: blockClass,\n    mirror: mirror\n  });\n  var shadowDomManager = new ShadowDomManager({\n    mutationCb: wrappedMutationEmit,\n    scrollCb: wrappedScrollEmit,\n    bypassOptions: {\n      blockClass: blockClass,\n      blockSelector: blockSelector,\n      unblockSelector: unblockSelector,\n      maskTextClass: maskTextClass,\n      maskTextSelector: maskTextSelector,\n      unmaskTextSelector: unmaskTextSelector,\n      maskInputSelector: maskInputSelector,\n      unmaskInputSelector: unmaskInputSelector,\n      inlineStylesheet: inlineStylesheet,\n      maskInputOptions: maskInputOptions,\n      maskTextFn: maskTextFn,\n      maskInputFn: maskInputFn,\n      recordCanvas: recordCanvas,\n      inlineImages: inlineImages,\n      sampling: sampling,\n      slimDOMOptions: slimDOMOptions,\n      iframeManager: iframeManager,\n      canvasManager: canvasManager\n    },\n    mirror: mirror\n  });\n  takeFullSnapshot = function (isCheckout) {\n    var _a, _b, _c, _d;\n    if (isCheckout === void 0) {\n      isCheckout = false;\n    }\n    wrappedEmit(wrapEvent({\n      type: EventType.Meta,\n      data: {\n        href: window.location.href,\n        width: getWindowWidth(),\n        height: getWindowHeight()\n      }\n    }), isCheckout);\n    mutationBuffers.forEach(function (buf) {\n      return buf.lock();\n    });\n    var _e = __read(snapshot(document, {\n        blockClass: blockClass,\n        blockSelector: blockSelector,\n        unblockSelector: unblockSelector,\n        maskTextClass: maskTextClass,\n        maskTextSelector: maskTextSelector,\n        unmaskTextSelector: unmaskTextSelector,\n        maskInputSelector: maskInputSelector,\n        unmaskInputSelector: unmaskInputSelector,\n        inlineStylesheet: inlineStylesheet,\n        maskAllInputs: maskInputOptions,\n        maskTextFn: maskTextFn,\n        slimDOM: slimDOMOptions,\n        recordCanvas: recordCanvas,\n        inlineImages: inlineImages,\n        onSerialize: function (n) {\n          if (isIframeINode(n)) {\n            iframeManager.addIframe(n);\n          }\n          if (hasShadowRoot(n)) {\n            shadowDomManager.addShadowRoot(n.shadowRoot, document);\n          }\n        },\n        onIframeLoad: function (iframe, childSn) {\n          iframeManager.attachIframe(iframe, childSn);\n          shadowDomManager.observeAttachShadow(iframe);\n        },\n        keepIframeSrcFn: keepIframeSrcFn\n      }), 2),\n      node = _e[0],\n      idNodeMap = _e[1];\n    if (!node) {\n      return console.warn('Failed to snapshot the document');\n    }\n    mirror.map = idNodeMap;\n    wrappedEmit(wrapEvent({\n      type: EventType.FullSnapshot,\n      data: {\n        node: node,\n        initialOffset: {\n          left: window.pageXOffset !== undefined ? window.pageXOffset : (document === null || document === void 0 ? void 0 : document.documentElement.scrollLeft) || ((_b = (_a = document === null || document === void 0 ? void 0 : document.body) === null || _a === void 0 ? void 0 : _a.parentElement) === null || _b === void 0 ? void 0 : _b.scrollLeft) || (document === null || document === void 0 ? void 0 : document.body.scrollLeft) || 0,\n          top: window.pageYOffset !== undefined ? window.pageYOffset : (document === null || document === void 0 ? void 0 : document.documentElement.scrollTop) || ((_d = (_c = document === null || document === void 0 ? void 0 : document.body) === null || _c === void 0 ? void 0 : _c.parentElement) === null || _d === void 0 ? void 0 : _d.scrollTop) || (document === null || document === void 0 ? void 0 : document.body.scrollTop) || 0\n        }\n      }\n    }));\n    mutationBuffers.forEach(function (buf) {\n      return buf.unlock();\n    });\n  };\n  try {\n    var handlers_1 = [];\n    handlers_1.push(on('DOMContentLoaded', function () {\n      wrappedEmit(wrapEvent({\n        type: EventType.DomContentLoaded,\n        data: {}\n      }));\n    }));\n    var observe_1 = function (doc) {\n      var _a;\n      return initObservers({\n        mutationCb: wrappedMutationEmit,\n        mousemoveCb: function (positions, source) {\n          return wrappedEmit(wrapEvent({\n            type: EventType.IncrementalSnapshot,\n            data: {\n              source: source,\n              positions: positions\n            }\n          }));\n        },\n        mouseInteractionCb: function (d) {\n          return wrappedEmit(wrapEvent({\n            type: EventType.IncrementalSnapshot,\n            data: __assign({\n              source: IncrementalSource.MouseInteraction\n            }, d)\n          }));\n        },\n        scrollCb: wrappedScrollEmit,\n        viewportResizeCb: function (d) {\n          return wrappedEmit(wrapEvent({\n            type: EventType.IncrementalSnapshot,\n            data: __assign({\n              source: IncrementalSource.ViewportResize\n            }, d)\n          }));\n        },\n        inputCb: function (v) {\n          return wrappedEmit(wrapEvent({\n            type: EventType.IncrementalSnapshot,\n            data: __assign({\n              source: IncrementalSource.Input\n            }, v)\n          }));\n        },\n        mediaInteractionCb: function (p) {\n          return wrappedEmit(wrapEvent({\n            type: EventType.IncrementalSnapshot,\n            data: __assign({\n              source: IncrementalSource.MediaInteraction\n            }, p)\n          }));\n        },\n        styleSheetRuleCb: function (r) {\n          return wrappedEmit(wrapEvent({\n            type: EventType.IncrementalSnapshot,\n            data: __assign({\n              source: IncrementalSource.StyleSheetRule\n            }, r)\n          }));\n        },\n        styleDeclarationCb: function (r) {\n          return wrappedEmit(wrapEvent({\n            type: EventType.IncrementalSnapshot,\n            data: __assign({\n              source: IncrementalSource.StyleDeclaration\n            }, r)\n          }));\n        },\n        canvasMutationCb: wrappedCanvasMutationEmit,\n        fontCb: function (p) {\n          return wrappedEmit(wrapEvent({\n            type: EventType.IncrementalSnapshot,\n            data: __assign({\n              source: IncrementalSource.Font\n            }, p)\n          }));\n        },\n        blockClass: blockClass,\n        ignoreClass: ignoreClass,\n        ignoreSelector: ignoreSelector,\n        maskTextClass: maskTextClass,\n        maskTextSelector: maskTextSelector,\n        unmaskTextSelector: unmaskTextSelector,\n        maskInputSelector: maskInputSelector,\n        unmaskInputSelector: unmaskInputSelector,\n        maskInputOptions: maskInputOptions,\n        inlineStylesheet: inlineStylesheet,\n        sampling: sampling,\n        recordCanvas: recordCanvas,\n        inlineImages: inlineImages,\n        userTriggeredOnInput: userTriggeredOnInput,\n        collectFonts: collectFonts,\n        doc: doc,\n        maskInputFn: maskInputFn,\n        maskTextFn: maskTextFn,\n        blockSelector: blockSelector,\n        unblockSelector: unblockSelector,\n        slimDOMOptions: slimDOMOptions,\n        mirror: mirror,\n        iframeManager: iframeManager,\n        shadowDomManager: shadowDomManager,\n        canvasManager: canvasManager,\n        plugins: ((_a = plugins === null || plugins === void 0 ? void 0 : plugins.filter(function (p) {\n          return p.observer;\n        })) === null || _a === void 0 ? void 0 : _a.map(function (p) {\n          return {\n            observer: p.observer,\n            options: p.options,\n            callback: function (payload) {\n              return wrappedEmit(wrapEvent({\n                type: EventType.Plugin,\n                data: {\n                  plugin: p.name,\n                  payload: payload\n                }\n              }));\n            }\n          };\n        })) || []\n      }, hooks);\n    };\n    iframeManager.addLoadListener(function (iframeEl) {\n      try {\n        handlers_1.push(observe_1(iframeEl.contentDocument));\n      } catch (error) {\n        console.warn(error);\n      }\n    });\n    var init_1 = function () {\n      takeFullSnapshot();\n      handlers_1.push(observe_1(document));\n    };\n    if (document.readyState === 'interactive' || document.readyState === 'complete') {\n      init_1();\n    } else {\n      handlers_1.push(on('load', function () {\n        wrappedEmit(wrapEvent({\n          type: EventType.Load,\n          data: {}\n        }));\n        init_1();\n      }, window));\n    }\n    return function () {\n      handlers_1.forEach(function (h) {\n        return h();\n      });\n    };\n  } catch (error) {\n    console.warn(error);\n  }\n}\nrecord.addCustomEvent = function (tag, payload) {\n  if (!wrappedEmit) {\n    throw new Error('please add custom event after start recording');\n  }\n  wrappedEmit(wrapEvent({\n    type: EventType.Custom,\n    data: {\n      tag: tag,\n      payload: payload\n    }\n  }));\n};\nrecord.freezePage = function () {\n  mutationBuffers.forEach(function (buf) {\n    return buf.freeze();\n  });\n};\nrecord.takeFullSnapshot = function (isCheckout) {\n  if (!takeFullSnapshot) {\n    throw new Error('please take full snapshot after start recording');\n  }\n  takeFullSnapshot(isCheckout);\n};\nrecord.mirror = mirror;\nconst NAVIGATION_ENTRY_KEYS = ['name', 'type', 'startTime', 'transferSize', 'duration'];\nfunction isNavigationEntryEqual(a) {\n  return function (b) {\n    return NAVIGATION_ENTRY_KEYS.every(key => a[key] === b[key]);\n  };\n}\n\n/**\n * There are some difficulties diagnosing why there are duplicate navigation\n * entries. We've witnessed several intermittent results:\n * - duplicate entries have duration = 0\n * - duplicate entries are the same object reference\n * - none of the above\n *\n * Compare the values of several keys to determine if the entries are duplicates or not.\n */\n// TODO (high-prio): Figure out wth is returned here\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction dedupePerformanceEntries(currentList, newList) {\n  // Partition `currentList` into 3 different lists based on entryType\n  const [existingNavigationEntries, existingLcpEntries, existingEntries] = currentList.reduce((acc, entry) => {\n    if (entry.entryType === 'navigation') {\n      acc[0].push(entry);\n    } else if (entry.entryType === 'largest-contentful-paint') {\n      acc[1].push(entry);\n    } else {\n      acc[2].push(entry);\n    }\n    return acc;\n  }, [[], [], []]);\n  const newEntries = [];\n  const newNavigationEntries = [];\n  let newLcpEntry = existingLcpEntries.length ? existingLcpEntries[existingLcpEntries.length - 1] // Take the last element as list is sorted\n  : undefined;\n  newList.forEach(entry => {\n    if (entry.entryType === 'largest-contentful-paint') {\n      // We want the latest LCP event only\n      if (!newLcpEntry || newLcpEntry.startTime < entry.startTime) {\n        newLcpEntry = entry;\n      }\n      return;\n    }\n    if (entry.entryType === 'navigation') {\n      const navigationEntry = entry;\n\n      // Check if the navigation entry is contained in currentList or newList\n      if (\n      // Ignore any navigation entries with duration 0, as they are likely duplicates\n      entry.duration > 0 &&\n      // Ensure new entry does not already exist in existing entries\n      !existingNavigationEntries.find(isNavigationEntryEqual(navigationEntry)) &&\n      // Ensure new entry does not already exist in new list of navigation entries\n      !newNavigationEntries.find(isNavigationEntryEqual(navigationEntry))) {\n        newNavigationEntries.push(navigationEntry);\n      }\n\n      // Otherwise this navigation entry is considered a duplicate and is thrown away\n      return;\n    }\n    newEntries.push(entry);\n  });\n\n  // Re-combine and sort by startTime\n  return [...(newLcpEntry ? [newLcpEntry] : []), ...existingNavigationEntries, ...existingEntries, ...newEntries, ...newNavigationEntries].sort((a, b) => a.startTime - b.startTime);\n}\n\n/**\n * Sets up a PerformanceObserver to listen to all performance entry types.\n */\nfunction setupPerformanceObserver(replay) {\n  const performanceObserverHandler = list => {\n    // For whatever reason the observer was returning duplicate navigation\n    // entries (the other entry types were not duplicated).\n    const newPerformanceEntries = dedupePerformanceEntries(replay.performanceEvents, list.getEntries());\n    replay.performanceEvents = newPerformanceEntries;\n  };\n  const performanceObserver = new PerformanceObserver(performanceObserverHandler);\n  ['element', 'event', 'first-input', 'largest-contentful-paint', 'layout-shift', 'longtask', 'navigation', 'paint', 'resource'].forEach(type => {\n    try {\n      performanceObserver.observe({\n        type,\n        buffered: true\n      });\n    } catch (e) {\n      // This can throw if an entry type is not supported in the browser.\n      // Ignore these errors.\n    }\n  });\n  return performanceObserver;\n}\nconst workerString = `/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\nfunction t(t){let e=t.length;for(;--e>=0;)t[e]=0}const e=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),a=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),i=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),n=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=new Array(576);t(s);const r=new Array(60);t(r);const o=new Array(512);t(o);const l=new Array(256);t(l);const h=new Array(29);t(h);const d=new Array(30);function _(t,e,a,i,n){this.static_tree=t,this.extra_bits=e,this.extra_base=a,this.elems=i,this.max_length=n,this.has_stree=t&&t.length}let f,c,u;function w(t,e){this.dyn_tree=t,this.max_code=0,this.stat_desc=e}t(d);const m=t=>t<256?o[t]:o[256+(t>>>7)],b=(t,e)=>{t.pending_buf[t.pending++]=255&e,t.pending_buf[t.pending++]=e>>>8&255},g=(t,e,a)=>{t.bi_valid>16-a?(t.bi_buf|=e<<t.bi_valid&65535,b(t,t.bi_buf),t.bi_buf=e>>16-t.bi_valid,t.bi_valid+=a-16):(t.bi_buf|=e<<t.bi_valid&65535,t.bi_valid+=a)},p=(t,e,a)=>{g(t,a[2*e],a[2*e+1])},k=(t,e)=>{let a=0;do{a|=1&t,t>>>=1,a<<=1}while(--e>0);return a>>>1},v=(t,e,a)=>{const i=new Array(16);let n,s,r=0;for(n=1;n<=15;n++)r=r+a[n-1]<<1,i[n]=r;for(s=0;s<=e;s++){let e=t[2*s+1];0!==e&&(t[2*s]=k(i[e]++,e))}},y=t=>{let e;for(e=0;e<286;e++)t.dyn_ltree[2*e]=0;for(e=0;e<30;e++)t.dyn_dtree[2*e]=0;for(e=0;e<19;e++)t.bl_tree[2*e]=0;t.dyn_ltree[512]=1,t.opt_len=t.static_len=0,t.sym_next=t.matches=0},x=t=>{t.bi_valid>8?b(t,t.bi_buf):t.bi_valid>0&&(t.pending_buf[t.pending++]=t.bi_buf),t.bi_buf=0,t.bi_valid=0},z=(t,e,a,i)=>{const n=2*e,s=2*a;return t[n]<t[s]||t[n]===t[s]&&i[e]<=i[a]},A=(t,e,a)=>{const i=t.heap[a];let n=a<<1;for(;n<=t.heap_len&&(n<t.heap_len&&z(e,t.heap[n+1],t.heap[n],t.depth)&&n++,!z(e,i,t.heap[n],t.depth));)t.heap[a]=t.heap[n],a=n,n<<=1;t.heap[a]=i},E=(t,i,n)=>{let s,r,o,_,f=0;if(0!==t.sym_next)do{s=255&t.pending_buf[t.sym_buf+f++],s+=(255&t.pending_buf[t.sym_buf+f++])<<8,r=t.pending_buf[t.sym_buf+f++],0===s?p(t,r,i):(o=l[r],p(t,o+256+1,i),_=e[o],0!==_&&(r-=h[o],g(t,r,_)),s--,o=m(s),p(t,o,n),_=a[o],0!==_&&(s-=d[o],g(t,s,_)))}while(f<t.sym_next);p(t,256,i)},R=(t,e)=>{const a=e.dyn_tree,i=e.stat_desc.static_tree,n=e.stat_desc.has_stree,s=e.stat_desc.elems;let r,o,l,h=-1;for(t.heap_len=0,t.heap_max=573,r=0;r<s;r++)0!==a[2*r]?(t.heap[++t.heap_len]=h=r,t.depth[r]=0):a[2*r+1]=0;for(;t.heap_len<2;)l=t.heap[++t.heap_len]=h<2?++h:0,a[2*l]=1,t.depth[l]=0,t.opt_len--,n&&(t.static_len-=i[2*l+1]);for(e.max_code=h,r=t.heap_len>>1;r>=1;r--)A(t,a,r);l=s;do{r=t.heap[1],t.heap[1]=t.heap[t.heap_len--],A(t,a,1),o=t.heap[1],t.heap[--t.heap_max]=r,t.heap[--t.heap_max]=o,a[2*l]=a[2*r]+a[2*o],t.depth[l]=(t.depth[r]>=t.depth[o]?t.depth[r]:t.depth[o])+1,a[2*r+1]=a[2*o+1]=l,t.heap[1]=l++,A(t,a,1)}while(t.heap_len>=2);t.heap[--t.heap_max]=t.heap[1],((t,e)=>{const a=e.dyn_tree,i=e.max_code,n=e.stat_desc.static_tree,s=e.stat_desc.has_stree,r=e.stat_desc.extra_bits,o=e.stat_desc.extra_base,l=e.stat_desc.max_length;let h,d,_,f,c,u,w=0;for(f=0;f<=15;f++)t.bl_count[f]=0;for(a[2*t.heap[t.heap_max]+1]=0,h=t.heap_max+1;h<573;h++)d=t.heap[h],f=a[2*a[2*d+1]+1]+1,f>l&&(f=l,w++),a[2*d+1]=f,d>i||(t.bl_count[f]++,c=0,d>=o&&(c=r[d-o]),u=a[2*d],t.opt_len+=u*(f+c),s&&(t.static_len+=u*(n[2*d+1]+c)));if(0!==w){do{for(f=l-1;0===t.bl_count[f];)f--;t.bl_count[f]--,t.bl_count[f+1]+=2,t.bl_count[l]--,w-=2}while(w>0);for(f=l;0!==f;f--)for(d=t.bl_count[f];0!==d;)_=t.heap[--h],_>i||(a[2*_+1]!==f&&(t.opt_len+=(f-a[2*_+1])*a[2*_],a[2*_+1]=f),d--)}})(t,e),v(a,h,t.bl_count)},Z=(t,e,a)=>{let i,n,s=-1,r=e[1],o=0,l=7,h=4;for(0===r&&(l=138,h=3),e[2*(a+1)+1]=65535,i=0;i<=a;i++)n=r,r=e[2*(i+1)+1],++o<l&&n===r||(o<h?t.bl_tree[2*n]+=o:0!==n?(n!==s&&t.bl_tree[2*n]++,t.bl_tree[32]++):o<=10?t.bl_tree[34]++:t.bl_tree[36]++,o=0,s=n,0===r?(l=138,h=3):n===r?(l=6,h=3):(l=7,h=4))},U=(t,e,a)=>{let i,n,s=-1,r=e[1],o=0,l=7,h=4;for(0===r&&(l=138,h=3),i=0;i<=a;i++)if(n=r,r=e[2*(i+1)+1],!(++o<l&&n===r)){if(o<h)do{p(t,n,t.bl_tree)}while(0!=--o);else 0!==n?(n!==s&&(p(t,n,t.bl_tree),o--),p(t,16,t.bl_tree),g(t,o-3,2)):o<=10?(p(t,17,t.bl_tree),g(t,o-3,3)):(p(t,18,t.bl_tree),g(t,o-11,7));o=0,s=n,0===r?(l=138,h=3):n===r?(l=6,h=3):(l=7,h=4)}};let S=!1;const D=(t,e,a,i)=>{g(t,0+(i?1:0),3),x(t),b(t,a),b(t,~a),a&&t.pending_buf.set(t.window.subarray(e,e+a),t.pending),t.pending+=a};var T=(t,e,a,i)=>{let o,l,h=0;t.level>0?(2===t.strm.data_type&&(t.strm.data_type=(t=>{let e,a=4093624447;for(e=0;e<=31;e++,a>>>=1)if(1&a&&0!==t.dyn_ltree[2*e])return 0;if(0!==t.dyn_ltree[18]||0!==t.dyn_ltree[20]||0!==t.dyn_ltree[26])return 1;for(e=32;e<256;e++)if(0!==t.dyn_ltree[2*e])return 1;return 0})(t)),R(t,t.l_desc),R(t,t.d_desc),h=(t=>{let e;for(Z(t,t.dyn_ltree,t.l_desc.max_code),Z(t,t.dyn_dtree,t.d_desc.max_code),R(t,t.bl_desc),e=18;e>=3&&0===t.bl_tree[2*n[e]+1];e--);return t.opt_len+=3*(e+1)+5+5+4,e})(t),o=t.opt_len+3+7>>>3,l=t.static_len+3+7>>>3,l<=o&&(o=l)):o=l=a+5,a+4<=o&&-1!==e?D(t,e,a,i):4===t.strategy||l===o?(g(t,2+(i?1:0),3),E(t,s,r)):(g(t,4+(i?1:0),3),((t,e,a,i)=>{let s;for(g(t,e-257,5),g(t,a-1,5),g(t,i-4,4),s=0;s<i;s++)g(t,t.bl_tree[2*n[s]+1],3);U(t,t.dyn_ltree,e-1),U(t,t.dyn_dtree,a-1)})(t,t.l_desc.max_code+1,t.d_desc.max_code+1,h+1),E(t,t.dyn_ltree,t.dyn_dtree)),y(t),i&&x(t)},O={_tr_init:t=>{S||((()=>{let t,n,w,m,b;const g=new Array(16);for(w=0,m=0;m<28;m++)for(h[m]=w,t=0;t<1<<e[m];t++)l[w++]=m;for(l[w-1]=m,b=0,m=0;m<16;m++)for(d[m]=b,t=0;t<1<<a[m];t++)o[b++]=m;for(b>>=7;m<30;m++)for(d[m]=b<<7,t=0;t<1<<a[m]-7;t++)o[256+b++]=m;for(n=0;n<=15;n++)g[n]=0;for(t=0;t<=143;)s[2*t+1]=8,t++,g[8]++;for(;t<=255;)s[2*t+1]=9,t++,g[9]++;for(;t<=279;)s[2*t+1]=7,t++,g[7]++;for(;t<=287;)s[2*t+1]=8,t++,g[8]++;for(v(s,287,g),t=0;t<30;t++)r[2*t+1]=5,r[2*t]=k(t,5);f=new _(s,e,257,286,15),c=new _(r,a,0,30,15),u=new _(new Array(0),i,0,19,7)})(),S=!0),t.l_desc=new w(t.dyn_ltree,f),t.d_desc=new w(t.dyn_dtree,c),t.bl_desc=new w(t.bl_tree,u),t.bi_buf=0,t.bi_valid=0,y(t)},_tr_stored_block:D,_tr_flush_block:T,_tr_tally:(t,e,a)=>(t.pending_buf[t.sym_buf+t.sym_next++]=e,t.pending_buf[t.sym_buf+t.sym_next++]=e>>8,t.pending_buf[t.sym_buf+t.sym_next++]=a,0===e?t.dyn_ltree[2*a]++:(t.matches++,e--,t.dyn_ltree[2*(l[a]+256+1)]++,t.dyn_dtree[2*m(e)]++),t.sym_next===t.sym_end),_tr_align:t=>{g(t,2,3),p(t,256,s),(t=>{16===t.bi_valid?(b(t,t.bi_buf),t.bi_buf=0,t.bi_valid=0):t.bi_valid>=8&&(t.pending_buf[t.pending++]=255&t.bi_buf,t.bi_buf>>=8,t.bi_valid-=8)})(t)}};var F=(t,e,a,i)=>{let n=65535&t|0,s=t>>>16&65535|0,r=0;for(;0!==a;){r=a>2e3?2e3:a,a-=r;do{n=n+e[i++]|0,s=s+n|0}while(--r);n%=65521,s%=65521}return n|s<<16|0};const L=new Uint32Array((()=>{let t,e=[];for(var a=0;a<256;a++){t=a;for(var i=0;i<8;i++)t=1&t?3988292384^t>>>1:t>>>1;e[a]=t}return e})());var N=(t,e,a,i)=>{const n=L,s=i+a;t^=-1;for(let a=i;a<s;a++)t=t>>>8^n[255&(t^e[a])];return-1^t},I={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"},B={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:C,_tr_stored_block:H,_tr_flush_block:M,_tr_tally:j,_tr_align:K}=O,{Z_NO_FLUSH:P,Z_PARTIAL_FLUSH:Y,Z_FULL_FLUSH:G,Z_FINISH:X,Z_BLOCK:W,Z_OK:q,Z_STREAM_END:J,Z_STREAM_ERROR:Q,Z_DATA_ERROR:V,Z_BUF_ERROR:$,Z_DEFAULT_COMPRESSION:tt,Z_FILTERED:et,Z_HUFFMAN_ONLY:at,Z_RLE:it,Z_FIXED:nt,Z_DEFAULT_STRATEGY:st,Z_UNKNOWN:rt,Z_DEFLATED:ot}=B,lt=(t,e)=>(t.msg=I[e],e),ht=t=>2*t-(t>4?9:0),dt=t=>{let e=t.length;for(;--e>=0;)t[e]=0},_t=t=>{let e,a,i,n=t.w_size;e=t.hash_size,i=e;do{a=t.head[--i],t.head[i]=a>=n?a-n:0}while(--e);e=n,i=e;do{a=t.prev[--i],t.prev[i]=a>=n?a-n:0}while(--e)};let ft=(t,e,a)=>(e<<t.hash_shift^a)&t.hash_mask;const ct=t=>{const e=t.state;let a=e.pending;a>t.avail_out&&(a=t.avail_out),0!==a&&(t.output.set(e.pending_buf.subarray(e.pending_out,e.pending_out+a),t.next_out),t.next_out+=a,e.pending_out+=a,t.total_out+=a,t.avail_out-=a,e.pending-=a,0===e.pending&&(e.pending_out=0))},ut=(t,e)=>{M(t,t.block_start>=0?t.block_start:-1,t.strstart-t.block_start,e),t.block_start=t.strstart,ct(t.strm)},wt=(t,e)=>{t.pending_buf[t.pending++]=e},mt=(t,e)=>{t.pending_buf[t.pending++]=e>>>8&255,t.pending_buf[t.pending++]=255&e},bt=(t,e,a,i)=>{let n=t.avail_in;return n>i&&(n=i),0===n?0:(t.avail_in-=n,e.set(t.input.subarray(t.next_in,t.next_in+n),a),1===t.state.wrap?t.adler=F(t.adler,e,n,a):2===t.state.wrap&&(t.adler=N(t.adler,e,n,a)),t.next_in+=n,t.total_in+=n,n)},gt=(t,e)=>{let a,i,n=t.max_chain_length,s=t.strstart,r=t.prev_length,o=t.nice_match;const l=t.strstart>t.w_size-262?t.strstart-(t.w_size-262):0,h=t.window,d=t.w_mask,_=t.prev,f=t.strstart+258;let c=h[s+r-1],u=h[s+r];t.prev_length>=t.good_match&&(n>>=2),o>t.lookahead&&(o=t.lookahead);do{if(a=e,h[a+r]===u&&h[a+r-1]===c&&h[a]===h[s]&&h[++a]===h[s+1]){s+=2,a++;do{}while(h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&s<f);if(i=258-(f-s),s=f-258,i>r){if(t.match_start=e,r=i,i>=o)break;c=h[s+r-1],u=h[s+r]}}}while((e=_[e&d])>l&&0!=--n);return r<=t.lookahead?r:t.lookahead},pt=t=>{const e=t.w_size;let a,i,n;do{if(i=t.window_size-t.lookahead-t.strstart,t.strstart>=e+(e-262)&&(t.window.set(t.window.subarray(e,e+e-i),0),t.match_start-=e,t.strstart-=e,t.block_start-=e,t.insert>t.strstart&&(t.insert=t.strstart),_t(t),i+=e),0===t.strm.avail_in)break;if(a=bt(t.strm,t.window,t.strstart+t.lookahead,i),t.lookahead+=a,t.lookahead+t.insert>=3)for(n=t.strstart-t.insert,t.ins_h=t.window[n],t.ins_h=ft(t,t.ins_h,t.window[n+1]);t.insert&&(t.ins_h=ft(t,t.ins_h,t.window[n+3-1]),t.prev[n&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=n,n++,t.insert--,!(t.lookahead+t.insert<3)););}while(t.lookahead<262&&0!==t.strm.avail_in)},kt=(t,e)=>{let a,i,n,s=t.pending_buf_size-5>t.w_size?t.w_size:t.pending_buf_size-5,r=0,o=t.strm.avail_in;do{if(a=65535,n=t.bi_valid+42>>3,t.strm.avail_out<n)break;if(n=t.strm.avail_out-n,i=t.strstart-t.block_start,a>i+t.strm.avail_in&&(a=i+t.strm.avail_in),a>n&&(a=n),a<s&&(0===a&&e!==X||e===P||a!==i+t.strm.avail_in))break;r=e===X&&a===i+t.strm.avail_in?1:0,H(t,0,0,r),t.pending_buf[t.pending-4]=a,t.pending_buf[t.pending-3]=a>>8,t.pending_buf[t.pending-2]=~a,t.pending_buf[t.pending-1]=~a>>8,ct(t.strm),i&&(i>a&&(i=a),t.strm.output.set(t.window.subarray(t.block_start,t.block_start+i),t.strm.next_out),t.strm.next_out+=i,t.strm.avail_out-=i,t.strm.total_out+=i,t.block_start+=i,a-=i),a&&(bt(t.strm,t.strm.output,t.strm.next_out,a),t.strm.next_out+=a,t.strm.avail_out-=a,t.strm.total_out+=a)}while(0===r);return o-=t.strm.avail_in,o&&(o>=t.w_size?(t.matches=2,t.window.set(t.strm.input.subarray(t.strm.next_in-t.w_size,t.strm.next_in),0),t.strstart=t.w_size,t.insert=t.strstart):(t.window_size-t.strstart<=o&&(t.strstart-=t.w_size,t.window.set(t.window.subarray(t.w_size,t.w_size+t.strstart),0),t.matches<2&&t.matches++,t.insert>t.strstart&&(t.insert=t.strstart)),t.window.set(t.strm.input.subarray(t.strm.next_in-o,t.strm.next_in),t.strstart),t.strstart+=o,t.insert+=o>t.w_size-t.insert?t.w_size-t.insert:o),t.block_start=t.strstart),t.high_water<t.strstart&&(t.high_water=t.strstart),r?4:e!==P&&e!==X&&0===t.strm.avail_in&&t.strstart===t.block_start?2:(n=t.window_size-t.strstart,t.strm.avail_in>n&&t.block_start>=t.w_size&&(t.block_start-=t.w_size,t.strstart-=t.w_size,t.window.set(t.window.subarray(t.w_size,t.w_size+t.strstart),0),t.matches<2&&t.matches++,n+=t.w_size,t.insert>t.strstart&&(t.insert=t.strstart)),n>t.strm.avail_in&&(n=t.strm.avail_in),n&&(bt(t.strm,t.window,t.strstart,n),t.strstart+=n,t.insert+=n>t.w_size-t.insert?t.w_size-t.insert:n),t.high_water<t.strstart&&(t.high_water=t.strstart),n=t.bi_valid+42>>3,n=t.pending_buf_size-n>65535?65535:t.pending_buf_size-n,s=n>t.w_size?t.w_size:n,i=t.strstart-t.block_start,(i>=s||(i||e===X)&&e!==P&&0===t.strm.avail_in&&i<=n)&&(a=i>n?n:i,r=e===X&&0===t.strm.avail_in&&a===i?1:0,H(t,t.block_start,a,r),t.block_start+=a,ct(t.strm)),r?3:1)},vt=(t,e)=>{let a,i;for(;;){if(t.lookahead<262){if(pt(t),t.lookahead<262&&e===P)return 1;if(0===t.lookahead)break}if(a=0,t.lookahead>=3&&(t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!==a&&t.strstart-a<=t.w_size-262&&(t.match_length=gt(t,a)),t.match_length>=3)if(i=j(t,t.strstart-t.match_start,t.match_length-3),t.lookahead-=t.match_length,t.match_length<=t.max_lazy_match&&t.lookahead>=3){t.match_length--;do{t.strstart++,t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart}while(0!=--t.match_length);t.strstart++}else t.strstart+=t.match_length,t.match_length=0,t.ins_h=t.window[t.strstart],t.ins_h=ft(t,t.ins_h,t.window[t.strstart+1]);else i=j(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++;if(i&&(ut(t,!1),0===t.strm.avail_out))return 1}return t.insert=t.strstart<2?t.strstart:2,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2},yt=(t,e)=>{let a,i,n;for(;;){if(t.lookahead<262){if(pt(t),t.lookahead<262&&e===P)return 1;if(0===t.lookahead)break}if(a=0,t.lookahead>=3&&(t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),t.prev_length=t.match_length,t.prev_match=t.match_start,t.match_length=2,0!==a&&t.prev_length<t.max_lazy_match&&t.strstart-a<=t.w_size-262&&(t.match_length=gt(t,a),t.match_length<=5&&(t.strategy===et||3===t.match_length&&t.strstart-t.match_start>4096)&&(t.match_length=2)),t.prev_length>=3&&t.match_length<=t.prev_length){n=t.strstart+t.lookahead-3,i=j(t,t.strstart-1-t.prev_match,t.prev_length-3),t.lookahead-=t.prev_length-1,t.prev_length-=2;do{++t.strstart<=n&&(t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart)}while(0!=--t.prev_length);if(t.match_available=0,t.match_length=2,t.strstart++,i&&(ut(t,!1),0===t.strm.avail_out))return 1}else if(t.match_available){if(i=j(t,0,t.window[t.strstart-1]),i&&ut(t,!1),t.strstart++,t.lookahead--,0===t.strm.avail_out)return 1}else t.match_available=1,t.strstart++,t.lookahead--}return t.match_available&&(i=j(t,0,t.window[t.strstart-1]),t.match_available=0),t.insert=t.strstart<2?t.strstart:2,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2};function xt(t,e,a,i,n){this.good_length=t,this.max_lazy=e,this.nice_length=a,this.max_chain=i,this.func=n}const zt=[new xt(0,0,0,0,kt),new xt(4,4,8,4,vt),new xt(4,5,16,8,vt),new xt(4,6,32,32,vt),new xt(4,4,16,16,yt),new xt(8,16,32,32,yt),new xt(8,16,128,128,yt),new xt(8,32,128,256,yt),new xt(32,128,258,1024,yt),new xt(32,258,258,4096,yt)];function At(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=ot,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(1146),this.dyn_dtree=new Uint16Array(122),this.bl_tree=new Uint16Array(78),dt(this.dyn_ltree),dt(this.dyn_dtree),dt(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(16),this.heap=new Uint16Array(573),dt(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(573),dt(this.depth),this.sym_buf=0,this.lit_bufsize=0,this.sym_next=0,this.sym_end=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const Et=t=>{if(!t)return 1;const e=t.state;return!e||e.strm!==t||42!==e.status&&57!==e.status&&69!==e.status&&73!==e.status&&91!==e.status&&103!==e.status&&113!==e.status&&666!==e.status?1:0},Rt=t=>{if(Et(t))return lt(t,Q);t.total_in=t.total_out=0,t.data_type=rt;const e=t.state;return e.pending=0,e.pending_out=0,e.wrap<0&&(e.wrap=-e.wrap),e.status=2===e.wrap?57:e.wrap?42:113,t.adler=2===e.wrap?0:1,e.last_flush=-2,C(e),q},Zt=t=>{const e=Rt(t);var a;return e===q&&((a=t.state).window_size=2*a.w_size,dt(a.head),a.max_lazy_match=zt[a.level].max_lazy,a.good_match=zt[a.level].good_length,a.nice_match=zt[a.level].nice_length,a.max_chain_length=zt[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=2,a.match_available=0,a.ins_h=0),e},Ut=(t,e,a,i,n,s)=>{if(!t)return Q;let r=1;if(e===tt&&(e=6),i<0?(r=0,i=-i):i>15&&(r=2,i-=16),n<1||n>9||a!==ot||i<8||i>15||e<0||e>9||s<0||s>nt||8===i&&1!==r)return lt(t,Q);8===i&&(i=9);const o=new At;return t.state=o,o.strm=t,o.status=42,o.wrap=r,o.gzhead=null,o.w_bits=i,o.w_size=1<<o.w_bits,o.w_mask=o.w_size-1,o.hash_bits=n+7,o.hash_size=1<<o.hash_bits,o.hash_mask=o.hash_size-1,o.hash_shift=~~((o.hash_bits+3-1)/3),o.window=new Uint8Array(2*o.w_size),o.head=new Uint16Array(o.hash_size),o.prev=new Uint16Array(o.w_size),o.lit_bufsize=1<<n+6,o.pending_buf_size=4*o.lit_bufsize,o.pending_buf=new Uint8Array(o.pending_buf_size),o.sym_buf=o.lit_bufsize,o.sym_end=3*(o.lit_bufsize-1),o.level=e,o.strategy=s,o.method=a,Zt(t)};var St={deflateInit:(t,e)=>Ut(t,e,ot,15,8,st),deflateInit2:Ut,deflateReset:Zt,deflateResetKeep:Rt,deflateSetHeader:(t,e)=>Et(t)||2!==t.state.wrap?Q:(t.state.gzhead=e,q),deflate:(t,e)=>{if(Et(t)||e>W||e<0)return t?lt(t,Q):Q;const a=t.state;if(!t.output||0!==t.avail_in&&!t.input||666===a.status&&e!==X)return lt(t,0===t.avail_out?$:Q);const i=a.last_flush;if(a.last_flush=e,0!==a.pending){if(ct(t),0===t.avail_out)return a.last_flush=-1,q}else if(0===t.avail_in&&ht(e)<=ht(i)&&e!==X)return lt(t,$);if(666===a.status&&0!==t.avail_in)return lt(t,$);if(42===a.status&&0===a.wrap&&(a.status=113),42===a.status){let e=ot+(a.w_bits-8<<4)<<8,i=-1;if(i=a.strategy>=at||a.level<2?0:a.level<6?1:6===a.level?2:3,e|=i<<6,0!==a.strstart&&(e|=32),e+=31-e%31,mt(a,e),0!==a.strstart&&(mt(a,t.adler>>>16),mt(a,65535&t.adler)),t.adler=1,a.status=113,ct(t),0!==a.pending)return a.last_flush=-1,q}if(57===a.status)if(t.adler=0,wt(a,31),wt(a,139),wt(a,8),a.gzhead)wt(a,(a.gzhead.text?1:0)+(a.gzhead.hcrc?2:0)+(a.gzhead.extra?4:0)+(a.gzhead.name?8:0)+(a.gzhead.comment?16:0)),wt(a,255&a.gzhead.time),wt(a,a.gzhead.time>>8&255),wt(a,a.gzhead.time>>16&255),wt(a,a.gzhead.time>>24&255),wt(a,9===a.level?2:a.strategy>=at||a.level<2?4:0),wt(a,255&a.gzhead.os),a.gzhead.extra&&a.gzhead.extra.length&&(wt(a,255&a.gzhead.extra.length),wt(a,a.gzhead.extra.length>>8&255)),a.gzhead.hcrc&&(t.adler=N(t.adler,a.pending_buf,a.pending,0)),a.gzindex=0,a.status=69;else if(wt(a,0),wt(a,0),wt(a,0),wt(a,0),wt(a,0),wt(a,9===a.level?2:a.strategy>=at||a.level<2?4:0),wt(a,3),a.status=113,ct(t),0!==a.pending)return a.last_flush=-1,q;if(69===a.status){if(a.gzhead.extra){let e=a.pending,i=(65535&a.gzhead.extra.length)-a.gzindex;for(;a.pending+i>a.pending_buf_size;){let n=a.pending_buf_size-a.pending;if(a.pending_buf.set(a.gzhead.extra.subarray(a.gzindex,a.gzindex+n),a.pending),a.pending=a.pending_buf_size,a.gzhead.hcrc&&a.pending>e&&(t.adler=N(t.adler,a.pending_buf,a.pending-e,e)),a.gzindex+=n,ct(t),0!==a.pending)return a.last_flush=-1,q;e=0,i-=n}let n=new Uint8Array(a.gzhead.extra);a.pending_buf.set(n.subarray(a.gzindex,a.gzindex+i),a.pending),a.pending+=i,a.gzhead.hcrc&&a.pending>e&&(t.adler=N(t.adler,a.pending_buf,a.pending-e,e)),a.gzindex=0}a.status=73}if(73===a.status){if(a.gzhead.name){let e,i=a.pending;do{if(a.pending===a.pending_buf_size){if(a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i)),ct(t),0!==a.pending)return a.last_flush=-1,q;i=0}e=a.gzindex<a.gzhead.name.length?255&a.gzhead.name.charCodeAt(a.gzindex++):0,wt(a,e)}while(0!==e);a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i)),a.gzindex=0}a.status=91}if(91===a.status){if(a.gzhead.comment){let e,i=a.pending;do{if(a.pending===a.pending_buf_size){if(a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i)),ct(t),0!==a.pending)return a.last_flush=-1,q;i=0}e=a.gzindex<a.gzhead.comment.length?255&a.gzhead.comment.charCodeAt(a.gzindex++):0,wt(a,e)}while(0!==e);a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i))}a.status=103}if(103===a.status){if(a.gzhead.hcrc){if(a.pending+2>a.pending_buf_size&&(ct(t),0!==a.pending))return a.last_flush=-1,q;wt(a,255&t.adler),wt(a,t.adler>>8&255),t.adler=0}if(a.status=113,ct(t),0!==a.pending)return a.last_flush=-1,q}if(0!==t.avail_in||0!==a.lookahead||e!==P&&666!==a.status){let i=0===a.level?kt(a,e):a.strategy===at?((t,e)=>{let a;for(;;){if(0===t.lookahead&&(pt(t),0===t.lookahead)){if(e===P)return 1;break}if(t.match_length=0,a=j(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++,a&&(ut(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2})(a,e):a.strategy===it?((t,e)=>{let a,i,n,s;const r=t.window;for(;;){if(t.lookahead<=258){if(pt(t),t.lookahead<=258&&e===P)return 1;if(0===t.lookahead)break}if(t.match_length=0,t.lookahead>=3&&t.strstart>0&&(n=t.strstart-1,i=r[n],i===r[++n]&&i===r[++n]&&i===r[++n])){s=t.strstart+258;do{}while(i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&n<s);t.match_length=258-(s-n),t.match_length>t.lookahead&&(t.match_length=t.lookahead)}if(t.match_length>=3?(a=j(t,1,t.match_length-3),t.lookahead-=t.match_length,t.strstart+=t.match_length,t.match_length=0):(a=j(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++),a&&(ut(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2})(a,e):zt[a.level].func(a,e);if(3!==i&&4!==i||(a.status=666),1===i||3===i)return 0===t.avail_out&&(a.last_flush=-1),q;if(2===i&&(e===Y?K(a):e!==W&&(H(a,0,0,!1),e===G&&(dt(a.head),0===a.lookahead&&(a.strstart=0,a.block_start=0,a.insert=0))),ct(t),0===t.avail_out))return a.last_flush=-1,q}return e!==X?q:a.wrap<=0?J:(2===a.wrap?(wt(a,255&t.adler),wt(a,t.adler>>8&255),wt(a,t.adler>>16&255),wt(a,t.adler>>24&255),wt(a,255&t.total_in),wt(a,t.total_in>>8&255),wt(a,t.total_in>>16&255),wt(a,t.total_in>>24&255)):(mt(a,t.adler>>>16),mt(a,65535&t.adler)),ct(t),a.wrap>0&&(a.wrap=-a.wrap),0!==a.pending?q:J)},deflateEnd:t=>{if(Et(t))return Q;const e=t.state.status;return t.state=null,113===e?lt(t,V):q},deflateSetDictionary:(t,e)=>{let a=e.length;if(Et(t))return Q;const i=t.state,n=i.wrap;if(2===n||1===n&&42!==i.status||i.lookahead)return Q;if(1===n&&(t.adler=F(t.adler,e,a,0)),i.wrap=0,a>=i.w_size){0===n&&(dt(i.head),i.strstart=0,i.block_start=0,i.insert=0);let t=new Uint8Array(i.w_size);t.set(e.subarray(a-i.w_size,a),0),e=t,a=i.w_size}const s=t.avail_in,r=t.next_in,o=t.input;for(t.avail_in=a,t.next_in=0,t.input=e,pt(i);i.lookahead>=3;){let t=i.strstart,e=i.lookahead-2;do{i.ins_h=ft(i,i.ins_h,i.window[t+3-1]),i.prev[t&i.w_mask]=i.head[i.ins_h],i.head[i.ins_h]=t,t++}while(--e);i.strstart=t,i.lookahead=2,pt(i)}return i.strstart+=i.lookahead,i.block_start=i.strstart,i.insert=i.lookahead,i.lookahead=0,i.match_length=i.prev_length=2,i.match_available=0,t.next_in=r,t.input=o,t.avail_in=s,i.wrap=n,q},deflateInfo:\"pako deflate (from Nodeca project)\"};const Dt=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var Tt=function(t){const e=Array.prototype.slice.call(arguments,1);for(;e.length;){const a=e.shift();if(a){if(\"object\"!=typeof a)throw new TypeError(a+\"must be non-object\");for(const e in a)Dt(a,e)&&(t[e]=a[e])}}return t},Ot=t=>{let e=0;for(let a=0,i=t.length;a<i;a++)e+=t[a].length;const a=new Uint8Array(e);for(let e=0,i=0,n=t.length;e<n;e++){let n=t[e];a.set(n,i),i+=n.length}return a};let Ft=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(t){Ft=!1}const Lt=new Uint8Array(256);for(let t=0;t<256;t++)Lt[t]=t>=252?6:t>=248?5:t>=240?4:t>=224?3:t>=192?2:1;Lt[254]=Lt[254]=1;var Nt=t=>{if(\"function\"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(t);let e,a,i,n,s,r=t.length,o=0;for(n=0;n<r;n++)a=t.charCodeAt(n),55296==(64512&a)&&n+1<r&&(i=t.charCodeAt(n+1),56320==(64512&i)&&(a=65536+(a-55296<<10)+(i-56320),n++)),o+=a<128?1:a<2048?2:a<65536?3:4;for(e=new Uint8Array(o),s=0,n=0;s<o;n++)a=t.charCodeAt(n),55296==(64512&a)&&n+1<r&&(i=t.charCodeAt(n+1),56320==(64512&i)&&(a=65536+(a-55296<<10)+(i-56320),n++)),a<128?e[s++]=a:a<2048?(e[s++]=192|a>>>6,e[s++]=128|63&a):a<65536?(e[s++]=224|a>>>12,e[s++]=128|a>>>6&63,e[s++]=128|63&a):(e[s++]=240|a>>>18,e[s++]=128|a>>>12&63,e[s++]=128|a>>>6&63,e[s++]=128|63&a);return e},It=(t,e)=>{const a=e||t.length;if(\"function\"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(t.subarray(0,e));let i,n;const s=new Array(2*a);for(n=0,i=0;i<a;){let e=t[i++];if(e<128){s[n++]=e;continue}let r=Lt[e];if(r>4)s[n++]=65533,i+=r-1;else{for(e&=2===r?31:3===r?15:7;r>1&&i<a;)e=e<<6|63&t[i++],r--;r>1?s[n++]=65533:e<65536?s[n++]=e:(e-=65536,s[n++]=55296|e>>10&1023,s[n++]=56320|1023&e)}}return((t,e)=>{if(e<65534&&t.subarray&&Ft)return String.fromCharCode.apply(null,t.length===e?t:t.subarray(0,e));let a=\"\";for(let i=0;i<e;i++)a+=String.fromCharCode(t[i]);return a})(s,n)},Bt=(t,e)=>{(e=e||t.length)>t.length&&(e=t.length);let a=e-1;for(;a>=0&&128==(192&t[a]);)a--;return a<0||0===a?e:a+Lt[t[a]]>e?a:e};var Ct=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0};const Ht=Object.prototype.toString,{Z_NO_FLUSH:Mt,Z_SYNC_FLUSH:jt,Z_FULL_FLUSH:Kt,Z_FINISH:Pt,Z_OK:Yt,Z_STREAM_END:Gt,Z_DEFAULT_COMPRESSION:Xt,Z_DEFAULT_STRATEGY:Wt,Z_DEFLATED:qt}=B;function Jt(t){this.options=Tt({level:Xt,method:qt,chunkSize:16384,windowBits:15,memLevel:8,strategy:Wt},t||{});let e=this.options;e.raw&&e.windowBits>0?e.windowBits=-e.windowBits:e.gzip&&e.windowBits>0&&e.windowBits<16&&(e.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new Ct,this.strm.avail_out=0;let a=St.deflateInit2(this.strm,e.level,e.method,e.windowBits,e.memLevel,e.strategy);if(a!==Yt)throw new Error(I[a]);if(e.header&&St.deflateSetHeader(this.strm,e.header),e.dictionary){let t;if(t=\"string\"==typeof e.dictionary?Nt(e.dictionary):\"[object ArrayBuffer]\"===Ht.call(e.dictionary)?new Uint8Array(e.dictionary):e.dictionary,a=St.deflateSetDictionary(this.strm,t),a!==Yt)throw new Error(I[a]);this._dict_set=!0}}function Qt(t,e){const a=new Jt(e);if(a.push(t,!0),a.err)throw a.msg||I[a.err];return a.result}Jt.prototype.push=function(t,e){const a=this.strm,i=this.options.chunkSize;let n,s;if(this.ended)return!1;for(s=e===~~e?e:!0===e?Pt:Mt,\"string\"==typeof t?a.input=Nt(t):\"[object ArrayBuffer]\"===Ht.call(t)?a.input=new Uint8Array(t):a.input=t,a.next_in=0,a.avail_in=a.input.length;;)if(0===a.avail_out&&(a.output=new Uint8Array(i),a.next_out=0,a.avail_out=i),(s===jt||s===Kt)&&a.avail_out<=6)this.onData(a.output.subarray(0,a.next_out)),a.avail_out=0;else{if(n=St.deflate(a,s),n===Gt)return a.next_out>0&&this.onData(a.output.subarray(0,a.next_out)),n=St.deflateEnd(this.strm),this.onEnd(n),this.ended=!0,n===Yt;if(0!==a.avail_out){if(s>0&&a.next_out>0)this.onData(a.output.subarray(0,a.next_out)),a.avail_out=0;else if(0===a.avail_in)break}else this.onData(a.output)}return!0},Jt.prototype.onData=function(t){this.chunks.push(t)},Jt.prototype.onEnd=function(t){t===Yt&&(this.result=Ot(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg};var Vt={Deflate:Jt,deflate:Qt,deflateRaw:function(t,e){return(e=e||{}).raw=!0,Qt(t,e)},gzip:function(t,e){return(e=e||{}).gzip=!0,Qt(t,e)},constants:B};var $t=function(t,e){let a,i,n,s,r,o,l,h,d,_,f,c,u,w,m,b,g,p,k,v,y,x,z,A;const E=t.state;a=t.next_in,z=t.input,i=a+(t.avail_in-5),n=t.next_out,A=t.output,s=n-(e-t.avail_out),r=n+(t.avail_out-257),o=E.dmax,l=E.wsize,h=E.whave,d=E.wnext,_=E.window,f=E.hold,c=E.bits,u=E.lencode,w=E.distcode,m=(1<<E.lenbits)-1,b=(1<<E.distbits)-1;t:do{c<15&&(f+=z[a++]<<c,c+=8,f+=z[a++]<<c,c+=8),g=u[f&m];e:for(;;){if(p=g>>>24,f>>>=p,c-=p,p=g>>>16&255,0===p)A[n++]=65535&g;else{if(!(16&p)){if(0==(64&p)){g=u[(65535&g)+(f&(1<<p)-1)];continue e}if(32&p){E.mode=16191;break t}t.msg=\"invalid literal/length code\",E.mode=16209;break t}k=65535&g,p&=15,p&&(c<p&&(f+=z[a++]<<c,c+=8),k+=f&(1<<p)-1,f>>>=p,c-=p),c<15&&(f+=z[a++]<<c,c+=8,f+=z[a++]<<c,c+=8),g=w[f&b];a:for(;;){if(p=g>>>24,f>>>=p,c-=p,p=g>>>16&255,!(16&p)){if(0==(64&p)){g=w[(65535&g)+(f&(1<<p)-1)];continue a}t.msg=\"invalid distance code\",E.mode=16209;break t}if(v=65535&g,p&=15,c<p&&(f+=z[a++]<<c,c+=8,c<p&&(f+=z[a++]<<c,c+=8)),v+=f&(1<<p)-1,v>o){t.msg=\"invalid distance too far back\",E.mode=16209;break t}if(f>>>=p,c-=p,p=n-s,v>p){if(p=v-p,p>h&&E.sane){t.msg=\"invalid distance too far back\",E.mode=16209;break t}if(y=0,x=_,0===d){if(y+=l-p,p<k){k-=p;do{A[n++]=_[y++]}while(--p);y=n-v,x=A}}else if(d<p){if(y+=l+d-p,p-=d,p<k){k-=p;do{A[n++]=_[y++]}while(--p);if(y=0,d<k){p=d,k-=p;do{A[n++]=_[y++]}while(--p);y=n-v,x=A}}}else if(y+=d-p,p<k){k-=p;do{A[n++]=_[y++]}while(--p);y=n-v,x=A}for(;k>2;)A[n++]=x[y++],A[n++]=x[y++],A[n++]=x[y++],k-=3;k&&(A[n++]=x[y++],k>1&&(A[n++]=x[y++]))}else{y=n-v;do{A[n++]=A[y++],A[n++]=A[y++],A[n++]=A[y++],k-=3}while(k>2);k&&(A[n++]=A[y++],k>1&&(A[n++]=A[y++]))}break}}break}}while(a<i&&n<r);k=c>>3,a-=k,c-=k<<3,f&=(1<<c)-1,t.next_in=a,t.next_out=n,t.avail_in=a<i?i-a+5:5-(a-i),t.avail_out=n<r?r-n+257:257-(n-r),E.hold=f,E.bits=c};const te=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),ee=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),ae=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),ie=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var ne=(t,e,a,i,n,s,r,o)=>{const l=o.bits;let h,d,_,f,c,u,w=0,m=0,b=0,g=0,p=0,k=0,v=0,y=0,x=0,z=0,A=null;const E=new Uint16Array(16),R=new Uint16Array(16);let Z,U,S,D=null;for(w=0;w<=15;w++)E[w]=0;for(m=0;m<i;m++)E[e[a+m]]++;for(p=l,g=15;g>=1&&0===E[g];g--);if(p>g&&(p=g),0===g)return n[s++]=20971520,n[s++]=20971520,o.bits=1,0;for(b=1;b<g&&0===E[b];b++);for(p<b&&(p=b),y=1,w=1;w<=15;w++)if(y<<=1,y-=E[w],y<0)return-1;if(y>0&&(0===t||1!==g))return-1;for(R[1]=0,w=1;w<15;w++)R[w+1]=R[w]+E[w];for(m=0;m<i;m++)0!==e[a+m]&&(r[R[e[a+m]]++]=m);if(0===t?(A=D=r,u=20):1===t?(A=te,D=ee,u=257):(A=ae,D=ie,u=0),z=0,m=0,w=b,c=s,k=p,v=0,_=-1,x=1<<p,f=x-1,1===t&&x>852||2===t&&x>592)return 1;for(;;){Z=w-v,r[m]+1<u?(U=0,S=r[m]):r[m]>=u?(U=D[r[m]-u],S=A[r[m]-u]):(U=96,S=0),h=1<<w-v,d=1<<k,b=d;do{d-=h,n[c+(z>>v)+d]=Z<<24|U<<16|S|0}while(0!==d);for(h=1<<w-1;z&h;)h>>=1;if(0!==h?(z&=h-1,z+=h):z=0,m++,0==--E[w]){if(w===g)break;w=e[a+r[m]]}if(w>p&&(z&f)!==_){for(0===v&&(v=p),c+=b,k=w-v,y=1<<k;k+v<g&&(y-=E[k+v],!(y<=0));)k++,y<<=1;if(x+=1<<k,1===t&&x>852||2===t&&x>592)return 1;_=z&f,n[_]=p<<24|k<<16|c-s|0}}return 0!==z&&(n[c+z]=w-v<<24|64<<16|0),o.bits=p,0};const{Z_FINISH:se,Z_BLOCK:re,Z_TREES:oe,Z_OK:le,Z_STREAM_END:he,Z_NEED_DICT:de,Z_STREAM_ERROR:_e,Z_DATA_ERROR:fe,Z_MEM_ERROR:ce,Z_BUF_ERROR:ue,Z_DEFLATED:we}=B,me=16209,be=t=>(t>>>24&255)+(t>>>8&65280)+((65280&t)<<8)+((255&t)<<24);function ge(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const pe=t=>{if(!t)return 1;const e=t.state;return!e||e.strm!==t||e.mode<16180||e.mode>16211?1:0},ke=t=>{if(pe(t))return _e;const e=t.state;return t.total_in=t.total_out=e.total=0,t.msg=\"\",e.wrap&&(t.adler=1&e.wrap),e.mode=16180,e.last=0,e.havedict=0,e.flags=-1,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new Int32Array(852),e.distcode=e.distdyn=new Int32Array(592),e.sane=1,e.back=-1,le},ve=t=>{if(pe(t))return _e;const e=t.state;return e.wsize=0,e.whave=0,e.wnext=0,ke(t)},ye=(t,e)=>{let a;if(pe(t))return _e;const i=t.state;return e<0?(a=0,e=-e):(a=5+(e>>4),e<48&&(e&=15)),e&&(e<8||e>15)?_e:(null!==i.window&&i.wbits!==e&&(i.window=null),i.wrap=a,i.wbits=e,ve(t))},xe=(t,e)=>{if(!t)return _e;const a=new ge;t.state=a,a.strm=t,a.window=null,a.mode=16180;const i=ye(t,e);return i!==le&&(t.state=null),i};let ze,Ae,Ee=!0;const Re=t=>{if(Ee){ze=new Int32Array(512),Ae=new Int32Array(32);let e=0;for(;e<144;)t.lens[e++]=8;for(;e<256;)t.lens[e++]=9;for(;e<280;)t.lens[e++]=7;for(;e<288;)t.lens[e++]=8;for(ne(1,t.lens,0,288,ze,0,t.work,{bits:9}),e=0;e<32;)t.lens[e++]=5;ne(2,t.lens,0,32,Ae,0,t.work,{bits:5}),Ee=!1}t.lencode=ze,t.lenbits=9,t.distcode=Ae,t.distbits=5},Ze=(t,e,a,i)=>{let n;const s=t.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new Uint8Array(s.wsize)),i>=s.wsize?(s.window.set(e.subarray(a-s.wsize,a),0),s.wnext=0,s.whave=s.wsize):(n=s.wsize-s.wnext,n>i&&(n=i),s.window.set(e.subarray(a-i,a-i+n),s.wnext),(i-=n)?(s.window.set(e.subarray(a-i,a),0),s.wnext=i,s.whave=s.wsize):(s.wnext+=n,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=n))),0};var Ue={inflateReset:ve,inflateReset2:ye,inflateResetKeep:ke,inflateInit:t=>xe(t,15),inflateInit2:xe,inflate:(t,e)=>{let a,i,n,s,r,o,l,h,d,_,f,c,u,w,m,b,g,p,k,v,y,x,z=0;const A=new Uint8Array(4);let E,R;const Z=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(pe(t)||!t.output||!t.input&&0!==t.avail_in)return _e;a=t.state,16191===a.mode&&(a.mode=16192),r=t.next_out,n=t.output,l=t.avail_out,s=t.next_in,i=t.input,o=t.avail_in,h=a.hold,d=a.bits,_=o,f=l,x=le;t:for(;;)switch(a.mode){case 16180:if(0===a.wrap){a.mode=16192;break}for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(2&a.wrap&&35615===h){0===a.wbits&&(a.wbits=15),a.check=0,A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0),h=0,d=0,a.mode=16181;break}if(a.head&&(a.head.done=!1),!(1&a.wrap)||(((255&h)<<8)+(h>>8))%31){t.msg=\"incorrect header check\",a.mode=me;break}if((15&h)!==we){t.msg=\"unknown compression method\",a.mode=me;break}if(h>>>=4,d-=4,y=8+(15&h),0===a.wbits&&(a.wbits=y),y>15||y>a.wbits){t.msg=\"invalid window size\",a.mode=me;break}a.dmax=1<<a.wbits,a.flags=0,t.adler=a.check=1,a.mode=512&h?16189:16191,h=0,d=0;break;case 16181:for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(a.flags=h,(255&a.flags)!==we){t.msg=\"unknown compression method\",a.mode=me;break}if(57344&a.flags){t.msg=\"unknown header flags set\",a.mode=me;break}a.head&&(a.head.text=h>>8&1),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0)),h=0,d=0,a.mode=16182;case 16182:for(;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.head&&(a.head.time=h),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,A[2]=h>>>16&255,A[3]=h>>>24&255,a.check=N(a.check,A,4,0)),h=0,d=0,a.mode=16183;case 16183:for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.head&&(a.head.xflags=255&h,a.head.os=h>>8),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0)),h=0,d=0,a.mode=16184;case 16184:if(1024&a.flags){for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.length=h,a.head&&(a.head.extra_len=h),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0)),h=0,d=0}else a.head&&(a.head.extra=null);a.mode=16185;case 16185:if(1024&a.flags&&(c=a.length,c>o&&(c=o),c&&(a.head&&(y=a.head.extra_len-a.length,a.head.extra||(a.head.extra=new Uint8Array(a.head.extra_len)),a.head.extra.set(i.subarray(s,s+c),y)),512&a.flags&&4&a.wrap&&(a.check=N(a.check,i,c,s)),o-=c,s+=c,a.length-=c),a.length))break t;a.length=0,a.mode=16186;case 16186:if(2048&a.flags){if(0===o)break t;c=0;do{y=i[s+c++],a.head&&y&&a.length<65536&&(a.head.name+=String.fromCharCode(y))}while(y&&c<o);if(512&a.flags&&4&a.wrap&&(a.check=N(a.check,i,c,s)),o-=c,s+=c,y)break t}else a.head&&(a.head.name=null);a.length=0,a.mode=16187;case 16187:if(4096&a.flags){if(0===o)break t;c=0;do{y=i[s+c++],a.head&&y&&a.length<65536&&(a.head.comment+=String.fromCharCode(y))}while(y&&c<o);if(512&a.flags&&4&a.wrap&&(a.check=N(a.check,i,c,s)),o-=c,s+=c,y)break t}else a.head&&(a.head.comment=null);a.mode=16188;case 16188:if(512&a.flags){for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(4&a.wrap&&h!==(65535&a.check)){t.msg=\"header crc mismatch\",a.mode=me;break}h=0,d=0}a.head&&(a.head.hcrc=a.flags>>9&1,a.head.done=!0),t.adler=a.check=0,a.mode=16191;break;case 16189:for(;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}t.adler=a.check=be(h),h=0,d=0,a.mode=16190;case 16190:if(0===a.havedict)return t.next_out=r,t.avail_out=l,t.next_in=s,t.avail_in=o,a.hold=h,a.bits=d,de;t.adler=a.check=1,a.mode=16191;case 16191:if(e===re||e===oe)break t;case 16192:if(a.last){h>>>=7&d,d-=7&d,a.mode=16206;break}for(;d<3;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}switch(a.last=1&h,h>>>=1,d-=1,3&h){case 0:a.mode=16193;break;case 1:if(Re(a),a.mode=16199,e===oe){h>>>=2,d-=2;break t}break;case 2:a.mode=16196;break;case 3:t.msg=\"invalid block type\",a.mode=me}h>>>=2,d-=2;break;case 16193:for(h>>>=7&d,d-=7&d;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if((65535&h)!=(h>>>16^65535)){t.msg=\"invalid stored block lengths\",a.mode=me;break}if(a.length=65535&h,h=0,d=0,a.mode=16194,e===oe)break t;case 16194:a.mode=16195;case 16195:if(c=a.length,c){if(c>o&&(c=o),c>l&&(c=l),0===c)break t;n.set(i.subarray(s,s+c),r),o-=c,s+=c,l-=c,r+=c,a.length-=c;break}a.mode=16191;break;case 16196:for(;d<14;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(a.nlen=257+(31&h),h>>>=5,d-=5,a.ndist=1+(31&h),h>>>=5,d-=5,a.ncode=4+(15&h),h>>>=4,d-=4,a.nlen>286||a.ndist>30){t.msg=\"too many length or distance symbols\",a.mode=me;break}a.have=0,a.mode=16197;case 16197:for(;a.have<a.ncode;){for(;d<3;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.lens[Z[a.have++]]=7&h,h>>>=3,d-=3}for(;a.have<19;)a.lens[Z[a.have++]]=0;if(a.lencode=a.lendyn,a.lenbits=7,E={bits:a.lenbits},x=ne(0,a.lens,0,19,a.lencode,0,a.work,E),a.lenbits=E.bits,x){t.msg=\"invalid code lengths set\",a.mode=me;break}a.have=0,a.mode=16198;case 16198:for(;a.have<a.nlen+a.ndist;){for(;z=a.lencode[h&(1<<a.lenbits)-1],m=z>>>24,b=z>>>16&255,g=65535&z,!(m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(g<16)h>>>=m,d-=m,a.lens[a.have++]=g;else{if(16===g){for(R=m+2;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(h>>>=m,d-=m,0===a.have){t.msg=\"invalid bit length repeat\",a.mode=me;break}y=a.lens[a.have-1],c=3+(3&h),h>>>=2,d-=2}else if(17===g){for(R=m+3;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=m,d-=m,y=0,c=3+(7&h),h>>>=3,d-=3}else{for(R=m+7;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=m,d-=m,y=0,c=11+(127&h),h>>>=7,d-=7}if(a.have+c>a.nlen+a.ndist){t.msg=\"invalid bit length repeat\",a.mode=me;break}for(;c--;)a.lens[a.have++]=y}}if(a.mode===me)break;if(0===a.lens[256]){t.msg=\"invalid code -- missing end-of-block\",a.mode=me;break}if(a.lenbits=9,E={bits:a.lenbits},x=ne(1,a.lens,0,a.nlen,a.lencode,0,a.work,E),a.lenbits=E.bits,x){t.msg=\"invalid literal/lengths set\",a.mode=me;break}if(a.distbits=6,a.distcode=a.distdyn,E={bits:a.distbits},x=ne(2,a.lens,a.nlen,a.ndist,a.distcode,0,a.work,E),a.distbits=E.bits,x){t.msg=\"invalid distances set\",a.mode=me;break}if(a.mode=16199,e===oe)break t;case 16199:a.mode=16200;case 16200:if(o>=6&&l>=258){t.next_out=r,t.avail_out=l,t.next_in=s,t.avail_in=o,a.hold=h,a.bits=d,$t(t,f),r=t.next_out,n=t.output,l=t.avail_out,s=t.next_in,i=t.input,o=t.avail_in,h=a.hold,d=a.bits,16191===a.mode&&(a.back=-1);break}for(a.back=0;z=a.lencode[h&(1<<a.lenbits)-1],m=z>>>24,b=z>>>16&255,g=65535&z,!(m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(b&&0==(240&b)){for(p=m,k=b,v=g;z=a.lencode[v+((h&(1<<p+k)-1)>>p)],m=z>>>24,b=z>>>16&255,g=65535&z,!(p+m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=p,d-=p,a.back+=p}if(h>>>=m,d-=m,a.back+=m,a.length=g,0===b){a.mode=16205;break}if(32&b){a.back=-1,a.mode=16191;break}if(64&b){t.msg=\"invalid literal/length code\",a.mode=me;break}a.extra=15&b,a.mode=16201;case 16201:if(a.extra){for(R=a.extra;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.length+=h&(1<<a.extra)-1,h>>>=a.extra,d-=a.extra,a.back+=a.extra}a.was=a.length,a.mode=16202;case 16202:for(;z=a.distcode[h&(1<<a.distbits)-1],m=z>>>24,b=z>>>16&255,g=65535&z,!(m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(0==(240&b)){for(p=m,k=b,v=g;z=a.distcode[v+((h&(1<<p+k)-1)>>p)],m=z>>>24,b=z>>>16&255,g=65535&z,!(p+m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=p,d-=p,a.back+=p}if(h>>>=m,d-=m,a.back+=m,64&b){t.msg=\"invalid distance code\",a.mode=me;break}a.offset=g,a.extra=15&b,a.mode=16203;case 16203:if(a.extra){for(R=a.extra;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.offset+=h&(1<<a.extra)-1,h>>>=a.extra,d-=a.extra,a.back+=a.extra}if(a.offset>a.dmax){t.msg=\"invalid distance too far back\",a.mode=me;break}a.mode=16204;case 16204:if(0===l)break t;if(c=f-l,a.offset>c){if(c=a.offset-c,c>a.whave&&a.sane){t.msg=\"invalid distance too far back\",a.mode=me;break}c>a.wnext?(c-=a.wnext,u=a.wsize-c):u=a.wnext-c,c>a.length&&(c=a.length),w=a.window}else w=n,u=r-a.offset,c=a.length;c>l&&(c=l),l-=c,a.length-=c;do{n[r++]=w[u++]}while(--c);0===a.length&&(a.mode=16200);break;case 16205:if(0===l)break t;n[r++]=a.length,l--,a.mode=16200;break;case 16206:if(a.wrap){for(;d<32;){if(0===o)break t;o--,h|=i[s++]<<d,d+=8}if(f-=l,t.total_out+=f,a.total+=f,4&a.wrap&&f&&(t.adler=a.check=a.flags?N(a.check,n,f,r-f):F(a.check,n,f,r-f)),f=l,4&a.wrap&&(a.flags?h:be(h))!==a.check){t.msg=\"incorrect data check\",a.mode=me;break}h=0,d=0}a.mode=16207;case 16207:if(a.wrap&&a.flags){for(;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(4&a.wrap&&h!==(4294967295&a.total)){t.msg=\"incorrect length check\",a.mode=me;break}h=0,d=0}a.mode=16208;case 16208:x=he;break t;case me:x=fe;break t;case 16210:return ce;default:return _e}return t.next_out=r,t.avail_out=l,t.next_in=s,t.avail_in=o,a.hold=h,a.bits=d,(a.wsize||f!==t.avail_out&&a.mode<me&&(a.mode<16206||e!==se))&&Ze(t,t.output,t.next_out,f-t.avail_out),_-=t.avail_in,f-=t.avail_out,t.total_in+=_,t.total_out+=f,a.total+=f,4&a.wrap&&f&&(t.adler=a.check=a.flags?N(a.check,n,f,t.next_out-f):F(a.check,n,f,t.next_out-f)),t.data_type=a.bits+(a.last?64:0)+(16191===a.mode?128:0)+(16199===a.mode||16194===a.mode?256:0),(0===_&&0===f||e===se)&&x===le&&(x=ue),x},inflateEnd:t=>{if(pe(t))return _e;let e=t.state;return e.window&&(e.window=null),t.state=null,le},inflateGetHeader:(t,e)=>{if(pe(t))return _e;const a=t.state;return 0==(2&a.wrap)?_e:(a.head=e,e.done=!1,le)},inflateSetDictionary:(t,e)=>{const a=e.length;let i,n,s;return pe(t)?_e:(i=t.state,0!==i.wrap&&16190!==i.mode?_e:16190===i.mode&&(n=1,n=F(n,e,a,0),n!==i.check)?fe:(s=Ze(t,e,a,a),s?(i.mode=16210,ce):(i.havedict=1,le)))},inflateInfo:\"pako inflate (from Nodeca project)\"};var Se=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1};const De=Object.prototype.toString,{Z_NO_FLUSH:Te,Z_FINISH:Oe,Z_OK:Fe,Z_STREAM_END:Le,Z_NEED_DICT:Ne,Z_STREAM_ERROR:Ie,Z_DATA_ERROR:Be,Z_MEM_ERROR:Ce}=B;function He(t){this.options=Tt({chunkSize:65536,windowBits:15,to:\"\"},t||{});const e=this.options;e.raw&&e.windowBits>=0&&e.windowBits<16&&(e.windowBits=-e.windowBits,0===e.windowBits&&(e.windowBits=-15)),!(e.windowBits>=0&&e.windowBits<16)||t&&t.windowBits||(e.windowBits+=32),e.windowBits>15&&e.windowBits<48&&0==(15&e.windowBits)&&(e.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new Ct,this.strm.avail_out=0;let a=Ue.inflateInit2(this.strm,e.windowBits);if(a!==Fe)throw new Error(I[a]);if(this.header=new Se,Ue.inflateGetHeader(this.strm,this.header),e.dictionary&&(\"string\"==typeof e.dictionary?e.dictionary=Nt(e.dictionary):\"[object ArrayBuffer]\"===De.call(e.dictionary)&&(e.dictionary=new Uint8Array(e.dictionary)),e.raw&&(a=Ue.inflateSetDictionary(this.strm,e.dictionary),a!==Fe)))throw new Error(I[a])}He.prototype.push=function(t,e){const a=this.strm,i=this.options.chunkSize,n=this.options.dictionary;let s,r,o;if(this.ended)return!1;for(r=e===~~e?e:!0===e?Oe:Te,\"[object ArrayBuffer]\"===De.call(t)?a.input=new Uint8Array(t):a.input=t,a.next_in=0,a.avail_in=a.input.length;;){for(0===a.avail_out&&(a.output=new Uint8Array(i),a.next_out=0,a.avail_out=i),s=Ue.inflate(a,r),s===Ne&&n&&(s=Ue.inflateSetDictionary(a,n),s===Fe?s=Ue.inflate(a,r):s===Be&&(s=Ne));a.avail_in>0&&s===Le&&a.state.wrap>0&&0!==t[a.next_in];)Ue.inflateReset(a),s=Ue.inflate(a,r);switch(s){case Ie:case Be:case Ne:case Ce:return this.onEnd(s),this.ended=!0,!1}if(o=a.avail_out,a.next_out&&(0===a.avail_out||s===Le))if(\"string\"===this.options.to){let t=Bt(a.output,a.next_out),e=a.next_out-t,n=It(a.output,t);a.next_out=e,a.avail_out=i-e,e&&a.output.set(a.output.subarray(t,t+e),0),this.onData(n)}else this.onData(a.output.length===a.next_out?a.output:a.output.subarray(0,a.next_out));if(s!==Fe||0!==o){if(s===Le)return s=Ue.inflateEnd(this.strm),this.onEnd(s),this.ended=!0,!0;if(0===a.avail_in)break}}return!0},He.prototype.onData=function(t){this.chunks.push(t)},He.prototype.onEnd=function(t){t===Fe&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=Ot(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg};const{Deflate:Me,deflate:je,deflateRaw:Ke,gzip:Pe}=Vt;var Ye=Me,Ge=B;const Xe=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error(\"Adding invalid event\");const e=this._hasEvents?\",\":\"\";this.deflate.push(e+t,Ge.Z_SYNC_FLUSH),this._hasEvents=!0}finish(){if(this.deflate.push(\"]\",Ge.Z_FINISH),this.deflate.err)throw this.deflate.err;const t=this.deflate.result;return this._init(),t}_init(){this._hasEvents=!1,this.deflate=new Ye,this.deflate.push(\"[\",Ge.Z_NO_FLUSH)}},We={clear:()=>(Xe.clear(),\"\"),addEvent:t=>Xe.addEvent(t),finish:()=>Xe.finish()};addEventListener(\"message\",(function(t){const e=t.data.method,a=t.data.id,i=t.data.arg;if(e in We&&\"function\"==typeof We[e])try{const t=We[e](i);postMessage({id:a,method:e,success:!0,response:t})}catch(t){postMessage({id:a,method:e,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:\"init\",success:!0,response:void 0});`;\n\n/**\n * A basic event buffer that does not do any compression.\n * Used as fallback if the compression worker cannot be loaded or is disabled.\n */\nclass EventBufferArray {\n  /** All the events that are buffered to be sent. */\n\n  constructor() {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n  get hasEvents() {\n    return this.events.length > 0;\n  }\n\n  /** @inheritdoc */\n  destroy() {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n  async addEvent(event, isCheckout) {\n    if (isCheckout) {\n      this.events = [event];\n      return;\n    }\n    this.events.push(event);\n    return;\n  }\n\n  /** @inheritdoc */\n  finish() {\n    return new Promise(resolve => {\n      // Make a copy of the events array reference and immediately clear the\n      // events member so that we do not lose new events while uploading\n      // attachment.\n      const eventsRet = this.events;\n      this.events = [];\n      resolve(JSON.stringify(eventsRet));\n    });\n  }\n}\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nclass WorkerHandler {\n  constructor(worker) {\n    this._worker = worker;\n    this._id = 0;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n  ensureReady() {\n    // Ensure we only check once\n    if (this._ensureReadyPromise) {\n      return this._ensureReadyPromise;\n    }\n    this._ensureReadyPromise = new Promise((resolve, reject) => {\n      this._worker.addEventListener('message', _ref => {\n        let {\n          data\n        } = _ref;\n        if (data.success) {\n          resolve();\n        } else {\n          reject();\n        }\n      }, {\n        once: true\n      });\n      this._worker.addEventListener('error', error => {\n        reject(error);\n      }, {\n        once: true\n      });\n    });\n    return this._ensureReadyPromise;\n  }\n\n  /**\n   * Destroy the worker.\n   */\n  destroy() {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Replay] Destroying compression worker');\n    this._worker.terminate();\n  }\n\n  /**\n   * Post message to worker and wait for response before resolving promise.\n   */\n  postMessage(method, arg) {\n    const id = this._getAndIncrementId();\n    return new Promise((resolve, reject) => {\n      const listener = _ref2 => {\n        let {\n          data\n        } = _ref2;\n        const response = data;\n        if (response.method !== method) {\n          return;\n        }\n\n        // There can be multiple listeners for a single method, the id ensures\n        // that the response matches the caller.\n        if (response.id !== id) {\n          return;\n        }\n\n        // At this point, we'll always want to remove listener regardless of result status\n        this._worker.removeEventListener('message', listener);\n        if (!response.success) {\n          // TODO: Do some error handling, not sure what\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('[Replay]', response.response);\n          reject(new Error('Error in compression worker'));\n          return;\n        }\n        resolve(response.response);\n      };\n\n      // Note: we can't use `once` option because it's possible it needs to\n      // listen to multiple messages\n      this._worker.addEventListener('message', listener);\n      this._worker.postMessage({\n        id,\n        method,\n        arg\n      });\n    });\n  }\n\n  /** Get the current ID and increment it for the next call. */\n  _getAndIncrementId() {\n    return this._id++;\n  }\n}\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nclass EventBufferCompressionWorker {\n  /** @inheritdoc */\n\n  constructor(worker) {\n    this._worker = new WorkerHandler(worker);\n    this.hasEvents = false;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n  ensureReady() {\n    return this._worker.ensureReady();\n  }\n\n  /**\n   * Destroy the event buffer.\n   */\n  destroy() {\n    this._worker.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfuly received and processed by worker.\n   */\n  async addEvent(event, isCheckout) {\n    this.hasEvents = true;\n    if (isCheckout) {\n      // This event is a checkout, make sure worker buffer is cleared before\n      // proceeding.\n      await this._clear();\n    }\n    return this._sendEventToWorker(event);\n  }\n\n  /**\n   * Finish the event buffer and return the compressed data.\n   */\n  finish() {\n    return this._finishRequest();\n  }\n\n  /**\n   * Send the event to the worker.\n   */\n  _sendEventToWorker(event) {\n    return this._worker.postMessage('addEvent', JSON.stringify(event));\n  }\n\n  /**\n   * Finish the request and return the compressed data from the worker.\n   */\n  async _finishRequest() {\n    const response = await this._worker.postMessage('finish');\n    this.hasEvents = false;\n    return response;\n  }\n\n  /** Clear any pending events from the worker. */\n  _clear() {\n    return this._worker.postMessage('clear');\n  }\n}\n\n/**\n * This proxy will try to use the compression worker, and fall back to use the simple buffer if an error occurs there.\n * This can happen e.g. if the worker cannot be loaded.\n * Exported only for testing.\n */\nclass EventBufferProxy {\n  constructor(worker) {\n    this._fallback = new EventBufferArray();\n    this._compression = new EventBufferCompressionWorker(worker);\n    this._used = this._fallback;\n    this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded();\n  }\n\n  /** @inheritDoc */\n  get hasEvents() {\n    return this._used.hasEvents;\n  }\n\n  /** @inheritDoc */\n  destroy() {\n    this._fallback.destroy();\n    this._compression.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfully added.\n   */\n  addEvent(event, isCheckout) {\n    return this._used.addEvent(event, isCheckout);\n  }\n\n  /** @inheritDoc */\n  async finish() {\n    // Ensure the worker is loaded, so the sent event is compressed\n    await this.ensureWorkerIsLoaded();\n    return this._used.finish();\n  }\n\n  /** Ensure the worker has loaded. */\n  ensureWorkerIsLoaded() {\n    return this._ensureWorkerIsLoadedPromise;\n  }\n\n  /** Actually check if the worker has been loaded. */\n  async _ensureWorkerIsLoaded() {\n    try {\n      await this._compression.ensureReady();\n    } catch (error) {\n      // If the worker fails to load, we fall back to the simple buffer.\n      // Nothing more to do from our side here\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Replay] Failed to load the compression worker, falling back to simple buffer');\n      return;\n    }\n\n    // Now we need to switch over the array buffer to the compression worker\n    await this._switchToCompressionWorker();\n  }\n\n  /** Switch the used buffer to the compression worker. */\n  async _switchToCompressionWorker() {\n    const {\n      events\n    } = this._fallback;\n    const addEventPromises = [];\n    for (const event of events) {\n      addEventPromises.push(this._compression.addEvent(event));\n    }\n\n    // We switch over to the new buffer immediately - any further events will be added\n    // after the previously buffered ones\n    this._used = this._compression;\n\n    // Wait for original events to be re-added before resolving\n    try {\n      await Promise.all(addEventPromises);\n    } catch (error) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('[Replay] Failed to add events when switching buffers.', error);\n    }\n  }\n}\n\n/**\n * Create an event buffer for replays.\n */\nfunction createEventBuffer(_ref3) {\n  let {\n    useCompression\n  } = _ref3;\n  // eslint-disable-next-line no-restricted-globals\n  if (useCompression && window.Worker) {\n    try {\n      const workerBlob = new Blob([workerString]);\n      const workerUrl = URL.createObjectURL(workerBlob);\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Replay] Using compression worker');\n      const worker = new Worker(workerUrl);\n      return new EventBufferProxy(worker);\n    } catch (error) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Replay] Failed to create compression worker');\n      // Fall back to use simple event buffer array\n    }\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Replay] Using simple buffer');\n  return new EventBufferArray();\n}\n\n/**\n * Given an initial timestamp and an expiry duration, checks to see if current\n * time should be considered as expired.\n */\nfunction isExpired(initialTime, expiry) {\n  let targetTime = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : +new Date();\n  // Always expired if < 0\n  if (initialTime === null || expiry === undefined || expiry < 0) {\n    return true;\n  }\n\n  // Never expires if == 0\n  if (expiry === 0) {\n    return false;\n  }\n  return initialTime + expiry <= targetTime;\n}\n\n/**\n * Checks to see if session is expired\n */\nfunction isSessionExpired(session, idleTimeout) {\n  let targetTime = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : +new Date();\n  return (\n    // First, check that maximum session length has not been exceeded\n    isExpired(session.started, MAX_SESSION_LIFE, targetTime) ||\n    // check that the idle timeout has not been exceeded (i.e. user has\n    // performed an action within the last `idleTimeout` ms)\n    isExpired(session.lastActivity, idleTimeout, targetTime)\n  );\n}\n\n/**\n * Save a session to session storage.\n */\nfunction saveSession(session) {\n  const hasSessionStorage = ('sessionStorage' in WINDOW);\n  if (!hasSessionStorage) {\n    return;\n  }\n  try {\n    WINDOW.sessionStorage.setItem(REPLAY_SESSION_KEY, JSON.stringify(session));\n  } catch (e) {\n    // Ignore potential SecurityError exceptions\n  }\n}\n\n/**\n * Given a sample rate, returns true if replay should be sampled.\n *\n * 1.0 = 100% sampling\n * 0.0 = 0% sampling\n */\nfunction isSampled(sampleRate) {\n  if (sampleRate === undefined) {\n    return false;\n  }\n\n  // Math.random() returns a number in range of 0 to 1 (inclusive of 0, but not 1)\n  return Math.random() < sampleRate;\n}\n\n/**\n * Get a session with defaults & applied sampling.\n */\nfunction makeSession(session) {\n  const now = new Date().getTime();\n  const id = session.id || uuid4();\n  // Note that this means we cannot set a started/lastActivity of `0`, but this should not be relevant outside of tests.\n  const started = session.started || now;\n  const lastActivity = session.lastActivity || now;\n  const segmentId = session.segmentId || 0;\n  const sampled = session.sampled;\n  return {\n    id,\n    started,\n    lastActivity,\n    segmentId,\n    sampled\n  };\n}\n\n/**\n * Get the sampled status for a session based on sample rates & current sampled status.\n */\nfunction getSessionSampleType(sessionSampleRate, errorSampleRate) {\n  return isSampled(sessionSampleRate) ? 'session' : isSampled(errorSampleRate) ? 'error' : false;\n}\n\n/**\n * Create a new session, which in its current implementation is a Sentry event\n * that all replays will be saved to as attachments. Currently, we only expect\n * one of these Sentry events per \"replay session\".\n */\nfunction createSession(_ref4) {\n  let {\n    sessionSampleRate,\n    errorSampleRate,\n    stickySession = false\n  } = _ref4;\n  const sampled = getSessionSampleType(sessionSampleRate, errorSampleRate);\n  const session = makeSession({\n    sampled\n  });\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Replay] Creating new session: ${session.id}`);\n  if (stickySession) {\n    saveSession(session);\n  }\n  return session;\n}\n\n/**\n * Fetches a session from storage\n */\nfunction fetchSession() {\n  const hasSessionStorage = ('sessionStorage' in WINDOW);\n  if (!hasSessionStorage) {\n    return null;\n  }\n  try {\n    // This can throw if cookies are disabled\n    const sessionStringFromStorage = WINDOW.sessionStorage.getItem(REPLAY_SESSION_KEY);\n    if (!sessionStringFromStorage) {\n      return null;\n    }\n    const sessionObj = JSON.parse(sessionStringFromStorage);\n    return makeSession(sessionObj);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Get or create a session\n */\nfunction getSession(_ref5) {\n  let {\n    expiry,\n    currentSession,\n    stickySession,\n    sessionSampleRate,\n    errorSampleRate\n  } = _ref5;\n  // If session exists and is passed, use it instead of always hitting session storage\n  const session = currentSession || stickySession && fetchSession();\n  if (session) {\n    // If there is a session, check if it is valid (e.g. \"last activity\" time\n    // should be within the \"session idle time\", and \"session started\" time is\n    // within \"max session time\").\n    const isExpired = isSessionExpired(session, expiry);\n    if (!isExpired) {\n      return {\n        type: 'saved',\n        session\n      };\n    } else if (session.sampled === 'error') {\n      // Error samples should not be re-created when expired, but instead we stop when the replay is done\n      const discardedSession = makeSession({\n        sampled: false\n      });\n      return {\n        type: 'new',\n        session: discardedSession\n      };\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Replay] Session has expired');\n    }\n    // Otherwise continue to create a new session\n  }\n\n  const newSession = createSession({\n    stickySession,\n    sessionSampleRate,\n    errorSampleRate\n  });\n  return {\n    type: 'new',\n    session: newSession\n  };\n}\n\n/**\n * Add an event to the event buffer\n */\nasync function addEvent(replay, event, isCheckout) {\n  if (!replay.eventBuffer) {\n    // This implies that `_isEnabled` is false\n    return null;\n  }\n  if (replay.isPaused()) {\n    // Do not add to event buffer when recording is paused\n    return null;\n  }\n\n  // TODO: sadness -- we will want to normalize timestamps to be in ms -\n  // requires coordination with frontend\n  const isMs = event.timestamp > 9999999999;\n  const timestampInMs = isMs ? event.timestamp : event.timestamp * 1000;\n\n  // Throw out events that happen more than 5 minutes ago. This can happen if\n  // page has been left open and idle for a long period of time and user\n  // comes back to trigger a new session. The performance entries rely on\n  // `performance.timeOrigin`, which is when the page first opened.\n  if (timestampInMs + SESSION_IDLE_DURATION < new Date().getTime()) {\n    return null;\n  }\n\n  // Only record earliest event if a new session was created, otherwise it\n  // shouldn't be relevant\n  const earliestEvent = replay.getContext().earliestEvent;\n  if (replay.session && replay.session.segmentId === 0 && (!earliestEvent || timestampInMs < earliestEvent)) {\n    replay.getContext().earliestEvent = timestampInMs;\n  }\n  try {\n    return await replay.eventBuffer.addEvent(event, isCheckout);\n  } catch (error) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(error);\n    replay.stop();\n  }\n}\n\n/**\n * Create a breadcrumb for a replay.\n */\nfunction createBreadcrumb(breadcrumb) {\n  return {\n    timestamp: new Date().getTime() / 1000,\n    type: 'default',\n    ...breadcrumb\n  };\n}\n\n/**\n * Add a breadcrumb event to replay.\n */\nfunction addBreadcrumbEvent(replay, breadcrumb) {\n  if (breadcrumb.category === 'sentry.transaction') {\n    return;\n  }\n  if (breadcrumb.category === 'ui.click') {\n    replay.triggerUserActivity();\n  } else {\n    replay.checkAndHandleExpiredSession();\n  }\n  replay.addUpdate(() => {\n    void addEvent(replay, {\n      type: EventType.Custom,\n      // TODO: We were converting from ms to seconds for breadcrumbs, spans,\n      // but maybe we should just keep them as milliseconds\n      timestamp: (breadcrumb.timestamp || 0) * 1000,\n      data: {\n        tag: 'breadcrumb',\n        payload: breadcrumb\n      }\n    });\n\n    // Do not flush after console log messages\n    return breadcrumb.category === 'console';\n  });\n}\nconst handleDomListener = replay => handlerData => {\n  if (!replay.isEnabled()) {\n    return;\n  }\n  const result = handleDom(handlerData);\n  if (!result) {\n    return;\n  }\n  addBreadcrumbEvent(replay, result);\n};\n\n/**\n * An event handler to react to DOM events.\n */\nfunction handleDom(handlerData) {\n  // Taken from https://github.com/getsentry/sentry-javascript/blob/master/packages/browser/src/integrations/breadcrumbs.ts#L112\n  let target;\n  let targetNode;\n\n  // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n  try {\n    targetNode = getTargetNode(handlerData);\n    target = htmlTreeAsString(targetNode);\n  } catch (e) {\n    target = '<unknown>';\n  }\n  if (target.length === 0) {\n    return null;\n  }\n  return createBreadcrumb({\n    category: `ui.${handlerData.name}`,\n    message: target,\n    data: {\n      // Not sure why this errors, Node should be correct (Argument of type 'Node' is not assignable to parameter of type 'INode')\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ...(targetNode ? {\n        nodeId: record.mirror.getId(targetNode)\n      } : {})\n    }\n  });\n}\nfunction getTargetNode(handlerData) {\n  if (isEventWithTarget(handlerData.event)) {\n    return handlerData.event.target;\n  }\n  return handlerData.event;\n}\nfunction isEventWithTarget(event) {\n  return !!event.target;\n}\n\n/**\n * Create a \"span\" for each performance entry. The parent transaction is `this.replayEvent`.\n */\nfunction createPerformanceSpans(replay, entries) {\n  return entries.map(_ref6 => {\n    let {\n      type,\n      start,\n      end,\n      name,\n      data\n    } = _ref6;\n    return addEvent(replay, {\n      type: EventType.Custom,\n      timestamp: start,\n      data: {\n        tag: 'performanceSpan',\n        payload: {\n          op: type,\n          description: name,\n          startTimestamp: start,\n          endTimestamp: end,\n          data\n        }\n      }\n    });\n  });\n}\n\n/**\n * Check whether a given request URL should be filtered out.\n */\nfunction shouldFilterRequest(replay, url) {\n  // If we enabled the `traceInternals` experiment, we want to trace everything\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && replay.getOptions()._experiments.traceInternals) {\n    return false;\n  }\n  return !_isSentryRequest(url);\n}\n\n/**\n * Checks wether a given URL belongs to the configured Sentry DSN.\n */\nfunction _isSentryRequest(url) {\n  const client = getCurrentHub().getClient();\n  const dsn = client && client.getDsn();\n  return dsn ? url.includes(dsn.host) : false;\n}\n\n/** only exported for tests */\nfunction handleFetch(handlerData) {\n  if (!handlerData.endTimestamp) {\n    return null;\n  }\n  const {\n    startTimestamp,\n    endTimestamp,\n    fetchData,\n    response\n  } = handlerData;\n  return {\n    type: 'resource.fetch',\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: fetchData.url,\n    data: {\n      method: fetchData.method,\n      statusCode: response.status\n    }\n  };\n}\n\n/**\n * Returns a listener to be added to `addInstrumentationHandler('fetch', listener)`.\n */\nfunction handleFetchSpanListener(replay) {\n  return handlerData => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n    const result = handleFetch(handlerData);\n    if (result === null) {\n      return;\n    }\n    if (shouldFilterRequest(replay, result.name)) {\n      return;\n    }\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning true will cause `addUpdate` to not flush\n      // We do not want network requests to cause a flush. This will prevent\n      // recurring/polling requests from keeping the replay session alive.\n      return true;\n    });\n  };\n}\n\n/**\n * Returns true if we think the given event is an error originating inside of rrweb.\n */\nfunction isRrwebError(event) {\n  if (event.type || !event.exception || !event.exception.values || !event.exception.values.length) {\n    return false;\n  }\n\n  // Check if any exception originates from rrweb\n  return event.exception.values.some(exception => {\n    if (!exception.stacktrace || !exception.stacktrace.frames || !exception.stacktrace.frames.length) {\n      return false;\n    }\n    return exception.stacktrace.frames.some(frame => frame.filename && frame.filename.includes('/rrweb/src/'));\n  });\n}\n\n/**\n * Returns a listener to be added to `addGlobalEventProcessor(listener)`.\n */\nfunction handleGlobalEventListener(replay) {\n  return event => {\n    // Do not apply replayId to the root event\n    if (event.type === REPLAY_EVENT_NAME) {\n      // Replays have separate set of breadcrumbs, do not include breadcrumbs\n      // from core SDK\n      delete event.breadcrumbs;\n      return event;\n    }\n\n    // Unless `captureExceptions` is enabled, we want to ignore errors coming from rrweb\n    // As there can be a bunch of stuff going wrong in internals there, that we don't want to bubble up to users\n    if (isRrwebError(event) && !replay.getOptions()._experiments.captureExceptions) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Replay] Ignoring error from rrweb internals', event);\n      return null;\n    }\n\n    // Only tag transactions with replayId if not waiting for an error\n    // @ts-ignore private\n    if (!event.type || replay.recordingMode === 'session') {\n      event.tags = {\n        ...event.tags,\n        replayId: replay.getSessionId()\n      };\n    }\n\n    // Collect traceIds in _context regardless of `recordingMode` - if it's true,\n    // _context gets cleared on every checkout\n    if (event.type === 'transaction' && event.contexts && event.contexts.trace && event.contexts.trace.trace_id) {\n      replay.getContext().traceIds.add(event.contexts.trace.trace_id);\n      return event;\n    }\n\n    // no event type means error\n    if (!event.type) {\n      replay.getContext().errorIds.add(event.event_id);\n    }\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && replay.getOptions()._experiments.traceInternals) {\n      const exc = getEventExceptionValues(event);\n      addInternalBreadcrumb({\n        message: `Tagging event (${event.event_id}) - ${event.message} - ${exc.type}: ${exc.value}`\n      });\n    }\n\n    // Need to be very careful that this does not cause an infinite loop\n    if (replay.recordingMode === 'error' && event.exception && event.message !== UNABLE_TO_SEND_REPLAY // ignore this error because otherwise we could loop indefinitely with trying to capture replay and failing\n    ) {\n      setTimeout(async () => {\n        // Allow flush to complete before resuming as a session recording, otherwise\n        // the checkout from `startRecording` may be included in the payload.\n        // Prefer to keep the error replay as a separate (and smaller) segment\n        // than the session replay.\n        await replay.flushImmediate();\n        if (replay.stopRecording()) {\n          // Reset all \"capture on error\" configuration before\n          // starting a new recording\n          replay.recordingMode = 'session';\n          replay.startRecording();\n        }\n      });\n    }\n    return event;\n  };\n}\nfunction addInternalBreadcrumb(arg) {\n  const {\n    category,\n    level,\n    message,\n    ...rest\n  } = arg;\n  addBreadcrumb({\n    category: category || 'console',\n    level: level || 'debug',\n    message: `[debug]: ${message}`,\n    ...rest\n  });\n}\nfunction getEventExceptionValues(event) {\n  return {\n    type: 'Unknown',\n    value: 'n/a',\n    ...(event.exception && event.exception.values && event.exception.values[0])\n  };\n}\nfunction handleHistory(handlerData) {\n  const {\n    from,\n    to\n  } = handlerData;\n  const now = new Date().getTime() / 1000;\n  return {\n    type: 'navigation.push',\n    start: now,\n    end: now,\n    name: to,\n    data: {\n      previous: from\n    }\n  };\n}\n\n/**\n * Returns a listener to be added to `addInstrumentationHandler('history', listener)`.\n */\nfunction handleHistorySpanListener(replay) {\n  return handlerData => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n    const result = handleHistory(handlerData);\n    if (result === null) {\n      return;\n    }\n\n    // Need to collect visited URLs\n    replay.getContext().urls.push(result.name);\n    replay.triggerUserActivity();\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning false to flush\n      return false;\n    });\n  };\n}\nlet _LAST_BREADCRUMB = null;\nconst handleScopeListener = replay => scope => {\n  if (!replay.isEnabled()) {\n    return;\n  }\n  const result = handleScope(scope);\n  if (!result) {\n    return;\n  }\n  addBreadcrumbEvent(replay, result);\n};\n\n/**\n * An event handler to handle scope changes.\n */\nfunction handleScope(scope) {\n  // TODO (v8): Remove this guard. This was put in place because we introduced\n  // Scope.getLastBreadcrumb mid-v7 which caused incompatibilities with older SDKs.\n  // For now, we'll just return null if the method doesn't exist but we should eventually\n  // get rid of this guard.\n  const newBreadcrumb = scope.getLastBreadcrumb && scope.getLastBreadcrumb();\n\n  // Listener can be called when breadcrumbs have not changed, so we store the\n  // reference to the last crumb and only return a crumb if it has changed\n  if (_LAST_BREADCRUMB === newBreadcrumb || !newBreadcrumb) {\n    return null;\n  }\n  _LAST_BREADCRUMB = newBreadcrumb;\n  if (newBreadcrumb.category && (['fetch', 'xhr', 'sentry.event', 'sentry.transaction'].includes(newBreadcrumb.category) || newBreadcrumb.category.startsWith('ui.'))) {\n    return null;\n  }\n  return createBreadcrumb(newBreadcrumb);\n}\n\n// From sentry-javascript\n// e.g. https://github.com/getsentry/sentry-javascript/blob/c7fc025bf9fa8c073fdb56351808ce53909fbe45/packages/utils/src/instrument.ts#L180\n\nfunction handleXhr(handlerData) {\n  if (handlerData.xhr.__sentry_own_request__) {\n    // Taken from sentry-javascript\n    // Only capture non-sentry requests\n    return null;\n  }\n  if (handlerData.startTimestamp) {\n    // TODO: See if this is still needed\n    handlerData.xhr.__sentry_xhr__ = handlerData.xhr.__sentry_xhr__ || {};\n    handlerData.xhr.__sentry_xhr__.startTimestamp = handlerData.startTimestamp;\n  }\n  if (!handlerData.endTimestamp) {\n    return null;\n  }\n  const {\n    method,\n    url,\n    status_code: statusCode\n  } = handlerData.xhr.__sentry_xhr__ || {};\n  if (url === undefined) {\n    return null;\n  }\n  const timestamp = handlerData.xhr.__sentry_xhr__ ? handlerData.xhr.__sentry_xhr__.startTimestamp || 0 : handlerData.endTimestamp;\n  return {\n    type: 'resource.xhr',\n    name: url,\n    start: timestamp / 1000,\n    end: handlerData.endTimestamp / 1000,\n    data: {\n      method,\n      statusCode\n    }\n  };\n}\n\n/**\n * Returns a listener to be added to `addInstrumentationHandler('xhr', listener)`.\n */\nfunction handleXhrSpanListener(replay) {\n  return handlerData => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n    const result = handleXhr(handlerData);\n    if (result === null) {\n      return;\n    }\n    if (shouldFilterRequest(replay, result.name)) {\n      return;\n    }\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning true will cause `addUpdate` to not flush\n      // We do not want network requests to cause a flush. This will prevent\n      // recurring/polling requests from keeping the replay session alive.\n      return true;\n    });\n  };\n}\n\n/**\n * Add global listeners that cannot be removed.\n */\nfunction addGlobalListeners(replay) {\n  // Listeners from core SDK //\n  const scope = getCurrentHub().getScope();\n  if (scope) {\n    scope.addScopeListener(handleScopeListener(replay));\n  }\n  addInstrumentationHandler('dom', handleDomListener(replay));\n  addInstrumentationHandler('fetch', handleFetchSpanListener(replay));\n  addInstrumentationHandler('xhr', handleXhrSpanListener(replay));\n  addInstrumentationHandler('history', handleHistorySpanListener(replay));\n\n  // Tag all (non replay) events that get sent to Sentry with the current\n  // replay ID so that we can reference them later in the UI\n  addGlobalEventProcessor(handleGlobalEventListener(replay));\n}\n\n/**\n * Create a \"span\" for the total amount of memory being used by JS objects\n * (including v8 internal objects).\n */\nasync function addMemoryEntry(replay) {\n  // window.performance.memory is a non-standard API and doesn't work on all browsers, so we try-catch this\n  try {\n    return Promise.all(createPerformanceSpans(replay, [\n    // @ts-ignore memory doesn't exist on type Performance as the API is non-standard (we check that it exists above)\n    createMemoryEntry(WINDOW.performance.memory)]));\n  } catch (error) {\n    // Do nothing\n    return [];\n  }\n}\nfunction createMemoryEntry(memoryEntry) {\n  const {\n    jsHeapSizeLimit,\n    totalJSHeapSize,\n    usedJSHeapSize\n  } = memoryEntry;\n  // we don't want to use `getAbsoluteTime` because it adds the event time to the\n  // time origin, so we get the current timestamp instead\n  const time = new Date().getTime() / 1000;\n  return {\n    type: 'memory',\n    name: 'memory',\n    start: time,\n    end: time,\n    data: {\n      memory: {\n        jsHeapSizeLimit,\n        totalJSHeapSize,\n        usedJSHeapSize\n      }\n    }\n  };\n}\n\n// Map entryType -> function to normalize data for event\n// @ts-ignore TODO: entry type does not fit the create* functions entry type\nconst ENTRY_TYPES = {\n  // @ts-ignore TODO: entry type does not fit the create* functions entry type\n  resource: createResourceEntry,\n  paint: createPaintEntry,\n  // @ts-ignore TODO: entry type does not fit the create* functions entry type\n  navigation: createNavigationEntry,\n  // @ts-ignore TODO: entry type does not fit the create* functions entry type\n  ['largest-contentful-paint']: createLargestContentfulPaint\n};\n\n/**\n * Create replay performance entries from the browser performance entries.\n */\nfunction createPerformanceEntries(entries) {\n  return entries.map(createPerformanceEntry).filter(Boolean);\n}\nfunction createPerformanceEntry(entry) {\n  if (ENTRY_TYPES[entry.entryType] === undefined) {\n    return null;\n  }\n  return ENTRY_TYPES[entry.entryType](entry);\n}\nfunction getAbsoluteTime(time) {\n  // browserPerformanceTimeOrigin can be undefined if `performance` or\n  // `performance.now` doesn't exist, but this is already checked by this integration\n  return ((browserPerformanceTimeOrigin || WINDOW.performance.timeOrigin) + time) / 1000;\n}\n\n// TODO: type definition!\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction createPaintEntry(entry) {\n  const {\n    duration,\n    entryType,\n    name,\n    startTime\n  } = entry;\n  const start = getAbsoluteTime(startTime);\n  return {\n    type: entryType,\n    name,\n    start,\n    end: start + duration\n  };\n}\n\n// TODO: type definition!\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction createNavigationEntry(entry) {\n  // TODO: There looks to be some more interesting bits in here (domComplete, domContentLoaded)\n  const {\n    entryType,\n    name,\n    duration,\n    domComplete,\n    startTime,\n    transferSize,\n    type\n  } = entry;\n\n  // Ignore entries with no duration, they do not seem to be useful and cause dupes\n  if (duration === 0) {\n    return null;\n  }\n  return {\n    type: `${entryType}.${type}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(domComplete),\n    name,\n    data: {\n      size: transferSize,\n      duration\n    }\n  };\n}\n\n// TODO: type definition!\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction createResourceEntry(entry) {\n  const {\n    entryType,\n    initiatorType,\n    name,\n    responseEnd,\n    startTime,\n    encodedBodySize,\n    transferSize\n  } = entry;\n\n  // Core SDK handles these\n  if (['fetch', 'xmlhttprequest'].includes(initiatorType)) {\n    return null;\n  }\n  return {\n    type: `${entryType}.${initiatorType}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(responseEnd),\n    name,\n    data: {\n      size: transferSize,\n      encodedBodySize\n    }\n  };\n}\n\n// TODO: type definition!\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction createLargestContentfulPaint(entry) {\n  const {\n    duration,\n    entryType,\n    startTime,\n    size\n  } = entry;\n  const start = getAbsoluteTime(startTime);\n  return {\n    type: entryType,\n    name: entryType,\n    start,\n    end: start + duration,\n    data: {\n      duration,\n      size,\n      // Not sure why this errors, Node should be correct (Argument of type 'Node' is not assignable to parameter of type 'INode')\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      nodeId: record.mirror.getId(entry.element)\n    }\n  };\n}\n\n/**\n * Heavily simplified debounce function based on lodash.debounce.\n *\n * This function takes a callback function (@param fun) and delays its invocation\n * by @param wait milliseconds. Optionally, a maxWait can be specified in @param options,\n * which ensures that the callback is invoked at least once after the specified max. wait time.\n *\n * @param func the function whose invocation is to be debounced\n * @param wait the minimum time until the function is invoked after it was called once\n * @param options the options object, which can contain the `maxWait` property\n *\n * @returns the debounced version of the function, which needs to be called at least once to start the\n *          debouncing process. Subsequent calls will reset the debouncing timer and, in case @paramfunc\n *          was already invoked in the meantime, return @param func's return value.\n *          The debounced function has two additional properties:\n *          - `flush`: Invokes the debounced function immediately and returns its return value\n *          - `cancel`: Cancels the debouncing process and resets the debouncing timer\n */\nfunction debounce(func, wait, options) {\n  let callbackReturnValue;\n  let timerId;\n  let maxTimerId;\n  const maxWait = options && options.maxWait ? Math.max(options.maxWait, wait) : 0;\n  function invokeFunc() {\n    cancelTimers();\n    callbackReturnValue = func();\n    return callbackReturnValue;\n  }\n  function cancelTimers() {\n    timerId !== undefined && clearTimeout(timerId);\n    maxTimerId !== undefined && clearTimeout(maxTimerId);\n    timerId = maxTimerId = undefined;\n  }\n  function flush() {\n    if (timerId !== undefined || maxTimerId !== undefined) {\n      return invokeFunc();\n    }\n    return callbackReturnValue;\n  }\n  function debounced() {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(invokeFunc, wait);\n    if (maxWait && maxTimerId === undefined && maxWait !== wait) {\n      maxTimerId = setTimeout(invokeFunc, maxWait);\n    }\n    return callbackReturnValue;\n  }\n  debounced.cancel = cancelTimers;\n  debounced.flush = flush;\n  return debounced;\n}\nlet _originalRecordDroppedEvent;\n\n/**\n * Overwrite the `recordDroppedEvent` method on the client, so we can find out which events were dropped.\n * */\nfunction overwriteRecordDroppedEvent(errorIds) {\n  const client = getCurrentHub().getClient();\n  if (!client) {\n    return;\n  }\n  const _originalCallback = client.recordDroppedEvent.bind(client);\n  const recordDroppedEvent = (reason, category, event) => {\n    if (event && !event.type && event.event_id) {\n      errorIds.delete(event.event_id);\n    }\n    return _originalCallback(reason, category, event);\n  };\n  client.recordDroppedEvent = recordDroppedEvent;\n  _originalRecordDroppedEvent = _originalCallback;\n}\n\n/**\n * Restore the original method.\n * */\nfunction restoreRecordDroppedEvent() {\n  const client = getCurrentHub().getClient();\n  if (!client || !_originalRecordDroppedEvent) {\n    return;\n  }\n  client.recordDroppedEvent = _originalRecordDroppedEvent;\n}\n\n/**\n * Create a replay envelope ready to be sent.\n * This includes both the replay event, as well as the recording data.\n */\nfunction createReplayEnvelope(replayEvent, recordingData, dsn, tunnel) {\n  return createEnvelope(createEventEnvelopeHeaders(replayEvent, getSdkMetadataForEnvelopeHeader(replayEvent), tunnel, dsn), [[{\n    type: 'replay_event'\n  }, replayEvent], [{\n    type: 'replay_recording',\n    // If string then we need to encode to UTF8, otherwise will have\n    // wrong size. TextEncoder has similar browser support to\n    // MutationObserver, although it does not accept IE11.\n    length: typeof recordingData === 'string' ? new TextEncoder().encode(recordingData).length : recordingData.length\n  }, recordingData]]);\n}\n\n/**\n * Prepare the recording data ready to be sent.\n */\nfunction prepareRecordingData(_ref7) {\n  let {\n    recordingData,\n    headers\n  } = _ref7;\n  let payloadWithSequence;\n\n  // XXX: newline is needed to separate sequence id from events\n  const replayHeaders = `${JSON.stringify(headers)}\n`;\n  if (typeof recordingData === 'string') {\n    payloadWithSequence = `${replayHeaders}${recordingData}`;\n  } else {\n    const enc = new TextEncoder();\n    // XXX: newline is needed to separate sequence id from events\n    const sequence = enc.encode(replayHeaders);\n    // Merge the two Uint8Arrays\n    payloadWithSequence = new Uint8Array(sequence.length + recordingData.length);\n    payloadWithSequence.set(sequence);\n    payloadWithSequence.set(recordingData, sequence.length);\n  }\n  return payloadWithSequence;\n}\n\n/**\n * Prepare a replay event & enrich it with the SDK metadata.\n */\nasync function prepareReplayEvent(_ref8) {\n  let {\n    client,\n    scope,\n    replayId: event_id,\n    event\n  } = _ref8;\n  const integrations = typeof client._integrations === 'object' && client._integrations !== null && !Array.isArray(client._integrations) ? Object.keys(client._integrations) : undefined;\n  const preparedEvent = await prepareEvent(client.getOptions(), event, {\n    event_id,\n    integrations\n  }, scope);\n\n  // If e.g. a global event processor returned null\n  if (!preparedEvent) {\n    return null;\n  }\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  // extract the SDK name because `client._prepareEvent` doesn't add it to the event\n  const metadata = client.getSdkMetadata && client.getSdkMetadata();\n  const {\n    name,\n    version\n  } = metadata && metadata.sdk || {};\n  preparedEvent.sdk = {\n    ...preparedEvent.sdk,\n    name: name || 'sentry.javascript.unknown',\n    version: version || '0.0.0'\n  };\n  return preparedEvent;\n}\n\n/**\n * Send replay attachment using `fetch()`\n */\nasync function sendReplayRequest(_ref9) {\n  let {\n    recordingData,\n    replayId,\n    segmentId: segment_id,\n    includeReplayStartTimestamp,\n    eventContext,\n    timestamp,\n    session,\n    options\n  } = _ref9;\n  const preparedRecordingData = prepareRecordingData({\n    recordingData,\n    headers: {\n      segment_id\n    }\n  });\n  const {\n    urls,\n    errorIds,\n    traceIds,\n    initialTimestamp\n  } = eventContext;\n  const hub = getCurrentHub();\n  const client = hub.getClient();\n  const scope = hub.getScope();\n  const transport = client && client.getTransport();\n  const dsn = client && client.getDsn();\n  if (!client || !scope || !transport || !dsn || !session.sampled) {\n    return;\n  }\n  const baseEvent = {\n    // @ts-ignore private api\n    type: REPLAY_EVENT_NAME,\n    ...(includeReplayStartTimestamp ? {\n      replay_start_timestamp: initialTimestamp / 1000\n    } : {}),\n    timestamp: timestamp / 1000,\n    error_ids: errorIds,\n    trace_ids: traceIds,\n    urls,\n    replay_id: replayId,\n    segment_id,\n    replay_type: session.sampled\n  };\n  const replayEvent = await prepareReplayEvent({\n    scope,\n    client,\n    replayId,\n    event: baseEvent\n  });\n  if (!replayEvent) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'replay', baseEvent);\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('An event processor returned `null`, will not send event.');\n    return;\n  }\n  replayEvent.contexts = {\n    ...replayEvent.contexts,\n    replay: {\n      ...(replayEvent.contexts && replayEvent.contexts.replay),\n      session_sample_rate: options.sessionSampleRate,\n      error_sample_rate: options.errorSampleRate\n    }\n  };\n\n  /*\n  For reference, the fully built event looks something like this:\n  {\n      \"type\": \"replay_event\",\n      \"timestamp\": 1670837008.634,\n      \"error_ids\": [\n          \"errorId\"\n      ],\n      \"trace_ids\": [\n          \"traceId\"\n      ],\n      \"urls\": [\n          \"https://example.com\"\n      ],\n      \"replay_id\": \"eventId\",\n      \"segment_id\": 3,\n      \"replay_type\": \"error\",\n      \"platform\": \"javascript\",\n      \"event_id\": \"eventId\",\n      \"environment\": \"production\",\n      \"sdk\": {\n          \"integrations\": [\n              \"BrowserTracing\",\n              \"Replay\"\n          ],\n          \"name\": \"sentry.javascript.browser\",\n          \"version\": \"7.25.0\"\n      },\n      \"sdkProcessingMetadata\": {},\n      \"contexts\": {\n        \"replay\": {\n          \"session_sample_rate\": 1,\n          \"error_sample_rate\": 0,\n        },\n      },\n  }\n  */\n\n  const envelope = createReplayEnvelope(replayEvent, preparedRecordingData, dsn, client.getOptions().tunnel);\n  let response;\n  try {\n    response = await transport.send(envelope);\n  } catch (e) {\n    throw new Error(UNABLE_TO_SEND_REPLAY);\n  }\n\n  // TODO (v8): we can remove this guard once transport.send's type signature doesn't include void anymore\n  if (!response) {\n    return response;\n  }\n\n  // If the status code is invalid, we want to immediately stop & not retry\n  if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n    throw new TransportStatusCodeError(response.statusCode);\n  }\n  return response;\n}\n\n/**\n * This error indicates that the transport returned an invalid status code.\n */\nclass TransportStatusCodeError extends Error {\n  constructor(statusCode) {\n    super(`Transport returned status code ${statusCode}`);\n  }\n}\n\n/**\n * Finalize and send the current replay event to Sentry\n */\nasync function sendReplay(replayData) {\n  let retryConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    count: 0,\n    interval: RETRY_BASE_INTERVAL\n  };\n  const {\n    recordingData,\n    options\n  } = replayData;\n\n  // short circuit if there's no events to upload (this shouldn't happen as _runFlush makes this check)\n  if (!recordingData.length) {\n    return;\n  }\n  try {\n    await sendReplayRequest(replayData);\n    return true;\n  } catch (err) {\n    if (err instanceof TransportStatusCodeError) {\n      throw err;\n    }\n\n    // Capture error for every failed replay\n    setContext('Replays', {\n      _retryCount: retryConfig.count\n    });\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && options._experiments && options._experiments.captureExceptions) {\n      captureException(err);\n    }\n\n    // If an error happened here, it's likely that uploading the attachment\n    // failed, we'll can retry with the same events payload\n    if (retryConfig.count >= RETRY_MAX_COUNT) {\n      throw new Error(`${UNABLE_TO_SEND_REPLAY} - max retries exceeded`);\n    }\n\n    // will retry in intervals of 5, 10, 30\n    retryConfig.interval *= ++retryConfig.count;\n    return await new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          await sendReplay(replayData, retryConfig);\n          resolve(true);\n        } catch (err) {\n          reject(err);\n        }\n      }, retryConfig.interval);\n    });\n  }\n}\n\n/* eslint-disable max-lines */ // TODO: We might want to split this file up\n\n/**\n * The main replay container class, which holds all the state and methods for recording and sending replays.\n */\nclass ReplayContainer {\n  __init() {\n    this.eventBuffer = null;\n  }\n\n  /**\n   * List of PerformanceEntry from PerformanceObserver\n   */\n  __init2() {\n    this.performanceEvents = [];\n  }\n\n  /**\n   * Recording can happen in one of two modes:\n   * * session: Record the whole session, sending it continuously\n   * * error: Always keep the last 60s of recording, and when an error occurs, send it immediately\n   */\n  __init3() {\n    this.recordingMode = 'session';\n  }\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n\n  __init4() {\n    this._performanceObserver = null;\n  }\n  __init5() {\n    this._flushLock = null;\n  }\n\n  /**\n   * Timestamp of the last user activity. This lives across sessions.\n   */\n  __init6() {\n    this._lastActivity = new Date().getTime();\n  }\n\n  /**\n   * Is the integration currently active?\n   */\n  __init7() {\n    this._isEnabled = false;\n  }\n\n  /**\n   * Paused is a state where:\n   * - DOM Recording is not listening at all\n   * - Nothing will be added to event buffer (e.g. core SDK events)\n   */\n  __init8() {\n    this._isPaused = false;\n  }\n\n  /**\n   * Have we attached listeners to the core SDK?\n   * Note we have to track this as there is no way to remove instrumentation handlers.\n   */\n  __init9() {\n    this._hasInitializedCoreListeners = false;\n  }\n\n  /**\n   * Function to stop recording\n   */\n  __init10() {\n    this._stopRecording = null;\n  }\n  __init11() {\n    this._context = {\n      errorIds: new Set(),\n      traceIds: new Set(),\n      urls: [],\n      earliestEvent: null,\n      initialTimestamp: new Date().getTime(),\n      initialUrl: ''\n    };\n  }\n  constructor(_ref10) {\n    let {\n      options,\n      recordingOptions\n    } = _ref10;\n    ReplayContainer.prototype.__init.call(this);\n    ReplayContainer.prototype.__init2.call(this);\n    ReplayContainer.prototype.__init3.call(this);\n    ReplayContainer.prototype.__init4.call(this);\n    ReplayContainer.prototype.__init5.call(this);\n    ReplayContainer.prototype.__init6.call(this);\n    ReplayContainer.prototype.__init7.call(this);\n    ReplayContainer.prototype.__init8.call(this);\n    ReplayContainer.prototype.__init9.call(this);\n    ReplayContainer.prototype.__init10.call(this);\n    ReplayContainer.prototype.__init11.call(this);\n    ReplayContainer.prototype.__init12.call(this);\n    ReplayContainer.prototype.__init13.call(this);\n    ReplayContainer.prototype.__init14.call(this);\n    ReplayContainer.prototype.__init15.call(this);\n    ReplayContainer.prototype.__init16.call(this);\n    this._recordingOptions = recordingOptions;\n    this._options = options;\n    this._debouncedFlush = debounce(() => this._flush(), this._options.flushMinDelay, {\n      maxWait: this._options.flushMaxDelay\n    });\n  }\n\n  /** Get the event context. */\n  getContext() {\n    return this._context;\n  }\n\n  /** If recording is currently enabled. */\n  isEnabled() {\n    return this._isEnabled;\n  }\n\n  /** If recording is currently paused. */\n  isPaused() {\n    return this._isPaused;\n  }\n\n  /** Get the replay integration options. */\n  getOptions() {\n    return this._options;\n  }\n\n  /**\n   * Initializes the plugin.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * _performanceObserver, Recording, Sentry SDK, etc)\n   */\n  start() {\n    this._setInitialState();\n    if (!this._loadAndCheckSession()) {\n      return;\n    }\n\n    // If there is no session, then something bad has happened - can't continue\n    if (!this.session) {\n      this._handleException(new Error('No session found'));\n      return;\n    }\n    if (!this.session.sampled) {\n      // If session was not sampled, then we do not initialize the integration at all.\n      return;\n    }\n\n    // If session is sampled for errors, then we need to set the recordingMode\n    // to 'error', which will configure recording with different options.\n    if (this.session.sampled === 'error') {\n      this.recordingMode = 'error';\n    }\n\n    // setup() is generally called on page load or manually - in both cases we\n    // should treat it as an activity\n    this._updateSessionActivity();\n    this.eventBuffer = createEventBuffer({\n      useCompression: this._options.useCompression\n    });\n    this._addListeners();\n\n    // Need to set as enabled before we start recording, as `record()` can trigger a flush with a new checkout\n    this._isEnabled = true;\n    this.startRecording();\n  }\n\n  /**\n   * Start recording.\n   *\n   * Note that this will cause a new DOM checkout\n   */\n  startRecording() {\n    try {\n      this._stopRecording = record({\n        ...this._recordingOptions,\n        // When running in error sampling mode, we need to overwrite `checkoutEveryNms`\n        // Without this, it would record forever, until an error happens, which we don't want\n        // instead, we'll always keep the last 60 seconds of replay before an error happened\n        ...(this.recordingMode === 'error' && {\n          checkoutEveryNms: ERROR_CHECKOUT_TIME\n        }),\n        emit: this._handleRecordingEmit\n      });\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Stops the recording, if it was running.\n   * Returns true if it was stopped, else false.\n   */\n  stopRecording() {\n    try {\n      if (this._stopRecording) {\n        this._stopRecording();\n        this._stopRecording = undefined;\n        return true;\n      }\n      return false;\n    } catch (err) {\n      this._handleException(err);\n      return false;\n    }\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  stop() {\n    if (!this._isEnabled) {\n      return;\n    }\n    try {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Replay] Stopping Replays');\n      this._isEnabled = false;\n      this._removeListeners();\n      this.stopRecording();\n      this.eventBuffer && this.eventBuffer.destroy();\n      this.eventBuffer = null;\n      this._debouncedFlush.cancel();\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Pause some replay functionality. See comments for `_isPaused`.\n   * This differs from stop as this only stops DOM recording, it is\n   * not as thorough of a shutdown as `stop()`.\n   */\n  pause() {\n    this._isPaused = true;\n    this.stopRecording();\n  }\n\n  /**\n   * Resumes recording, see notes for `pause().\n   *\n   * Note that calling `startRecording()` here will cause a\n   * new DOM checkout.`\n   */\n  resume() {\n    if (!this._loadAndCheckSession()) {\n      return;\n    }\n    this._isPaused = false;\n    this.startRecording();\n  }\n\n  /**\n   * We want to batch uploads of replay events. Save events only if\n   * `<flushMinDelay>` milliseconds have elapsed since the last event\n   * *OR* if `<flushMaxDelay>` milliseconds have elapsed.\n   *\n   * Accepts a callback to perform side-effects and returns true to stop batch\n   * processing and hand back control to caller.\n   */\n  addUpdate(cb) {\n    // We need to always run `cb` (e.g. in the case of `this.recordingMode == 'error'`)\n    const cbResult = cb();\n\n    // If this option is turned on then we will only want to call `flush`\n    // explicitly\n    if (this.recordingMode === 'error') {\n      return;\n    }\n\n    // If callback is true, we do not want to continue with flushing -- the\n    // caller will need to handle it.\n    if (cbResult === true) {\n      return;\n    }\n\n    // addUpdate is called quite frequently - use _debouncedFlush so that it\n    // respects the flush delays and does not flush immediately\n    this._debouncedFlush();\n  }\n\n  /**\n   * Updates the user activity timestamp and resumes recording. This should be\n   * called in an event handler for a user action that we consider as the user\n   * being \"active\" (e.g. a mouse click).\n   */\n  triggerUserActivity() {\n    this._updateUserActivity();\n\n    // This case means that recording was once stopped due to inactivity.\n    // Ensure that recording is resumed.\n    if (!this._stopRecording) {\n      // Create a new session, otherwise when the user action is flushed, it\n      // will get rejected due to an expired session.\n      if (!this._loadAndCheckSession()) {\n        return;\n      }\n\n      // Note: This will cause a new DOM checkout\n      this.resume();\n      return;\n    }\n\n    // Otherwise... recording was never suspended, continue as normalish\n    this.checkAndHandleExpiredSession();\n    this._updateSessionActivity();\n  }\n\n  /**\n   *\n   * Always flush via `_debouncedFlush` so that we do not have flushes triggered\n   * from calling both `flush` and `_debouncedFlush`. Otherwise, there could be\n   * cases of mulitple flushes happening closely together.\n   */\n  flushImmediate() {\n    this._debouncedFlush();\n    // `.flush` is provided by the debounced function, analogously to lodash.debounce\n    return this._debouncedFlush.flush();\n  }\n\n  /** Get the current sesion (=replay) ID */\n  getSessionId() {\n    return this.session && this.session.id;\n  }\n\n  /**\n   * Checks if recording should be stopped due to user inactivity. Otherwise\n   * check if session is expired and create a new session if so. Triggers a new\n   * full snapshot on new session.\n   *\n   * Returns true if session is not expired, false otherwise.\n   * @hidden\n   */\n  checkAndHandleExpiredSession(expiry) {\n    const oldSessionId = this.getSessionId();\n\n    // Prevent starting a new session if the last user activity is older than\n    // MAX_SESSION_LIFE. Otherwise non-user activity can trigger a new\n    // session+recording. This creates noisy replays that do not have much\n    // content in them.\n    if (this._lastActivity && isExpired(this._lastActivity, MAX_SESSION_LIFE)) {\n      // Pause recording\n      this.pause();\n      return;\n    }\n\n    // --- There is recent user activity --- //\n    // This will create a new session if expired, based on expiry length\n    if (!this._loadAndCheckSession(expiry)) {\n      return;\n    }\n\n    // Session was expired if session ids do not match\n    const expired = oldSessionId !== this.getSessionId();\n    if (!expired) {\n      return true;\n    }\n\n    // Session is expired, trigger a full snapshot (which will create a new session)\n    this._triggerFullSnapshot();\n    return false;\n  }\n\n  /** A wrapper to conditionally capture exceptions. */\n  _handleException(error) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('[Replay]', error);\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && this._options._experiments && this._options._experiments.captureExceptions) {\n      captureException(error);\n    }\n  }\n\n  /**\n   * Loads (or refreshes) the current session.\n   * Returns false if session is not recorded.\n   */\n  _loadAndCheckSession() {\n    let expiry = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SESSION_IDLE_DURATION;\n    const {\n      type,\n      session\n    } = getSession({\n      expiry,\n      stickySession: Boolean(this._options.stickySession),\n      currentSession: this.session,\n      sessionSampleRate: this._options.sessionSampleRate,\n      errorSampleRate: this._options.errorSampleRate\n    });\n\n    // If session was newly created (i.e. was not loaded from storage), then\n    // enable flag to create the root replay\n    if (type === 'new') {\n      this._setInitialState();\n    }\n    const currentSessionId = this.getSessionId();\n    if (session.id !== currentSessionId) {\n      session.previousSessionId = currentSessionId;\n    }\n    this.session = session;\n    if (!this.session.sampled) {\n      this.stop();\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Capture some initial state that can change throughout the lifespan of the\n   * replay. This is required because otherwise they would be captured at the\n   * first flush.\n   */\n  _setInitialState() {\n    const urlPath = `${WINDOW.location.pathname}${WINDOW.location.hash}${WINDOW.location.search}`;\n    const url = `${WINDOW.location.origin}${urlPath}`;\n    this.performanceEvents = [];\n\n    // Reset _context as well\n    this._clearContext();\n    this._context.initialUrl = url;\n    this._context.initialTimestamp = new Date().getTime();\n    this._context.urls.push(url);\n  }\n\n  /**\n   * Adds listeners to record events for the replay\n   */\n  _addListeners() {\n    try {\n      WINDOW.document.addEventListener('visibilitychange', this._handleVisibilityChange);\n      WINDOW.addEventListener('blur', this._handleWindowBlur);\n      WINDOW.addEventListener('focus', this._handleWindowFocus);\n\n      // We need to filter out dropped events captured by `addGlobalEventProcessor(this.handleGlobalEvent)` below\n      overwriteRecordDroppedEvent(this._context.errorIds);\n\n      // There is no way to remove these listeners, so ensure they are only added once\n      if (!this._hasInitializedCoreListeners) {\n        addGlobalListeners(this);\n        this._hasInitializedCoreListeners = true;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n\n    // PerformanceObserver //\n    if (!('PerformanceObserver' in WINDOW)) {\n      return;\n    }\n    this._performanceObserver = setupPerformanceObserver(this);\n  }\n\n  /**\n   * Cleans up listeners that were created in `_addListeners`\n   */\n  _removeListeners() {\n    try {\n      WINDOW.document.removeEventListener('visibilitychange', this._handleVisibilityChange);\n      WINDOW.removeEventListener('blur', this._handleWindowBlur);\n      WINDOW.removeEventListener('focus', this._handleWindowFocus);\n      restoreRecordDroppedEvent();\n      if (this._performanceObserver) {\n        this._performanceObserver.disconnect();\n        this._performanceObserver = null;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Handler for recording events.\n   *\n   * Adds to event buffer, and has varying flushing behaviors if the event was a checkout.\n   */\n  __init12() {\n    this._handleRecordingEmit = (event, isCheckout) => {\n      // If this is false, it means session is expired, create and a new session and wait for checkout\n      if (!this.checkAndHandleExpiredSession()) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('[Replay] Received replay event after session expired.');\n        return;\n      }\n      this.addUpdate(() => {\n        // The session is always started immediately on pageload/init, but for\n        // error-only replays, it should reflect the most recent checkout\n        // when an error occurs. Clear any state that happens before this current\n        // checkout. This needs to happen before `addEvent()` which updates state\n        // dependent on this reset.\n        if (this.recordingMode === 'error' && event.type === 2) {\n          this._setInitialState();\n        }\n\n        // We need to clear existing events on a checkout, otherwise they are\n        // incremental event updates and should be appended\n        void addEvent(this, event, isCheckout);\n\n        // Different behavior for full snapshots (type=2), ignore other event types\n        // See https://github.com/rrweb-io/rrweb/blob/d8f9290ca496712aa1e7d472549480c4e7876594/packages/rrweb/src/types.ts#L16\n        if (event.type !== 2) {\n          return false;\n        }\n\n        // If there is a previousSessionId after a full snapshot occurs, then\n        // the replay session was started due to session expiration. The new session\n        // is started before triggering a new checkout and contains the id\n        // of the previous session. Do not immediately flush in this case\n        // to avoid capturing only the checkout and instead the replay will\n        // be captured if they perform any follow-up actions.\n        if (this.session && this.session.previousSessionId) {\n          return true;\n        }\n\n        // See note above re: session start needs to reflect the most recent\n        // checkout.\n        if (this.recordingMode === 'error' && this.session && this._context.earliestEvent) {\n          this.session.started = this._context.earliestEvent;\n          this._maybeSaveSession();\n        }\n\n        // Flush immediately so that we do not miss the first segment, otherwise\n        // it can prevent loading on the UI. This will cause an increase in short\n        // replays (e.g. opening and closing a tab quickly), but these can be\n        // filtered on the UI.\n        if (this.recordingMode === 'session') {\n          // We want to ensure the worker is ready, as otherwise we'd always send the first event uncompressed\n          void this.flushImmediate();\n        }\n        return true;\n      });\n    };\n  }\n\n  /**\n   * Handle when visibility of the page content changes. Opening a new tab will\n   * cause the state to change to hidden because of content of current page will\n   * be hidden. Likewise, moving a different window to cover the contents of the\n   * page will also trigger a change to a hidden state.\n   */\n  __init13() {\n    this._handleVisibilityChange = () => {\n      if (WINDOW.document.visibilityState === 'visible') {\n        this._doChangeToForegroundTasks();\n      } else {\n        this._doChangeToBackgroundTasks();\n      }\n    };\n  }\n\n  /**\n   * Handle when page is blurred\n   */\n  __init14() {\n    this._handleWindowBlur = () => {\n      const breadcrumb = createBreadcrumb({\n        category: 'ui.blur'\n      });\n\n      // Do not count blur as a user action -- it's part of the process of them\n      // leaving the page\n      this._doChangeToBackgroundTasks(breadcrumb);\n    };\n  }\n\n  /**\n   * Handle when page is focused\n   */\n  __init15() {\n    this._handleWindowFocus = () => {\n      const breadcrumb = createBreadcrumb({\n        category: 'ui.focus'\n      });\n\n      // Do not count focus as a user action -- instead wait until they focus and\n      // interactive with page\n      this._doChangeToForegroundTasks(breadcrumb);\n    };\n  }\n\n  /**\n   * Tasks to run when we consider a page to be hidden (via blurring and/or visibility)\n   */\n  _doChangeToBackgroundTasks(breadcrumb) {\n    if (!this.session) {\n      return;\n    }\n    const expired = isSessionExpired(this.session, VISIBILITY_CHANGE_TIMEOUT);\n    if (breadcrumb && !expired) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Send replay when the page/tab becomes hidden. There is no reason to send\n    // replay if it becomes visible, since no actions we care about were done\n    // while it was hidden\n    this._conditionalFlush();\n  }\n\n  /**\n   * Tasks to run when we consider a page to be visible (via focus and/or visibility)\n   */\n  _doChangeToForegroundTasks(breadcrumb) {\n    if (!this.session) {\n      return;\n    }\n    const isSessionActive = this.checkAndHandleExpiredSession(VISIBILITY_CHANGE_TIMEOUT);\n    if (!isSessionActive) {\n      // If the user has come back to the page within VISIBILITY_CHANGE_TIMEOUT\n      // ms, we will re-use the existing session, otherwise create a new\n      // session\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Replay] Document has become active, but session has expired');\n      return;\n    }\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n  }\n\n  /**\n   * Trigger rrweb to take a full snapshot which will cause this plugin to\n   * create a new Replay event.\n   */\n  _triggerFullSnapshot() {\n    try {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Replay] Taking full rrweb snapshot');\n      record.takeFullSnapshot(true);\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Update user activity (across session lifespans)\n   */\n  _updateUserActivity() {\n    let _lastActivity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date().getTime();\n    this._lastActivity = _lastActivity;\n  }\n\n  /**\n   * Updates the session's last activity timestamp\n   */\n  _updateSessionActivity() {\n    let _lastActivity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date().getTime();\n    if (this.session) {\n      this.session.lastActivity = _lastActivity;\n      this._maybeSaveSession();\n    }\n  }\n\n  /**\n   * Helper to create (and buffer) a replay breadcrumb from a core SDK breadcrumb\n   */\n  _createCustomBreadcrumb(breadcrumb) {\n    this.addUpdate(() => {\n      void addEvent(this, {\n        type: EventType.Custom,\n        timestamp: breadcrumb.timestamp || 0,\n        data: {\n          tag: 'breadcrumb',\n          payload: breadcrumb\n        }\n      });\n    });\n  }\n\n  /**\n   * Observed performance events are added to `this.performanceEvents`. These\n   * are included in the replay event before it is finished and sent to Sentry.\n   */\n  _addPerformanceEntries() {\n    // Copy and reset entries before processing\n    const entries = [...this.performanceEvents];\n    this.performanceEvents = [];\n    return Promise.all(createPerformanceSpans(this, createPerformanceEntries(entries)));\n  }\n\n  /**\n   * Only flush if `this.recordingMode === 'session'`\n   */\n  _conditionalFlush() {\n    if (this.recordingMode === 'error') {\n      return;\n    }\n    void this.flushImmediate();\n  }\n\n  /**\n   * Clear _context\n   */\n  _clearContext() {\n    // XXX: `initialTimestamp` and `initialUrl` do not get cleared\n    this._context.errorIds.clear();\n    this._context.traceIds.clear();\n    this._context.urls = [];\n    this._context.earliestEvent = null;\n  }\n\n  /**\n   * Return and clear _context\n   */\n  _popEventContext() {\n    if (this._context.earliestEvent && this._context.earliestEvent < this._context.initialTimestamp) {\n      this._context.initialTimestamp = this._context.earliestEvent;\n    }\n    const _context = {\n      initialTimestamp: this._context.initialTimestamp,\n      initialUrl: this._context.initialUrl,\n      errorIds: Array.from(this._context.errorIds).filter(Boolean),\n      traceIds: Array.from(this._context.traceIds).filter(Boolean),\n      urls: this._context.urls\n    };\n    this._clearContext();\n    return _context;\n  }\n\n  /**\n   * Flushes replay event buffer to Sentry.\n   *\n   * Performance events are only added right before flushing - this is\n   * due to the buffered performance observer events.\n   *\n   * Should never be called directly, only by `flush`\n   */\n  async _runFlush() {\n    if (!this.session || !this.eventBuffer) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('[Replay] No session or eventBuffer found to flush.');\n      return;\n    }\n    await this._addPerformanceEntries();\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer || !this.eventBuffer.hasEvents) {\n      return;\n    }\n\n    // Only attach memory event if eventBuffer is not empty\n    await addMemoryEntry(this);\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer) {\n      return;\n    }\n    try {\n      // Note this empties the event buffer regardless of outcome of sending replay\n      const recordingData = await this.eventBuffer.finish();\n\n      // NOTE: Copy values from instance members, as it's possible they could\n      // change before the flush finishes.\n      const replayId = this.session.id;\n      const eventContext = this._popEventContext();\n      // Always increment segmentId regardless of outcome of sending replay\n      const segmentId = this.session.segmentId++;\n      this._maybeSaveSession();\n      await sendReplay({\n        replayId,\n        recordingData,\n        segmentId,\n        includeReplayStartTimestamp: segmentId === 0,\n        eventContext,\n        session: this.session,\n        options: this.getOptions(),\n        timestamp: new Date().getTime()\n      });\n    } catch (err) {\n      this._handleException(err);\n\n      // This means we retried 3 times, and all of them failed\n      // In this case, we want to completely stop the replay - otherwise, we may get inconsistent segments\n      this.stop();\n    }\n  }\n\n  /**\n   * Flush recording data to Sentry. Creates a lock so that only a single flush\n   * can be active at a time. Do not call this directly.\n   */\n  __init16() {\n    this._flush = async () => {\n      if (!this._isEnabled) {\n        // This can happen if e.g. the replay was stopped because of exceeding the retry limit\n        return;\n      }\n      if (!this.checkAndHandleExpiredSession()) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('[Replay] Attempting to finish replay event after session expired.');\n        return;\n      }\n      if (!this.session) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('[Replay] No session found to flush.');\n        return;\n      }\n\n      // A flush is about to happen, cancel any queued flushes\n      this._debouncedFlush.cancel();\n\n      // this._flushLock acts as a lock so that future calls to `_flush()`\n      // will be blocked until this promise resolves\n      if (!this._flushLock) {\n        this._flushLock = this._runFlush();\n        await this._flushLock;\n        this._flushLock = null;\n        return;\n      }\n\n      // Wait for previous flush to finish, then call the debounced `_flush()`.\n      // It's possible there are other flush requests queued and waiting for it\n      // to resolve. We want to reduce all outstanding requests (as well as any\n      // new flush requests that occur within a second of the locked flush\n      // completing) into a single flush.\n\n      try {\n        await this._flushLock;\n      } catch (err) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(err);\n      } finally {\n        this._debouncedFlush();\n      }\n    };\n  }\n\n  /** Save the session, if it is sticky */\n  _maybeSaveSession() {\n    if (this.session && this._options.stickySession) {\n      saveSession(this.session);\n    }\n  }\n}\nfunction getOption(selectors, defaultSelectors, deprecatedClassOption, deprecatedSelectorOption) {\n  const deprecatedSelectors = typeof deprecatedSelectorOption === 'string' ? deprecatedSelectorOption.split(',') : [];\n  const allSelectors = [...selectors,\n  // @deprecated\n  ...deprecatedSelectors,\n  // sentry defaults\n  ...defaultSelectors];\n\n  // @deprecated\n  if (typeof deprecatedClassOption !== 'undefined') {\n    // NOTE: No support for RegExp\n    if (typeof deprecatedClassOption === 'string') {\n      allSelectors.push(`.${deprecatedClassOption}`);\n    }\n\n    // eslint-disable-next-line no-console\n    console.warn('[Replay] You are using a deprecated configuration item for privacy. Read the documentation on how to use the new privacy configuration.');\n  }\n  return allSelectors.join(',');\n}\n\n/**\n * Returns privacy related configuration for use in rrweb\n */\nfunction getPrivacyOptions(_ref11) {\n  let {\n    mask,\n    unmask,\n    block,\n    unblock,\n    ignore,\n    // eslint-disable-next-line deprecation/deprecation\n    blockClass,\n    // eslint-disable-next-line deprecation/deprecation\n    blockSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextClass,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    ignoreClass\n  } = _ref11;\n  const maskSelector = getOption(mask, ['.sentry-mask', '[data-sentry-mask]'], maskTextClass, maskTextSelector);\n  const unmaskSelector = getOption(unmask, ['.sentry-unmask', '[data-sentry-unmask]']);\n  const options = {\n    // We are making the decision to make text and input selectors the same\n    maskTextSelector: maskSelector,\n    unmaskTextSelector: unmaskSelector,\n    maskInputSelector: maskSelector,\n    unmaskInputSelector: unmaskSelector,\n    blockSelector: getOption(block, ['.sentry-block', '[data-sentry-block]'], blockClass, blockSelector),\n    unblockSelector: getOption(unblock, ['.sentry-unblock', '[data-sentry-unblock]']),\n    ignoreSelector: getOption(ignore, ['.sentry-ignore', '[data-sentry-ignore]'], ignoreClass)\n  };\n  if (blockClass instanceof RegExp) {\n    options.blockClass = blockClass;\n  }\n  if (maskTextClass instanceof RegExp) {\n    options.maskTextClass = maskTextClass;\n  }\n  return options;\n}\n\n/**\n * Returns true if we are in the browser.\n */\nfunction isBrowser() {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof window !== 'undefined' && (!isNodeEnv() || isElectronNodeRenderer());\n}\n\n// Electron renderers with nodeIntegration enabled are detected as Node.js so we specifically test for them\nfunction isElectronNodeRenderer() {\n  return typeof process !== 'undefined' && process.type === 'renderer';\n}\nconst MEDIA_SELECTORS = 'img,image,svg,path,rect,area,video,object,picture,embed,map,audio';\nlet _initialized = false;\n\n/**\n * The main replay integration class, to be passed to `init({  integrations: [] })`.\n */\nclass Replay {\n  /**\n   * @inheritDoc\n   */\n  static __initStatic() {\n    this.id = 'Replay';\n  }\n\n  /**\n   * @inheritDoc\n   */\n  __init() {\n    this.name = Replay.id;\n  }\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n\n  /**\n   * Initial options passed to the replay integration, merged with default values.\n   * Note: `sessionSampleRate` and `errorSampleRate` are not required here, as they\n   * can only be finally set when setupOnce() is called.\n   *\n   * @private\n   */\n\n  constructor() {\n    let {\n      flushMinDelay = DEFAULT_FLUSH_MIN_DELAY,\n      flushMaxDelay = DEFAULT_FLUSH_MAX_DELAY,\n      stickySession = true,\n      useCompression = true,\n      _experiments = {},\n      sessionSampleRate,\n      errorSampleRate,\n      maskAllText,\n      maskAllInputs = true,\n      blockAllMedia = true,\n      mask = [],\n      unmask = [],\n      block = [],\n      unblock = [],\n      ignore = [],\n      maskFn,\n      // eslint-disable-next-line deprecation/deprecation\n      blockClass,\n      // eslint-disable-next-line deprecation/deprecation\n      blockSelector,\n      // eslint-disable-next-line deprecation/deprecation\n      maskInputOptions,\n      // eslint-disable-next-line deprecation/deprecation\n      maskTextClass,\n      // eslint-disable-next-line deprecation/deprecation\n      maskTextSelector,\n      // eslint-disable-next-line deprecation/deprecation\n      ignoreClass\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    Replay.prototype.__init.call(this);\n    this._recordingOptions = {\n      maskAllInputs,\n      maskInputOptions: {\n        ...(maskInputOptions || {}),\n        password: true\n      },\n      maskTextFn: maskFn,\n      maskInputFn: maskFn,\n      ...getPrivacyOptions({\n        mask,\n        unmask,\n        block,\n        unblock,\n        ignore,\n        blockClass,\n        blockSelector,\n        maskTextClass,\n        maskTextSelector,\n        ignoreClass\n      }),\n      // Our defaults\n      slimDOMOptions: 'all',\n      inlineStylesheet: true,\n      // Disable inline images as it will increase segment/replay size\n      inlineImages: false,\n      // collect fonts, but be aware that `sentry.io` needs to be an allowed\n      // origin for playback\n      collectFonts: true\n    };\n    this._initialOptions = {\n      flushMinDelay,\n      flushMaxDelay,\n      stickySession,\n      sessionSampleRate,\n      errorSampleRate,\n      useCompression,\n      maskAllText: typeof maskAllText === 'boolean' ? maskAllText : !maskTextSelector,\n      blockAllMedia,\n      _experiments\n    };\n    if (typeof sessionSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(`[Replay] You are passing \\`sessionSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysSessionSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysSessionSampleRate: ${sessionSampleRate} })`);\n      this._initialOptions.sessionSampleRate = sessionSampleRate;\n    }\n    if (typeof errorSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(`[Replay] You are passing \\`errorSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysOnErrorSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysOnErrorSampleRate: ${errorSampleRate} })`);\n      this._initialOptions.errorSampleRate = errorSampleRate;\n    }\n    if (this._initialOptions.maskAllText) {\n      // `maskAllText` is a more user friendly option to configure\n      // `maskTextSelector`. This means that all nodes will have their text\n      // content masked.\n      this._recordingOptions.maskTextSelector = MASK_ALL_TEXT_SELECTOR;\n    }\n    if (this._initialOptions.blockAllMedia) {\n      // `blockAllMedia` is a more user friendly option to configure blocking\n      // embedded media elements\n      this._recordingOptions.blockSelector = !this._recordingOptions.blockSelector ? MEDIA_SELECTORS : `${this._recordingOptions.blockSelector},${MEDIA_SELECTORS}`;\n    }\n    if (this._isInitialized && isBrowser()) {\n      throw new Error('Multiple Sentry Session Replay instances are not supported');\n    }\n    this._isInitialized = true;\n  }\n\n  /** If replay has already been initialized */\n  get _isInitialized() {\n    return _initialized;\n  }\n\n  /** Update _isInitialized */\n  set _isInitialized(value) {\n    _initialized = value;\n  }\n\n  /**\n   * We previously used to create a transaction in `setupOnce` and it would\n   * potentially create a transaction before some native SDK integrations have run\n   * and applied their own global event processor. An example is:\n   * https://github.com/getsentry/sentry-javascript/blob/b47ceafbdac7f8b99093ce6023726ad4687edc48/packages/browser/src/integrations/useragent.ts\n   *\n   * So we call `replay.setup` in next event loop as a workaround to wait for other\n   * global event processors to finish. This is no longer needed, but keeping it\n   * here to avoid any future issues.\n   */\n  setupOnce() {\n    if (!isBrowser()) {\n      return;\n    }\n    this._setup();\n\n    // XXX: See method comments above\n    setTimeout(() => this.start());\n  }\n\n  /**\n   * Initializes the plugin.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * PerformanceObserver, Recording, Sentry SDK, etc)\n   */\n  start() {\n    if (!this._replay) {\n      return;\n    }\n    this._replay.start();\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  stop() {\n    if (!this._replay) {\n      return;\n    }\n    this._replay.stop();\n  }\n\n  /**\n   * Immediately send all pending events.\n   */\n  flush() {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return;\n    }\n    return this._replay.flushImmediate();\n  }\n\n  /** Setup the integration. */\n  _setup() {\n    // Client is not available in constructor, so we need to wait until setupOnce\n    const finalOptions = loadReplayOptionsFromClient(this._initialOptions);\n    this._replay = new ReplayContainer({\n      options: finalOptions,\n      recordingOptions: this._recordingOptions\n    });\n  }\n}\nReplay.__initStatic();\n\n/** Parse Replay-related options from SDK options */\nfunction loadReplayOptionsFromClient(initialOptions) {\n  const client = getCurrentHub().getClient();\n  const opt = client && client.getOptions();\n  const finalOptions = {\n    sessionSampleRate: 0,\n    errorSampleRate: 0,\n    ...dropUndefinedKeys(initialOptions)\n  };\n  if (!opt) {\n    // eslint-disable-next-line no-console\n    console.warn('SDK client is not available.');\n    return finalOptions;\n  }\n  if (initialOptions.sessionSampleRate == null &&\n  // TODO remove once deprecated rates are removed\n  initialOptions.errorSampleRate == null &&\n  // TODO remove once deprecated rates are removed\n  opt.replaysSessionSampleRate == null && opt.replaysOnErrorSampleRate == null) {\n    // eslint-disable-next-line no-console\n    console.warn('Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.');\n  }\n  if (typeof opt.replaysSessionSampleRate === 'number') {\n    finalOptions.sessionSampleRate = opt.replaysSessionSampleRate;\n  }\n  if (typeof opt.replaysOnErrorSampleRate === 'number') {\n    finalOptions.errorSampleRate = opt.replaysOnErrorSampleRate;\n  }\n  return finalOptions;\n}\nexport { Replay };","map":{"version":3,"sources":["../../../src/constants.ts","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/ext/tslib/tslib.es6.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb-snapshot/es/rrweb-snapshot.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/types.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/utils.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/mutation.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observer.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/iframe-manager.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/shadow-dom-manager.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/2d.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/canvas.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/ext/base64-arraybuffer/dist/base64-arraybuffer.es5.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/serialize-args.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/webgl.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/canvas-manager.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/index.js","../../../src/util/dedupePerformanceEntries.ts","../../../src/coreHandlers/performanceObserver.ts","../../../src/worker/worker.js","../../../src/eventBuffer/EventBufferArray.ts","../../../src/eventBuffer/WorkerHandler.ts","../../../src/eventBuffer/EventBufferCompressionWorker.ts","../../../src/eventBuffer/EventBufferProxy.ts","../../../src/eventBuffer/index.ts","../../../src/util/isExpired.ts","../../../src/util/isSessionExpired.ts","../../../src/session/saveSession.ts","../../../src/util/isSampled.ts","../../../src/session/Session.ts","../../../src/session/createSession.ts","../../../src/session/fetchSession.ts","../../../src/session/getSession.ts","../../../src/util/addEvent.ts","../../../src/util/createBreadcrumb.ts","../../../src/coreHandlers/addBreadcrumbEvent.ts","../../../src/coreHandlers/handleDom.ts","../../../src/util/createPerformanceSpans.ts","../../../src/util/shouldFilterRequest.ts","../../../src/coreHandlers/handleFetch.ts","../../../src/util/isRrwebError.ts","../../../src/coreHandlers/handleGlobalEvent.ts","../../../src/coreHandlers/handleHistory.ts","../../../src/coreHandlers/handleScope.ts","../../../src/coreHandlers/handleXhr.ts","../../../src/util/addGlobalListeners.ts","../../../src/util/addMemoryEntry.ts","../../../src/util/createPerformanceEntries.ts","../../../src/util/debounce.ts","../../../src/util/monkeyPatchRecordDroppedEvent.ts","../../../src/util/createReplayEnvelope.ts","../../../src/util/prepareRecordingData.ts","../../../src/util/prepareReplayEvent.ts","../../../src/util/sendReplayRequest.ts","../../../src/util/sendReplay.ts","../../../src/replay.ts","../../../src/util/getPrivacyOptions.ts","../../../src/util/isBrowser.ts","../../../src/integration.ts"],"names":[],"mappings":"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","sourcesContent":["import { GLOBAL_OBJ } from '@sentry/utils';\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and replay packages should `@sentry/browser` import\n// from `@sentry/replay` in the future\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nexport const REPLAY_SESSION_KEY = 'sentryReplaySession';\nexport const REPLAY_EVENT_NAME = 'replay_event';\nexport const RECORDING_EVENT_NAME = 'replay_recording';\nexport const UNABLE_TO_SEND_REPLAY = 'Unable to send Replay';\n\n// The idle limit for a session\nexport const SESSION_IDLE_DURATION = 300_000; // 5 minutes in ms\n\n// Grace period to keep a session when a user changes tabs or hides window\nexport const VISIBILITY_CHANGE_TIMEOUT = SESSION_IDLE_DURATION;\n\n// The maximum length of a session\nexport const MAX_SESSION_LIFE = 3_600_000; // 60 minutes\n\n/** The select to use for the `maskAllText` option  */\nexport const MASK_ALL_TEXT_SELECTOR = 'body *:not(style), body *:not(script)';\n\n/** Default flush delays */\nexport const DEFAULT_FLUSH_MIN_DELAY = 5_000;\nexport const DEFAULT_FLUSH_MAX_DELAY = 5_000;\n\n/* How long to wait for error checkouts */\nexport const ERROR_CHECKOUT_TIME = 60_000;\n\nexport const RETRY_BASE_INTERVAL = 5000;\nexport const RETRY_MAX_COUNT = 3;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\n\nexport { __assign, __read, __rest, __spreadArray, __values };\n","var NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\n})(NodeType || (NodeType = {}));\n\nfunction isElement(n) {\n    return n.nodeType === n.ELEMENT_NODE;\n}\nfunction isShadowRoot(n) {\n    var _a;\n    var host = (_a = n) === null || _a === void 0 ? void 0 : _a.host;\n    return Boolean(host && host.shadowRoot && host.shadowRoot === n);\n}\nfunction maskInputValue(_a) {\n    var input = _a.input, maskInputSelector = _a.maskInputSelector, unmaskInputSelector = _a.unmaskInputSelector, maskInputOptions = _a.maskInputOptions, tagName = _a.tagName, type = _a.type, value = _a.value, maskInputFn = _a.maskInputFn;\n    var text = value || '';\n    if (unmaskInputSelector && input.matches(unmaskInputSelector)) {\n        return text;\n    }\n    if (maskInputOptions[tagName.toLowerCase()] ||\n        maskInputOptions[type] ||\n        (maskInputSelector && input.matches(maskInputSelector))) {\n        if (maskInputFn) {\n            text = maskInputFn(text);\n        }\n        else {\n            text = '*'.repeat(text.length);\n        }\n    }\n    return text;\n}\nvar ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\nfunction is2DCanvasBlank(canvas) {\n    var ctx = canvas.getContext('2d');\n    if (!ctx)\n        return true;\n    var chunkSize = 50;\n    for (var x = 0; x < canvas.width; x += chunkSize) {\n        for (var y = 0; y < canvas.height; y += chunkSize) {\n            var getImageData = ctx.getImageData;\n            var originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\n                : getImageData;\n            var pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\n            if (pixelBuffer.some(function (pixel) { return pixel !== 0; }))\n                return false;\n        }\n    }\n    return true;\n}\n\nvar _id = 1;\nvar tagNameRegex = new RegExp('[^a-z0-9-_:]');\nvar IGNORED_NODE = -2;\nfunction genId() {\n    return _id++;\n}\nfunction getValidTagName(element) {\n    if (element instanceof HTMLFormElement) {\n        return 'form';\n    }\n    var processedTagName = element.tagName.toLowerCase().trim();\n    if (tagNameRegex.test(processedTagName)) {\n        return 'div';\n    }\n    return processedTagName;\n}\nfunction getCssRulesString(s) {\n    try {\n        var rules = s.rules || s.cssRules;\n        return rules ? Array.from(rules).map(getCssRuleString).join('') : null;\n    }\n    catch (error) {\n        return null;\n    }\n}\nfunction getCssRuleString(rule) {\n    var cssStringified = rule.cssText;\n    if (isCSSImportRule(rule)) {\n        try {\n            cssStringified = getCssRulesString(rule.styleSheet) || cssStringified;\n        }\n        catch (_a) {\n        }\n    }\n    return cssStringified;\n}\nfunction isCSSImportRule(rule) {\n    return 'styleSheet' in rule;\n}\nfunction stringifyStyleSheet(sheet) {\n    return sheet.cssRules\n        ? Array.from(sheet.cssRules)\n            .map(function (rule) { return rule.cssText || ''; })\n            .join('')\n        : '';\n}\nfunction extractOrigin(url) {\n    var origin = '';\n    if (url.indexOf('//') > -1) {\n        origin = url.split('/').slice(0, 3).join('/');\n    }\n    else {\n        origin = url.split('/')[0];\n    }\n    origin = origin.split('?')[0];\n    return origin;\n}\nvar canvasService;\nvar canvasCtx;\nvar URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\nvar RELATIVE_PATH = /^(?!www\\.|(?:http|ftp)s?:\\/\\/|[A-Za-z]:\\\\|\\/\\/|#).*/;\nvar DATA_URI = /^(data:)([^,]*),(.*)/i;\nfunction absoluteToStylesheet(cssText, href) {\n    return (cssText || '').replace(URL_IN_CSS_REF, function (origin, quote1, path1, quote2, path2, path3) {\n        var filePath = path1 || path2 || path3;\n        var maybeQuote = quote1 || quote2 || '';\n        if (!filePath) {\n            return origin;\n        }\n        if (!RELATIVE_PATH.test(filePath)) {\n            return \"url(\" + maybeQuote + filePath + maybeQuote + \")\";\n        }\n        if (DATA_URI.test(filePath)) {\n            return \"url(\" + maybeQuote + filePath + maybeQuote + \")\";\n        }\n        if (filePath[0] === '/') {\n            return \"url(\" + maybeQuote + (extractOrigin(href) + filePath) + maybeQuote + \")\";\n        }\n        var stack = href.split('/');\n        var parts = filePath.split('/');\n        stack.pop();\n        for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n            var part = parts_1[_i];\n            if (part === '.') {\n                continue;\n            }\n            else if (part === '..') {\n                stack.pop();\n            }\n            else {\n                stack.push(part);\n            }\n        }\n        return \"url(\" + maybeQuote + stack.join('/') + maybeQuote + \")\";\n    });\n}\nvar SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\nvar SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\n    if (attributeValue.trim() === '') {\n        return attributeValue;\n    }\n    var pos = 0;\n    function collectCharacters(regEx) {\n        var chars;\n        var match = regEx.exec(attributeValue.substring(pos));\n        if (match) {\n            chars = match[0];\n            pos += chars.length;\n            return chars;\n        }\n        return '';\n    }\n    var output = [];\n    while (true) {\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\n        if (pos >= attributeValue.length) {\n            break;\n        }\n        var url = collectCharacters(SRCSET_NOT_SPACES);\n        if (url.slice(-1) === ',') {\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\n            output.push(url);\n        }\n        else {\n            var descriptorsStr = '';\n            url = absoluteToDoc(doc, url);\n            var inParens = false;\n            while (true) {\n                var c = attributeValue.charAt(pos);\n                if (c === '') {\n                    output.push((url + descriptorsStr).trim());\n                    break;\n                }\n                else if (!inParens) {\n                    if (c === ',') {\n                        pos += 1;\n                        output.push((url + descriptorsStr).trim());\n                        break;\n                    }\n                    else if (c === '(') {\n                        inParens = true;\n                    }\n                }\n                else {\n                    if (c === ')') {\n                        inParens = false;\n                    }\n                }\n                descriptorsStr += c;\n                pos += 1;\n            }\n        }\n    }\n    return output.join(', ');\n}\nfunction absoluteToDoc(doc, attributeValue) {\n    if (!attributeValue || attributeValue.trim() === '') {\n        return attributeValue;\n    }\n    var a = doc.createElement('a');\n    a.href = attributeValue;\n    return a.href;\n}\nfunction isSVGElement(el) {\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\n}\nfunction getHref() {\n    var a = document.createElement('a');\n    a.href = '';\n    return a.href;\n}\nfunction transformAttribute(doc, tagName, name, value) {\n    if (name === 'src' || (name === 'href' && value)) {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'xlink:href' && value && value[0] !== '#') {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'background' &&\n        value &&\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'srcset' && value) {\n        return getAbsoluteSrcsetString(doc, value);\n    }\n    else if (name === 'style' && value) {\n        return absoluteToStylesheet(value, getHref());\n    }\n    else if (tagName === 'object' && name === 'data' && value) {\n        return absoluteToDoc(doc, value);\n    }\n    else {\n        return value;\n    }\n}\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\n    if (unblockSelector && element.matches(unblockSelector)) {\n        return false;\n    }\n    if (typeof blockClass === 'string') {\n        if (element.classList.contains(blockClass)) {\n            return true;\n        }\n    }\n    else {\n        for (var eIndex = 0; eIndex < element.classList.length; eIndex++) {\n            var className = element.classList[eIndex];\n            if (blockClass.test(className)) {\n                return true;\n            }\n        }\n    }\n    if (blockSelector) {\n        return element.matches(blockSelector);\n    }\n    return false;\n}\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextSelector) {\n    if (!node) {\n        return false;\n    }\n    if (node.nodeType === node.ELEMENT_NODE) {\n        if (unmaskTextSelector) {\n            if (node.matches(unmaskTextSelector) ||\n                node.closest(unmaskTextSelector)) {\n                return false;\n            }\n        }\n        if (typeof maskTextClass === 'string') {\n            if (node.classList.contains(maskTextClass)) {\n                return true;\n            }\n        }\n        else {\n            for (var eIndex = 0; eIndex < node.classList.length; eIndex++) {\n                var className = node.classList[eIndex];\n                if (maskTextClass.test(className)) {\n                    return true;\n                }\n            }\n        }\n        if (maskTextSelector) {\n            if (node.matches(maskTextSelector)) {\n                return true;\n            }\n        }\n        return needMaskingText(node.parentNode, maskTextClass, maskTextSelector, unmaskTextSelector);\n    }\n    if (node.nodeType === node.TEXT_NODE) {\n        return needMaskingText(node.parentNode, maskTextClass, maskTextSelector, unmaskTextSelector);\n    }\n    return needMaskingText(node.parentNode, maskTextClass, maskTextSelector, unmaskTextSelector);\n}\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\n    var win = iframeEl.contentWindow;\n    if (!win) {\n        return;\n    }\n    var fired = false;\n    var readyState;\n    try {\n        readyState = win.document.readyState;\n    }\n    catch (error) {\n        return;\n    }\n    if (readyState !== 'complete') {\n        var timer_1 = setTimeout(function () {\n            if (!fired) {\n                listener();\n                fired = true;\n            }\n        }, iframeLoadTimeout);\n        iframeEl.addEventListener('load', function () {\n            clearTimeout(timer_1);\n            fired = true;\n            listener();\n        });\n        return;\n    }\n    var blankUrl = 'about:blank';\n    if (win.location.href !== blankUrl ||\n        iframeEl.src === blankUrl ||\n        iframeEl.src === '') {\n        setTimeout(listener, 0);\n        return;\n    }\n    iframeEl.addEventListener('load', listener);\n}\nfunction serializeNode(n, options) {\n    var _a;\n    var doc = options.doc, blockClass = options.blockClass, blockSelector = options.blockSelector, unblockSelector = options.unblockSelector, maskTextClass = options.maskTextClass, maskTextSelector = options.maskTextSelector, unmaskTextSelector = options.unmaskTextSelector, inlineStylesheet = options.inlineStylesheet, maskInputSelector = options.maskInputSelector, unmaskInputSelector = options.unmaskInputSelector, _b = options.maskInputOptions, maskInputOptions = _b === void 0 ? {} : _b, maskTextFn = options.maskTextFn, maskInputFn = options.maskInputFn, _c = options.dataURLOptions, dataURLOptions = _c === void 0 ? {} : _c, inlineImages = options.inlineImages, recordCanvas = options.recordCanvas, keepIframeSrcFn = options.keepIframeSrcFn;\n    var rootId;\n    if (doc.__sn) {\n        var docId = doc.__sn.id;\n        rootId = docId === 1 ? undefined : docId;\n    }\n    switch (n.nodeType) {\n        case n.DOCUMENT_NODE:\n            if (n.compatMode !== 'CSS1Compat') {\n                return {\n                    type: NodeType.Document,\n                    childNodes: [],\n                    compatMode: n.compatMode,\n                    rootId: rootId\n                };\n            }\n            else {\n                return {\n                    type: NodeType.Document,\n                    childNodes: [],\n                    rootId: rootId\n                };\n            }\n        case n.DOCUMENT_TYPE_NODE:\n            return {\n                type: NodeType.DocumentType,\n                name: n.name,\n                publicId: n.publicId,\n                systemId: n.systemId,\n                rootId: rootId\n            };\n        case n.ELEMENT_NODE:\n            var needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\n            var tagName = getValidTagName(n);\n            var attributes_1 = {};\n            for (var _i = 0, _d = Array.from(n.attributes); _i < _d.length; _i++) {\n                var _e = _d[_i], name_1 = _e.name, value = _e.value;\n                attributes_1[name_1] = transformAttribute(doc, tagName, name_1, value);\n            }\n            if (tagName === 'link' && inlineStylesheet) {\n                var stylesheet = Array.from(doc.styleSheets).find(function (s) {\n                    return s.href === n.href;\n                });\n                var cssText = null;\n                if (stylesheet) {\n                    cssText = getCssRulesString(stylesheet);\n                }\n                if (cssText) {\n                    delete attributes_1.rel;\n                    delete attributes_1.href;\n                    attributes_1._cssText = absoluteToStylesheet(cssText, stylesheet.href);\n                }\n            }\n            if (tagName === 'style' &&\n                n.sheet &&\n                !(n.innerText ||\n                    n.textContent ||\n                    '').trim().length) {\n                var cssText = getCssRulesString(n.sheet);\n                if (cssText) {\n                    attributes_1._cssText = absoluteToStylesheet(cssText, getHref());\n                }\n            }\n            if (tagName === 'input' ||\n                tagName === 'textarea' ||\n                tagName === 'select') {\n                var value = n.value;\n                if (attributes_1.type !== 'radio' &&\n                    attributes_1.type !== 'checkbox' &&\n                    attributes_1.type !== 'submit' &&\n                    attributes_1.type !== 'button' &&\n                    value) {\n                    attributes_1.value = maskInputValue({\n                        input: n,\n                        type: attributes_1.type,\n                        tagName: tagName,\n                        value: value,\n                        maskInputSelector: maskInputSelector,\n                        unmaskInputSelector: unmaskInputSelector,\n                        maskInputOptions: maskInputOptions,\n                        maskInputFn: maskInputFn\n                    });\n                }\n                else if (n.checked) {\n                    attributes_1.checked = n.checked;\n                }\n            }\n            if (tagName === 'option') {\n                if (n.selected && !maskInputOptions['select']) {\n                    attributes_1.selected = true;\n                }\n                else {\n                    delete attributes_1.selected;\n                }\n            }\n            if (tagName === 'canvas' && recordCanvas) {\n                if (n.__context === '2d') {\n                    if (!is2DCanvasBlank(n)) {\n                        attributes_1.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n                    }\n                }\n                else if (!('__context' in n)) {\n                    var canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n                    var blankCanvas = document.createElement('canvas');\n                    blankCanvas.width = n.width;\n                    blankCanvas.height = n.height;\n                    var blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n                    if (canvasDataURL !== blankCanvasDataURL) {\n                        attributes_1.rr_dataURL = canvasDataURL;\n                    }\n                }\n            }\n            if (tagName === 'img' && inlineImages) {\n                if (!canvasService) {\n                    canvasService = doc.createElement('canvas');\n                    canvasCtx = canvasService.getContext('2d');\n                }\n                var image_1 = n;\n                var oldValue_1 = image_1.crossOrigin;\n                image_1.crossOrigin = 'anonymous';\n                var recordInlineImage = function () {\n                    try {\n                        canvasService.width = image_1.naturalWidth;\n                        canvasService.height = image_1.naturalHeight;\n                        canvasCtx.drawImage(image_1, 0, 0);\n                        attributes_1.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n                    }\n                    catch (err) {\n                        console.warn(\"Cannot inline img src=\" + image_1.currentSrc + \"! Error: \" + err);\n                    }\n                    oldValue_1\n                        ? (attributes_1.crossOrigin = oldValue_1)\n                        : delete attributes_1.crossOrigin;\n                };\n                if (image_1.complete && image_1.naturalWidth !== 0)\n                    recordInlineImage();\n                else\n                    image_1.onload = recordInlineImage;\n            }\n            if (tagName === 'audio' || tagName === 'video') {\n                attributes_1.rr_mediaState = n.paused\n                    ? 'paused'\n                    : 'played';\n                attributes_1.rr_mediaCurrentTime = n.currentTime;\n            }\n            if (n.scrollLeft) {\n                attributes_1.rr_scrollLeft = n.scrollLeft;\n            }\n            if (n.scrollTop) {\n                attributes_1.rr_scrollTop = n.scrollTop;\n            }\n            if (needBlock) {\n                var _f = n.getBoundingClientRect(), width = _f.width, height = _f.height;\n                attributes_1 = {\n                    \"class\": attributes_1[\"class\"],\n                    rr_width: width + \"px\",\n                    rr_height: height + \"px\"\n                };\n            }\n            if (tagName === 'iframe' && !keepIframeSrcFn(attributes_1.src)) {\n                if (!n.contentDocument) {\n                    attributes_1.rr_src = attributes_1.src;\n                }\n                delete attributes_1.src;\n            }\n            return {\n                type: NodeType.Element,\n                tagName: tagName,\n                attributes: attributes_1,\n                childNodes: [],\n                isSVG: isSVGElement(n) || undefined,\n                needBlock: needBlock,\n                rootId: rootId\n            };\n        case n.TEXT_NODE:\n            var parentTagName = n.parentNode && n.parentNode.tagName;\n            var textContent = n.textContent;\n            var isStyle = parentTagName === 'STYLE' ? true : undefined;\n            var isScript = parentTagName === 'SCRIPT' ? true : undefined;\n            if (isStyle && textContent) {\n                try {\n                    if (n.nextSibling || n.previousSibling) {\n                    }\n                    else if ((_a = n.parentNode.sheet) === null || _a === void 0 ? void 0 : _a.cssRules) {\n                        textContent = stringifyStyleSheet(n.parentNode.sheet);\n                    }\n                }\n                catch (err) {\n                    console.warn(\"Cannot get CSS styles from text's parentNode. Error: \" + err, n);\n                }\n                textContent = absoluteToStylesheet(textContent, getHref());\n            }\n            if (isScript) {\n                textContent = 'SCRIPT_PLACEHOLDER';\n            }\n            if (!isStyle &&\n                !isScript &&\n                needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextSelector) &&\n                textContent) {\n                textContent = maskTextFn\n                    ? maskTextFn(textContent)\n                    : textContent.replace(/[\\S]/g, '*');\n            }\n            return {\n                type: NodeType.Text,\n                textContent: textContent || '',\n                isStyle: isStyle,\n                rootId: rootId\n            };\n        case n.CDATA_SECTION_NODE:\n            return {\n                type: NodeType.CDATA,\n                textContent: '',\n                rootId: rootId\n            };\n        case n.COMMENT_NODE:\n            return {\n                type: NodeType.Comment,\n                textContent: n.textContent || '',\n                rootId: rootId\n            };\n        default:\n            return false;\n    }\n}\nfunction lowerIfExists(maybeAttr) {\n    if (maybeAttr === undefined) {\n        return '';\n    }\n    else {\n        return maybeAttr.toLowerCase();\n    }\n}\nfunction slimDOMExcluded(sn, slimDOMOptions) {\n    if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\n        return true;\n    }\n    else if (sn.type === NodeType.Element) {\n        if (slimDOMOptions.script &&\n            (sn.tagName === 'script' ||\n                (sn.tagName === 'link' &&\n                    sn.attributes.rel === 'preload' &&\n                    sn.attributes.as === 'script') ||\n                (sn.tagName === 'link' &&\n                    sn.attributes.rel === 'prefetch' &&\n                    typeof sn.attributes.href === 'string' &&\n                    sn.attributes.href.endsWith('.js')))) {\n            return true;\n        }\n        else if (slimDOMOptions.headFavicon &&\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\n                (sn.tagName === 'meta' &&\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\n            return true;\n        }\n        else if (sn.tagName === 'meta') {\n            if (slimDOMOptions.headMetaDescKeywords &&\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaSocial &&\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaRobots &&\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaHttpEquiv &&\n                sn.attributes['http-equiv'] !== undefined) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaAuthorship &&\n                (lowerIfExists(sn.attributes.name) === 'author' ||\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaVerification &&\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction serializeNodeWithId(n, options) {\n    var doc = options.doc, map = options.map, blockClass = options.blockClass, blockSelector = options.blockSelector, unblockSelector = options.unblockSelector, maskTextClass = options.maskTextClass, maskTextSelector = options.maskTextSelector, unmaskTextSelector = options.unmaskTextSelector, _a = options.skipChild, skipChild = _a === void 0 ? false : _a, _b = options.inlineStylesheet, inlineStylesheet = _b === void 0 ? true : _b, maskInputSelector = options.maskInputSelector, unmaskInputSelector = options.unmaskInputSelector, _c = options.maskInputOptions, maskInputOptions = _c === void 0 ? {} : _c, maskTextFn = options.maskTextFn, maskInputFn = options.maskInputFn, slimDOMOptions = options.slimDOMOptions, _d = options.dataURLOptions, dataURLOptions = _d === void 0 ? {} : _d, _e = options.inlineImages, inlineImages = _e === void 0 ? false : _e, _f = options.recordCanvas, recordCanvas = _f === void 0 ? false : _f, onSerialize = options.onSerialize, onIframeLoad = options.onIframeLoad, _g = options.iframeLoadTimeout, iframeLoadTimeout = _g === void 0 ? 5000 : _g, _h = options.keepIframeSrcFn, keepIframeSrcFn = _h === void 0 ? function () { return false; } : _h;\n    var _j = options.preserveWhiteSpace, preserveWhiteSpace = _j === void 0 ? true : _j;\n    var _serializedNode = serializeNode(n, {\n        doc: doc,\n        blockClass: blockClass,\n        blockSelector: blockSelector,\n        unblockSelector: unblockSelector,\n        maskTextClass: maskTextClass,\n        maskTextSelector: maskTextSelector,\n        unmaskTextSelector: unmaskTextSelector,\n        inlineStylesheet: inlineStylesheet,\n        maskInputSelector: maskInputSelector,\n        unmaskInputSelector: unmaskInputSelector,\n        maskInputOptions: maskInputOptions,\n        maskTextFn: maskTextFn,\n        maskInputFn: maskInputFn,\n        dataURLOptions: dataURLOptions,\n        inlineImages: inlineImages,\n        recordCanvas: recordCanvas,\n        keepIframeSrcFn: keepIframeSrcFn\n    });\n    if (!_serializedNode) {\n        console.warn(n, 'not serialized');\n        return null;\n    }\n    var id;\n    if ('__sn' in n) {\n        id = n.__sn.id;\n    }\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\n        (!preserveWhiteSpace &&\n            _serializedNode.type === NodeType.Text &&\n            !_serializedNode.isStyle &&\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\n        id = IGNORED_NODE;\n    }\n    else {\n        id = genId();\n    }\n    var serializedNode = Object.assign(_serializedNode, { id: id });\n    n.__sn = serializedNode;\n    if (id === IGNORED_NODE) {\n        return null;\n    }\n    map[id] = n;\n    if (onSerialize) {\n        onSerialize(n);\n    }\n    var recordChild = !skipChild;\n    if (serializedNode.type === NodeType.Element) {\n        recordChild = recordChild && !serializedNode.needBlock;\n        delete serializedNode.needBlock;\n        if (n.shadowRoot)\n            serializedNode.isShadowHost = true;\n    }\n    if ((serializedNode.type === NodeType.Document ||\n        serializedNode.type === NodeType.Element) &&\n        recordChild) {\n        if (slimDOMOptions.headWhitespace &&\n            _serializedNode.type === NodeType.Element &&\n            _serializedNode.tagName === 'head') {\n            preserveWhiteSpace = false;\n        }\n        var bypassOptions = {\n            doc: doc,\n            map: map,\n            blockClass: blockClass,\n            blockSelector: blockSelector,\n            unblockSelector: unblockSelector,\n            maskTextClass: maskTextClass,\n            maskTextSelector: maskTextSelector,\n            unmaskTextSelector: unmaskTextSelector,\n            skipChild: skipChild,\n            inlineStylesheet: inlineStylesheet,\n            maskInputSelector: maskInputSelector,\n            unmaskInputSelector: unmaskInputSelector,\n            maskInputOptions: maskInputOptions,\n            maskTextFn: maskTextFn,\n            maskInputFn: maskInputFn,\n            slimDOMOptions: slimDOMOptions,\n            dataURLOptions: dataURLOptions,\n            inlineImages: inlineImages,\n            recordCanvas: recordCanvas,\n            preserveWhiteSpace: preserveWhiteSpace,\n            onSerialize: onSerialize,\n            onIframeLoad: onIframeLoad,\n            iframeLoadTimeout: iframeLoadTimeout,\n            keepIframeSrcFn: keepIframeSrcFn\n        };\n        for (var _i = 0, _k = Array.from(n.childNodes); _i < _k.length; _i++) {\n            var childN = _k[_i];\n            var serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n            if (serializedChildNode) {\n                serializedNode.childNodes.push(serializedChildNode);\n            }\n        }\n        if (isElement(n) && n.shadowRoot) {\n            for (var _l = 0, _m = Array.from(n.shadowRoot.childNodes); _l < _m.length; _l++) {\n                var childN = _m[_l];\n                var serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n                if (serializedChildNode) {\n                    serializedChildNode.isShadow = true;\n                    serializedNode.childNodes.push(serializedChildNode);\n                }\n            }\n        }\n    }\n    if (n.parentNode && isShadowRoot(n.parentNode)) {\n        serializedNode.isShadow = true;\n    }\n    if (serializedNode.type === NodeType.Element &&\n        serializedNode.tagName === 'iframe') {\n        onceIframeLoaded(n, function () {\n            var iframeDoc = n.contentDocument;\n            if (iframeDoc && onIframeLoad) {\n                var serializedIframeNode = serializeNodeWithId(iframeDoc, {\n                    doc: iframeDoc,\n                    map: map,\n                    blockClass: blockClass,\n                    blockSelector: blockSelector,\n                    unblockSelector: unblockSelector,\n                    maskTextClass: maskTextClass,\n                    maskTextSelector: maskTextSelector,\n                    unmaskTextSelector: unmaskTextSelector,\n                    skipChild: false,\n                    inlineStylesheet: inlineStylesheet,\n                    maskInputSelector: maskInputSelector,\n                    unmaskInputSelector: unmaskInputSelector,\n                    maskInputOptions: maskInputOptions,\n                    maskTextFn: maskTextFn,\n                    maskInputFn: maskInputFn,\n                    slimDOMOptions: slimDOMOptions,\n                    dataURLOptions: dataURLOptions,\n                    inlineImages: inlineImages,\n                    recordCanvas: recordCanvas,\n                    preserveWhiteSpace: preserveWhiteSpace,\n                    onSerialize: onSerialize,\n                    onIframeLoad: onIframeLoad,\n                    iframeLoadTimeout: iframeLoadTimeout,\n                    keepIframeSrcFn: keepIframeSrcFn\n                });\n                if (serializedIframeNode) {\n                    onIframeLoad(n, serializedIframeNode);\n                }\n            }\n        }, iframeLoadTimeout);\n    }\n    return serializedNode;\n}\nfunction snapshot(n, options) {\n    var _a = options || {}, _b = _a.blockClass, blockClass = _b === void 0 ? 'rr-block' : _b, _c = _a.blockSelector, blockSelector = _c === void 0 ? null : _c, _d = _a.unblockSelector, unblockSelector = _d === void 0 ? null : _d, _e = _a.maskTextClass, maskTextClass = _e === void 0 ? 'rr-mask' : _e, _f = _a.maskTextSelector, maskTextSelector = _f === void 0 ? null : _f, _g = _a.unmaskTextSelector, unmaskTextSelector = _g === void 0 ? null : _g, _h = _a.inlineStylesheet, inlineStylesheet = _h === void 0 ? true : _h, _j = _a.inlineImages, inlineImages = _j === void 0 ? false : _j, _k = _a.recordCanvas, recordCanvas = _k === void 0 ? false : _k, _l = _a.maskInputSelector, maskInputSelector = _l === void 0 ? null : _l, _m = _a.unmaskInputSelector, unmaskInputSelector = _m === void 0 ? null : _m, _o = _a.maskAllInputs, maskAllInputs = _o === void 0 ? false : _o, maskTextFn = _a.maskTextFn, maskInputFn = _a.maskInputFn, _p = _a.slimDOM, slimDOM = _p === void 0 ? false : _p, dataURLOptions = _a.dataURLOptions, preserveWhiteSpace = _a.preserveWhiteSpace, onSerialize = _a.onSerialize, onIframeLoad = _a.onIframeLoad, iframeLoadTimeout = _a.iframeLoadTimeout, _q = _a.keepIframeSrcFn, keepIframeSrcFn = _q === void 0 ? function () { return false; } : _q;\n    var idNodeMap = {};\n    var maskInputOptions = maskAllInputs === true\n        ? {\n            color: true,\n            date: true,\n            'datetime-local': true,\n            email: true,\n            month: true,\n            number: true,\n            range: true,\n            search: true,\n            tel: true,\n            text: true,\n            time: true,\n            url: true,\n            week: true,\n            textarea: true,\n            select: true,\n            password: true\n        }\n        : maskAllInputs === false\n            ? {\n                password: true\n            }\n            : maskAllInputs;\n    var slimDOMOptions = slimDOM === true || slimDOM === 'all'\n        ?\n            {\n                script: true,\n                comment: true,\n                headFavicon: true,\n                headWhitespace: true,\n                headMetaDescKeywords: slimDOM === 'all',\n                headMetaSocial: true,\n                headMetaRobots: true,\n                headMetaHttpEquiv: true,\n                headMetaAuthorship: true,\n                headMetaVerification: true\n            }\n        : slimDOM === false\n            ? {}\n            : slimDOM;\n    return [\n        serializeNodeWithId(n, {\n            doc: n,\n            map: idNodeMap,\n            blockClass: blockClass,\n            blockSelector: blockSelector,\n            unblockSelector: unblockSelector,\n            maskTextClass: maskTextClass,\n            maskTextSelector: maskTextSelector,\n            unmaskTextSelector: unmaskTextSelector,\n            skipChild: false,\n            inlineStylesheet: inlineStylesheet,\n            maskInputSelector: maskInputSelector,\n            unmaskInputSelector: unmaskInputSelector,\n            maskInputOptions: maskInputOptions,\n            maskTextFn: maskTextFn,\n            maskInputFn: maskInputFn,\n            slimDOMOptions: slimDOMOptions,\n            dataURLOptions: dataURLOptions,\n            inlineImages: inlineImages,\n            recordCanvas: recordCanvas,\n            preserveWhiteSpace: preserveWhiteSpace,\n            onSerialize: onSerialize,\n            onIframeLoad: onIframeLoad,\n            iframeLoadTimeout: iframeLoadTimeout,\n            keepIframeSrcFn: keepIframeSrcFn\n        }),\n        idNodeMap,\n    ];\n}\n\nvar commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\nfunction parse(css, options) {\n    if (options === void 0) { options = {}; }\n    var lineno = 1;\n    var column = 1;\n    function updatePosition(str) {\n        var lines = str.match(/\\n/g);\n        if (lines) {\n            lineno += lines.length;\n        }\n        var i = str.lastIndexOf('\\n');\n        column = i === -1 ? column + str.length : str.length - i;\n    }\n    function position() {\n        var start = { line: lineno, column: column };\n        return function (node) {\n            node.position = new Position(start);\n            whitespace();\n            return node;\n        };\n    }\n    var Position = (function () {\n        function Position(start) {\n            this.start = start;\n            this.end = { line: lineno, column: column };\n            this.source = options.source;\n        }\n        return Position;\n    }());\n    Position.prototype.content = css;\n    var errorsList = [];\n    function error(msg) {\n        var err = new Error(options.source + ':' + lineno + ':' + column + ': ' + msg);\n        err.reason = msg;\n        err.filename = options.source;\n        err.line = lineno;\n        err.column = column;\n        err.source = css;\n        if (options.silent) {\n            errorsList.push(err);\n        }\n        else {\n            throw err;\n        }\n    }\n    function stylesheet() {\n        var rulesList = rules();\n        return {\n            type: 'stylesheet',\n            stylesheet: {\n                source: options.source,\n                rules: rulesList,\n                parsingErrors: errorsList\n            }\n        };\n    }\n    function open() {\n        return match(/^{\\s*/);\n    }\n    function close() {\n        return match(/^}/);\n    }\n    function rules() {\n        var node;\n        var rules = [];\n        whitespace();\n        comments(rules);\n        while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\n            if (node !== false) {\n                rules.push(node);\n                comments(rules);\n            }\n        }\n        return rules;\n    }\n    function match(re) {\n        var m = re.exec(css);\n        if (!m) {\n            return;\n        }\n        var str = m[0];\n        updatePosition(str);\n        css = css.slice(str.length);\n        return m;\n    }\n    function whitespace() {\n        match(/^\\s*/);\n    }\n    function comments(rules) {\n        if (rules === void 0) { rules = []; }\n        var c;\n        while ((c = comment())) {\n            if (c !== false) {\n                rules.push(c);\n            }\n            c = comment();\n        }\n        return rules;\n    }\n    function comment() {\n        var pos = position();\n        if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\n            return;\n        }\n        var i = 2;\n        while ('' !== css.charAt(i) &&\n            ('*' !== css.charAt(i) || '/' !== css.charAt(i + 1))) {\n            ++i;\n        }\n        i += 2;\n        if ('' === css.charAt(i - 1)) {\n            return error('End of comment missing');\n        }\n        var str = css.slice(2, i - 2);\n        column += 2;\n        updatePosition(str);\n        css = css.slice(i);\n        column += 2;\n        return pos({\n            type: 'comment',\n            comment: str\n        });\n    }\n    function selector() {\n        var m = match(/^([^{]+)/);\n        if (!m) {\n            return;\n        }\n        return trim(m[0])\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, function (m) {\n            return m.replace(/,/g, '\\u200C');\n        })\n            .split(/\\s*(?![^(]*\\)),\\s*/)\n            .map(function (s) {\n            return s.replace(/\\u200C/g, ',');\n        });\n    }\n    function declaration() {\n        var pos = position();\n        var propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\n        if (!propMatch) {\n            return;\n        }\n        var prop = trim(propMatch[0]);\n        if (!match(/^:\\s*/)) {\n            return error(\"property missing ':'\");\n        }\n        var val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\n        var ret = pos({\n            type: 'declaration',\n            property: prop.replace(commentre, ''),\n            value: val ? trim(val[0]).replace(commentre, '') : ''\n        });\n        match(/^[;\\s]*/);\n        return ret;\n    }\n    function declarations() {\n        var decls = [];\n        if (!open()) {\n            return error(\"missing '{'\");\n        }\n        comments(decls);\n        var decl;\n        while ((decl = declaration())) {\n            if (decl !== false) {\n                decls.push(decl);\n                comments(decls);\n            }\n            decl = declaration();\n        }\n        if (!close()) {\n            return error(\"missing '}'\");\n        }\n        return decls;\n    }\n    function keyframe() {\n        var m;\n        var vals = [];\n        var pos = position();\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\n            vals.push(m[1]);\n            match(/^,\\s*/);\n        }\n        if (!vals.length) {\n            return;\n        }\n        return pos({\n            type: 'keyframe',\n            values: vals,\n            declarations: declarations()\n        });\n    }\n    function atkeyframes() {\n        var pos = position();\n        var m = match(/^@([-\\w]+)?keyframes\\s*/);\n        if (!m) {\n            return;\n        }\n        var vendor = m[1];\n        m = match(/^([-\\w]+)\\s*/);\n        if (!m) {\n            return error('@keyframes missing name');\n        }\n        var name = m[1];\n        if (!open()) {\n            return error(\"@keyframes missing '{'\");\n        }\n        var frame;\n        var frames = comments();\n        while ((frame = keyframe())) {\n            frames.push(frame);\n            frames = frames.concat(comments());\n        }\n        if (!close()) {\n            return error(\"@keyframes missing '}'\");\n        }\n        return pos({\n            type: 'keyframes',\n            name: name,\n            vendor: vendor,\n            keyframes: frames\n        });\n    }\n    function atsupports() {\n        var pos = position();\n        var m = match(/^@supports *([^{]+)/);\n        if (!m) {\n            return;\n        }\n        var supports = trim(m[1]);\n        if (!open()) {\n            return error(\"@supports missing '{'\");\n        }\n        var style = comments().concat(rules());\n        if (!close()) {\n            return error(\"@supports missing '}'\");\n        }\n        return pos({\n            type: 'supports',\n            supports: supports,\n            rules: style\n        });\n    }\n    function athost() {\n        var pos = position();\n        var m = match(/^@host\\s*/);\n        if (!m) {\n            return;\n        }\n        if (!open()) {\n            return error(\"@host missing '{'\");\n        }\n        var style = comments().concat(rules());\n        if (!close()) {\n            return error(\"@host missing '}'\");\n        }\n        return pos({\n            type: 'host',\n            rules: style\n        });\n    }\n    function atmedia() {\n        var pos = position();\n        var m = match(/^@media *([^{]+)/);\n        if (!m) {\n            return;\n        }\n        var media = trim(m[1]);\n        if (!open()) {\n            return error(\"@media missing '{'\");\n        }\n        var style = comments().concat(rules());\n        if (!close()) {\n            return error(\"@media missing '}'\");\n        }\n        return pos({\n            type: 'media',\n            media: media,\n            rules: style\n        });\n    }\n    function atcustommedia() {\n        var pos = position();\n        var m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\n        if (!m) {\n            return;\n        }\n        return pos({\n            type: 'custom-media',\n            name: trim(m[1]),\n            media: trim(m[2])\n        });\n    }\n    function atpage() {\n        var pos = position();\n        var m = match(/^@page */);\n        if (!m) {\n            return;\n        }\n        var sel = selector() || [];\n        if (!open()) {\n            return error(\"@page missing '{'\");\n        }\n        var decls = comments();\n        var decl;\n        while ((decl = declaration())) {\n            decls.push(decl);\n            decls = decls.concat(comments());\n        }\n        if (!close()) {\n            return error(\"@page missing '}'\");\n        }\n        return pos({\n            type: 'page',\n            selectors: sel,\n            declarations: decls\n        });\n    }\n    function atdocument() {\n        var pos = position();\n        var m = match(/^@([-\\w]+)?document *([^{]+)/);\n        if (!m) {\n            return;\n        }\n        var vendor = trim(m[1]);\n        var doc = trim(m[2]);\n        if (!open()) {\n            return error(\"@document missing '{'\");\n        }\n        var style = comments().concat(rules());\n        if (!close()) {\n            return error(\"@document missing '}'\");\n        }\n        return pos({\n            type: 'document',\n            document: doc,\n            vendor: vendor,\n            rules: style\n        });\n    }\n    function atfontface() {\n        var pos = position();\n        var m = match(/^@font-face\\s*/);\n        if (!m) {\n            return;\n        }\n        if (!open()) {\n            return error(\"@font-face missing '{'\");\n        }\n        var decls = comments();\n        var decl;\n        while ((decl = declaration())) {\n            decls.push(decl);\n            decls = decls.concat(comments());\n        }\n        if (!close()) {\n            return error(\"@font-face missing '}'\");\n        }\n        return pos({\n            type: 'font-face',\n            declarations: decls\n        });\n    }\n    var atimport = _compileAtrule('import');\n    var atcharset = _compileAtrule('charset');\n    var atnamespace = _compileAtrule('namespace');\n    function _compileAtrule(name) {\n        var re = new RegExp('^@' + name + '\\\\s*([^;]+);');\n        return function () {\n            var pos = position();\n            var m = match(re);\n            if (!m) {\n                return;\n            }\n            var ret = { type: name };\n            ret[name] = m[1].trim();\n            return pos(ret);\n        };\n    }\n    function atrule() {\n        if (css[0] !== '@') {\n            return;\n        }\n        return (atkeyframes() ||\n            atmedia() ||\n            atcustommedia() ||\n            atsupports() ||\n            atimport() ||\n            atcharset() ||\n            atnamespace() ||\n            atdocument() ||\n            atpage() ||\n            athost() ||\n            atfontface());\n    }\n    function rule() {\n        var pos = position();\n        var sel = selector();\n        if (!sel) {\n            return error('selector missing');\n        }\n        comments();\n        return pos({\n            type: 'rule',\n            selectors: sel,\n            declarations: declarations()\n        });\n    }\n    return addParent(stylesheet());\n}\nfunction trim(str) {\n    return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\n}\nfunction addParent(obj, parent) {\n    var isNode = obj && typeof obj.type === 'string';\n    var childParent = isNode ? obj : parent;\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var k = _a[_i];\n        var value = obj[k];\n        if (Array.isArray(value)) {\n            value.forEach(function (v) {\n                addParent(v, childParent);\n            });\n        }\n        else if (value && typeof value === 'object') {\n            addParent(value, childParent);\n        }\n    }\n    if (isNode) {\n        Object.defineProperty(obj, 'parent', {\n            configurable: true,\n            writable: true,\n            enumerable: false,\n            value: parent || null\n        });\n    }\n    return obj;\n}\n\nvar tagMap = {\n    script: 'noscript',\n    altglyph: 'altGlyph',\n    altglyphdef: 'altGlyphDef',\n    altglyphitem: 'altGlyphItem',\n    animatecolor: 'animateColor',\n    animatemotion: 'animateMotion',\n    animatetransform: 'animateTransform',\n    clippath: 'clipPath',\n    feblend: 'feBlend',\n    fecolormatrix: 'feColorMatrix',\n    fecomponenttransfer: 'feComponentTransfer',\n    fecomposite: 'feComposite',\n    feconvolvematrix: 'feConvolveMatrix',\n    fediffuselighting: 'feDiffuseLighting',\n    fedisplacementmap: 'feDisplacementMap',\n    fedistantlight: 'feDistantLight',\n    fedropshadow: 'feDropShadow',\n    feflood: 'feFlood',\n    fefunca: 'feFuncA',\n    fefuncb: 'feFuncB',\n    fefuncg: 'feFuncG',\n    fefuncr: 'feFuncR',\n    fegaussianblur: 'feGaussianBlur',\n    feimage: 'feImage',\n    femerge: 'feMerge',\n    femergenode: 'feMergeNode',\n    femorphology: 'feMorphology',\n    feoffset: 'feOffset',\n    fepointlight: 'fePointLight',\n    fespecularlighting: 'feSpecularLighting',\n    fespotlight: 'feSpotLight',\n    fetile: 'feTile',\n    feturbulence: 'feTurbulence',\n    foreignobject: 'foreignObject',\n    glyphref: 'glyphRef',\n    lineargradient: 'linearGradient',\n    radialgradient: 'radialGradient'\n};\nfunction getTagName(n) {\n    var tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\n    if (tagName === 'link' && n.attributes._cssText) {\n        tagName = 'style';\n    }\n    return tagName;\n}\nfunction escapeRegExp(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\nvar HOVER_SELECTOR = /([^\\\\]):hover/;\nvar HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, 'g');\nfunction addHoverClass(cssText, cache) {\n    var cachedStyle = cache === null || cache === void 0 ? void 0 : cache.stylesWithHoverClass.get(cssText);\n    if (cachedStyle)\n        return cachedStyle;\n    var ast = parse(cssText, {\n        silent: true\n    });\n    if (!ast.stylesheet) {\n        return cssText;\n    }\n    var selectors = [];\n    ast.stylesheet.rules.forEach(function (rule) {\n        if ('selectors' in rule) {\n            (rule.selectors || []).forEach(function (selector) {\n                if (HOVER_SELECTOR.test(selector)) {\n                    selectors.push(selector);\n                }\n            });\n        }\n    });\n    if (selectors.length === 0) {\n        return cssText;\n    }\n    var selectorMatcher = new RegExp(selectors\n        .filter(function (selector, index) { return selectors.indexOf(selector) === index; })\n        .sort(function (a, b) { return b.length - a.length; })\n        .map(function (selector) {\n        return escapeRegExp(selector);\n    })\n        .join('|'), 'g');\n    var result = cssText.replace(selectorMatcher, function (selector) {\n        var newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, '$1.\\\\:hover');\n        return selector + \", \" + newSelector;\n    });\n    cache === null || cache === void 0 ? void 0 : cache.stylesWithHoverClass.set(cssText, result);\n    return result;\n}\nfunction createCache() {\n    var stylesWithHoverClass = new Map();\n    return {\n        stylesWithHoverClass: stylesWithHoverClass\n    };\n}\nfunction buildNode(n, options) {\n    var doc = options.doc, hackCss = options.hackCss, cache = options.cache;\n    switch (n.type) {\n        case NodeType.Document:\n            return doc.implementation.createDocument(null, '', null);\n        case NodeType.DocumentType:\n            return doc.implementation.createDocumentType(n.name || 'html', n.publicId, n.systemId);\n        case NodeType.Element:\n            var tagName = getTagName(n);\n            var node_1;\n            if (n.isSVG) {\n                node_1 = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\n            }\n            else {\n                node_1 = doc.createElement(tagName);\n            }\n            var _loop_1 = function (name_1) {\n                if (!n.attributes.hasOwnProperty(name_1)) {\n                    return \"continue\";\n                }\n                var value = n.attributes[name_1];\n                if (tagName === 'option' && name_1 === 'selected' && value === false) {\n                    return \"continue\";\n                }\n                value =\n                    typeof value === 'boolean' || typeof value === 'number' ? '' : value;\n                if (!name_1.startsWith('rr_')) {\n                    var isTextarea = tagName === 'textarea' && name_1 === 'value';\n                    var isRemoteOrDynamicCss = tagName === 'style' && name_1 === '_cssText';\n                    if (isRemoteOrDynamicCss && hackCss) {\n                        value = addHoverClass(value, cache);\n                    }\n                    if (isTextarea || isRemoteOrDynamicCss) {\n                        var child = doc.createTextNode(value);\n                        for (var _i = 0, _a = Array.from(node_1.childNodes); _i < _a.length; _i++) {\n                            var c = _a[_i];\n                            if (c.nodeType === node_1.TEXT_NODE) {\n                                node_1.removeChild(c);\n                            }\n                        }\n                        node_1.appendChild(child);\n                        return \"continue\";\n                    }\n                    try {\n                        if (n.isSVG && name_1 === 'xlink:href') {\n                            node_1.setAttributeNS('http://www.w3.org/1999/xlink', name_1, value);\n                        }\n                        else if (name_1 === 'onload' ||\n                            name_1 === 'onclick' ||\n                            name_1.substring(0, 7) === 'onmouse') {\n                            node_1.setAttribute('_' + name_1, value);\n                        }\n                        else if (tagName === 'meta' &&\n                            n.attributes['http-equiv'] === 'Content-Security-Policy' &&\n                            name_1 === 'content') {\n                            node_1.setAttribute('csp-content', value);\n                            return \"continue\";\n                        }\n                        else if (tagName === 'link' &&\n                            n.attributes.rel === 'preload' &&\n                            n.attributes.as === 'script') {\n                        }\n                        else if (tagName === 'link' &&\n                            n.attributes.rel === 'prefetch' &&\n                            typeof n.attributes.href === 'string' &&\n                            n.attributes.href.endsWith('.js')) {\n                        }\n                        else if (tagName === 'img' &&\n                            n.attributes.srcset &&\n                            n.attributes.rr_dataURL) {\n                            node_1.setAttribute('rrweb-original-srcset', n.attributes.srcset);\n                        }\n                        else {\n                            node_1.setAttribute(name_1, value);\n                        }\n                    }\n                    catch (error) {\n                    }\n                }\n                else {\n                    if (tagName === 'canvas' && name_1 === 'rr_dataURL') {\n                        var image_1 = document.createElement('img');\n                        image_1.src = value;\n                        image_1.onload = function () {\n                            var ctx = node_1.getContext('2d');\n                            if (ctx) {\n                                ctx.drawImage(image_1, 0, 0, image_1.width, image_1.height);\n                            }\n                        };\n                    }\n                    else if (tagName === 'img' && name_1 === 'rr_dataURL') {\n                        var image = node_1;\n                        if (!image.currentSrc.startsWith('data:')) {\n                            image.setAttribute('rrweb-original-src', n.attributes.src);\n                            image.src = value;\n                        }\n                    }\n                    if (name_1 === 'rr_width') {\n                        node_1.style.width = value;\n                    }\n                    else if (name_1 === 'rr_height') {\n                        node_1.style.height = value;\n                    }\n                    else if (name_1 === 'rr_mediaCurrentTime') {\n                        node_1.currentTime = n.attributes\n                            .rr_mediaCurrentTime;\n                    }\n                    else if (name_1 === 'rr_mediaState') {\n                        switch (value) {\n                            case 'played':\n                                node_1\n                                    .play()[\"catch\"](function (e) { return console.warn('media playback error', e); });\n                                break;\n                            case 'paused':\n                                node_1.pause();\n                                break;\n                        }\n                    }\n                }\n            };\n            for (var name_1 in n.attributes) {\n                _loop_1(name_1);\n            }\n            if (n.isShadowHost) {\n                if (!node_1.shadowRoot) {\n                    node_1.attachShadow({ mode: 'open' });\n                }\n                else {\n                    while (node_1.shadowRoot.firstChild) {\n                        node_1.shadowRoot.removeChild(node_1.shadowRoot.firstChild);\n                    }\n                }\n            }\n            return node_1;\n        case NodeType.Text:\n            return doc.createTextNode(n.isStyle && hackCss\n                ? addHoverClass(n.textContent, cache)\n                : n.textContent);\n        case NodeType.CDATA:\n            return doc.createCDATASection(n.textContent);\n        case NodeType.Comment:\n            return doc.createComment(n.textContent);\n        default:\n            return null;\n    }\n}\nfunction buildNodeWithSN(n, options) {\n    var doc = options.doc, map = options.map, _a = options.skipChild, skipChild = _a === void 0 ? false : _a, _b = options.hackCss, hackCss = _b === void 0 ? true : _b, afterAppend = options.afterAppend, cache = options.cache;\n    var node = buildNode(n, { doc: doc, hackCss: hackCss, cache: cache });\n    if (!node) {\n        return null;\n    }\n    if (n.rootId) {\n        console.assert(map[n.rootId] === doc, 'Target document should has the same root id.');\n    }\n    if (n.type === NodeType.Document) {\n        doc.close();\n        doc.open();\n        if (n.compatMode === 'BackCompat' &&\n            n.childNodes &&\n            n.childNodes[0].type !== NodeType.DocumentType) {\n            if (n.childNodes[0].type === NodeType.Element &&\n                'xmlns' in n.childNodes[0].attributes &&\n                n.childNodes[0].attributes.xmlns === 'http://www.w3.org/1999/xhtml') {\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">');\n            }\n            else {\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">');\n            }\n        }\n        node = doc;\n    }\n    node.__sn = n;\n    map[n.id] = node;\n    if ((n.type === NodeType.Document || n.type === NodeType.Element) &&\n        !skipChild) {\n        for (var _i = 0, _c = n.childNodes; _i < _c.length; _i++) {\n            var childN = _c[_i];\n            var childNode = buildNodeWithSN(childN, {\n                doc: doc,\n                map: map,\n                skipChild: false,\n                hackCss: hackCss,\n                afterAppend: afterAppend,\n                cache: cache\n            });\n            if (!childNode) {\n                console.warn('Failed to rebuild', childN);\n                continue;\n            }\n            if (childN.isShadow && isElement(node) && node.shadowRoot) {\n                node.shadowRoot.appendChild(childNode);\n            }\n            else {\n                node.appendChild(childNode);\n            }\n            if (afterAppend) {\n                afterAppend(childNode);\n            }\n        }\n    }\n    return node;\n}\nfunction visit(idNodeMap, onVisit) {\n    function walk(node) {\n        onVisit(node);\n    }\n    for (var key in idNodeMap) {\n        if (idNodeMap[key]) {\n            walk(idNodeMap[key]);\n        }\n    }\n}\nfunction handleScroll(node) {\n    var n = node.__sn;\n    if (n.type !== NodeType.Element) {\n        return;\n    }\n    var el = node;\n    for (var name_2 in n.attributes) {\n        if (!(n.attributes.hasOwnProperty(name_2) && name_2.startsWith('rr_'))) {\n            continue;\n        }\n        var value = n.attributes[name_2];\n        if (name_2 === 'rr_scrollLeft') {\n            el.scrollLeft = value;\n        }\n        if (name_2 === 'rr_scrollTop') {\n            el.scrollTop = value;\n        }\n    }\n}\nfunction rebuild(n, options) {\n    var doc = options.doc, onVisit = options.onVisit, _a = options.hackCss, hackCss = _a === void 0 ? true : _a, afterAppend = options.afterAppend, cache = options.cache;\n    var idNodeMap = {};\n    var node = buildNodeWithSN(n, {\n        doc: doc,\n        map: idNodeMap,\n        skipChild: false,\n        hackCss: hackCss,\n        afterAppend: afterAppend,\n        cache: cache\n    });\n    visit(idNodeMap, function (visitedNode) {\n        if (onVisit) {\n            onVisit(visitedNode);\n        }\n        handleScroll(visitedNode);\n    });\n    return [node, idNodeMap];\n}\n\nexport { IGNORED_NODE, NodeType, addHoverClass, buildNodeWithSN, createCache, is2DCanvasBlank, isElement, isShadowRoot, maskInputValue, needMaskingText, rebuild, serializeNodeWithId, snapshot, transformAttribute };\n","var EventType;\n(function (EventType) {\n    EventType[EventType[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n    EventType[EventType[\"Load\"] = 1] = \"Load\";\n    EventType[EventType[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n    EventType[EventType[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n    EventType[EventType[\"Meta\"] = 4] = \"Meta\";\n    EventType[EventType[\"Custom\"] = 5] = \"Custom\";\n    EventType[EventType[\"Plugin\"] = 6] = \"Plugin\";\n})(EventType || (EventType = {}));\nvar IncrementalSource;\n(function (IncrementalSource) {\n    IncrementalSource[IncrementalSource[\"Mutation\"] = 0] = \"Mutation\";\n    IncrementalSource[IncrementalSource[\"MouseMove\"] = 1] = \"MouseMove\";\n    IncrementalSource[IncrementalSource[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n    IncrementalSource[IncrementalSource[\"Scroll\"] = 3] = \"Scroll\";\n    IncrementalSource[IncrementalSource[\"ViewportResize\"] = 4] = \"ViewportResize\";\n    IncrementalSource[IncrementalSource[\"Input\"] = 5] = \"Input\";\n    IncrementalSource[IncrementalSource[\"TouchMove\"] = 6] = \"TouchMove\";\n    IncrementalSource[IncrementalSource[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n    IncrementalSource[IncrementalSource[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n    IncrementalSource[IncrementalSource[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n    IncrementalSource[IncrementalSource[\"Font\"] = 10] = \"Font\";\n    IncrementalSource[IncrementalSource[\"Log\"] = 11] = \"Log\";\n    IncrementalSource[IncrementalSource[\"Drag\"] = 12] = \"Drag\";\n    IncrementalSource[IncrementalSource[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n})(IncrementalSource || (IncrementalSource = {}));\nvar MouseInteractions;\n(function (MouseInteractions) {\n    MouseInteractions[MouseInteractions[\"MouseUp\"] = 0] = \"MouseUp\";\n    MouseInteractions[MouseInteractions[\"MouseDown\"] = 1] = \"MouseDown\";\n    MouseInteractions[MouseInteractions[\"Click\"] = 2] = \"Click\";\n    MouseInteractions[MouseInteractions[\"ContextMenu\"] = 3] = \"ContextMenu\";\n    MouseInteractions[MouseInteractions[\"DblClick\"] = 4] = \"DblClick\";\n    MouseInteractions[MouseInteractions[\"Focus\"] = 5] = \"Focus\";\n    MouseInteractions[MouseInteractions[\"Blur\"] = 6] = \"Blur\";\n    MouseInteractions[MouseInteractions[\"TouchStart\"] = 7] = \"TouchStart\";\n    MouseInteractions[MouseInteractions[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n    MouseInteractions[MouseInteractions[\"TouchEnd\"] = 9] = \"TouchEnd\";\n    MouseInteractions[MouseInteractions[\"TouchCancel\"] = 10] = \"TouchCancel\";\n})(MouseInteractions || (MouseInteractions = {}));\nvar CanvasContext;\n(function (CanvasContext) {\n    CanvasContext[CanvasContext[\"2D\"] = 0] = \"2D\";\n    CanvasContext[CanvasContext[\"WebGL\"] = 1] = \"WebGL\";\n    CanvasContext[CanvasContext[\"WebGL2\"] = 2] = \"WebGL2\";\n})(CanvasContext || (CanvasContext = {}));\nvar MediaInteractions;\n(function (MediaInteractions) {\n    MediaInteractions[MediaInteractions[\"Play\"] = 0] = \"Play\";\n    MediaInteractions[MediaInteractions[\"Pause\"] = 1] = \"Pause\";\n    MediaInteractions[MediaInteractions[\"Seeked\"] = 2] = \"Seeked\";\n    MediaInteractions[MediaInteractions[\"VolumeChange\"] = 3] = \"VolumeChange\";\n})(MediaInteractions || (MediaInteractions = {}));\nvar ReplayerEvents;\n(function (ReplayerEvents) {\n    ReplayerEvents[\"Start\"] = \"start\";\n    ReplayerEvents[\"Pause\"] = \"pause\";\n    ReplayerEvents[\"Resume\"] = \"resume\";\n    ReplayerEvents[\"Resize\"] = \"resize\";\n    ReplayerEvents[\"Finish\"] = \"finish\";\n    ReplayerEvents[\"FullsnapshotRebuilded\"] = \"fullsnapshot-rebuilded\";\n    ReplayerEvents[\"LoadStylesheetStart\"] = \"load-stylesheet-start\";\n    ReplayerEvents[\"LoadStylesheetEnd\"] = \"load-stylesheet-end\";\n    ReplayerEvents[\"SkipStart\"] = \"skip-start\";\n    ReplayerEvents[\"SkipEnd\"] = \"skip-end\";\n    ReplayerEvents[\"MouseInteraction\"] = \"mouse-interaction\";\n    ReplayerEvents[\"EventCast\"] = \"event-cast\";\n    ReplayerEvents[\"CustomEvent\"] = \"custom-event\";\n    ReplayerEvents[\"Flush\"] = \"flush\";\n    ReplayerEvents[\"StateChange\"] = \"state-change\";\n    ReplayerEvents[\"PlayBack\"] = \"play-back\";\n})(ReplayerEvents || (ReplayerEvents = {}));\n\nexport { CanvasContext, EventType, IncrementalSource, MediaInteractions, MouseInteractions, ReplayerEvents };\n","import { __values } from '../ext/tslib/tslib.es6.js';\nimport { IncrementalSource } from './types.js';\nimport { IGNORED_NODE, isShadowRoot, NodeType } from '../../rrweb-snapshot/es/rrweb-snapshot.js';\n\nfunction on(type, fn, target) {\n    if (target === void 0) { target = document; }\n    var options = { capture: true, passive: true };\n    target.addEventListener(type, fn, options);\n    return function () { return target.removeEventListener(type, fn, options); };\n}\nfunction createMirror() {\n    return {\n        map: {},\n        getId: function (n) {\n            if (!n || !n.__sn) {\n                return -1;\n            }\n            return n.__sn.id;\n        },\n        getNode: function (id) {\n            return this.map[id] || null;\n        },\n        removeNodeFromMap: function (n) {\n            var _this = this;\n            var id = n.__sn && n.__sn.id;\n            delete this.map[id];\n            if (n.childNodes) {\n                n.childNodes.forEach(function (child) {\n                    return _this.removeNodeFromMap(child);\n                });\n            }\n        },\n        has: function (id) {\n            return this.map.hasOwnProperty(id);\n        },\n        reset: function () {\n            this.map = {};\n        },\n    };\n}\nvar DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\n    '\\r\\n' +\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\n    '\\r\\n' +\n    'or you can use record.mirror to access the mirror instance during recording.';\nvar _mirror = {\n    map: {},\n    getId: function () {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return -1;\n    },\n    getNode: function () {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return null;\n    },\n    removeNodeFromMap: function () {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n    has: function () {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return false;\n    },\n    reset: function () {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n};\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\n    _mirror = new Proxy(_mirror, {\n        get: function (target, prop, receiver) {\n            if (prop === 'map') {\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n            }\n            return Reflect.get(target, prop, receiver);\n        },\n    });\n}\nfunction throttle(func, wait, options) {\n    if (options === void 0) { options = {}; }\n    var timeout = null;\n    var previous = 0;\n    return function (arg) {\n        var now = Date.now();\n        if (!previous && options.leading === false) {\n            previous = now;\n        }\n        var remaining = wait - (now - previous);\n        var context = this;\n        var args = arguments;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            previous = now;\n            func.apply(context, args);\n        }\n        else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(function () {\n                previous = options.leading === false ? 0 : Date.now();\n                timeout = null;\n                func.apply(context, args);\n            }, remaining);\n        }\n    };\n}\nfunction hookSetter(target, key, d, isRevoked, win) {\n    if (win === void 0) { win = window; }\n    var original = win.Object.getOwnPropertyDescriptor(target, key);\n    win.Object.defineProperty(target, key, isRevoked\n        ? d\n        : {\n            set: function (value) {\n                var _this = this;\n                setTimeout(function () {\n                    d.set.call(_this, value);\n                }, 0);\n                if (original && original.set) {\n                    original.set.call(this, value);\n                }\n            },\n        });\n    return function () { return hookSetter(target, key, original || {}, true); };\n}\nfunction patch(source, name, replacement) {\n    try {\n        if (!(name in source)) {\n            return function () { };\n        }\n        var original_1 = source[name];\n        var wrapped = replacement(original_1);\n        if (typeof wrapped === 'function') {\n            wrapped.prototype = wrapped.prototype || {};\n            Object.defineProperties(wrapped, {\n                __rrweb_original__: {\n                    enumerable: false,\n                    value: original_1,\n                },\n            });\n        }\n        source[name] = wrapped;\n        return function () {\n            source[name] = original_1;\n        };\n    }\n    catch (_a) {\n        return function () { };\n    }\n}\nfunction getWindowHeight() {\n    return (window.innerHeight ||\n        (document.documentElement && document.documentElement.clientHeight) ||\n        (document.body && document.body.clientHeight));\n}\nfunction getWindowWidth() {\n    return (window.innerWidth ||\n        (document.documentElement && document.documentElement.clientWidth) ||\n        (document.body && document.body.clientWidth));\n}\nfunction isBlocked(node, blockClass) {\n    if (!node) {\n        return false;\n    }\n    if (node.nodeType === node.ELEMENT_NODE) {\n        var needBlock_1 = false;\n        if (typeof blockClass === 'string') {\n            if (node.closest !== undefined) {\n                return node.closest('.' + blockClass) !== null;\n            }\n            else {\n                needBlock_1 = node.classList.contains(blockClass);\n            }\n        }\n        else {\n            node.classList.forEach(function (className) {\n                if (blockClass.test(className)) {\n                    needBlock_1 = true;\n                }\n            });\n        }\n        return needBlock_1 || isBlocked(node.parentNode, blockClass);\n    }\n    if (node.nodeType === node.TEXT_NODE) {\n        return isBlocked(node.parentNode, blockClass);\n    }\n    return isBlocked(node.parentNode, blockClass);\n}\nfunction isIgnored(n) {\n    if ('__sn' in n) {\n        return n.__sn.id === IGNORED_NODE;\n    }\n    return false;\n}\nfunction isAncestorRemoved(target, mirror) {\n    if (isShadowRoot(target)) {\n        return false;\n    }\n    var id = mirror.getId(target);\n    if (!mirror.has(id)) {\n        return true;\n    }\n    if (target.parentNode &&\n        target.parentNode.nodeType === target.DOCUMENT_NODE) {\n        return false;\n    }\n    if (!target.parentNode) {\n        return true;\n    }\n    return isAncestorRemoved(target.parentNode, mirror);\n}\nfunction isTouchEvent(event) {\n    return Boolean(event.changedTouches);\n}\nfunction polyfill(win) {\n    if (win === void 0) { win = window; }\n    if ('NodeList' in win && !win.NodeList.prototype.forEach) {\n        win.NodeList.prototype.forEach = Array.prototype\n            .forEach;\n    }\n    if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\n        win.DOMTokenList.prototype.forEach = Array.prototype\n            .forEach;\n    }\n    if (!Node.prototype.contains) {\n        Node.prototype.contains = function contains(node) {\n            if (!(0 in arguments)) {\n                throw new TypeError('1 argument is required');\n            }\n            do {\n                if (this === node) {\n                    return true;\n                }\n            } while ((node = node && node.parentNode));\n            return false;\n        };\n    }\n}\nvar TreeIndex = (function () {\n    function TreeIndex() {\n        this.reset();\n    }\n    TreeIndex.prototype.add = function (mutation) {\n        var parentTreeNode = this.indexes.get(mutation.parentId);\n        var treeNode = {\n            id: mutation.node.id,\n            mutation: mutation,\n            children: [],\n            texts: [],\n            attributes: [],\n        };\n        if (!parentTreeNode) {\n            this.tree[treeNode.id] = treeNode;\n        }\n        else {\n            treeNode.parent = parentTreeNode;\n            parentTreeNode.children[treeNode.id] = treeNode;\n        }\n        this.indexes.set(treeNode.id, treeNode);\n    };\n    TreeIndex.prototype.remove = function (mutation, mirror) {\n        var _this = this;\n        var parentTreeNode = this.indexes.get(mutation.parentId);\n        var treeNode = this.indexes.get(mutation.id);\n        var deepRemoveFromMirror = function (id) {\n            _this.removeIdSet.add(id);\n            var node = mirror.getNode(id);\n            node === null || node === void 0 ? void 0 : node.childNodes.forEach(function (childNode) {\n                if ('__sn' in childNode) {\n                    deepRemoveFromMirror(childNode.__sn.id);\n                }\n            });\n        };\n        var deepRemoveFromTreeIndex = function (node) {\n            _this.removeIdSet.add(node.id);\n            Object.values(node.children).forEach(function (n) { return deepRemoveFromTreeIndex(n); });\n            var _treeNode = _this.indexes.get(node.id);\n            if (_treeNode) {\n                var _parentTreeNode = _treeNode.parent;\n                if (_parentTreeNode) {\n                    delete _treeNode.parent;\n                    delete _parentTreeNode.children[_treeNode.id];\n                    _this.indexes.delete(mutation.id);\n                }\n            }\n        };\n        if (!treeNode) {\n            this.removeNodeMutations.push(mutation);\n            deepRemoveFromMirror(mutation.id);\n        }\n        else if (!parentTreeNode) {\n            delete this.tree[treeNode.id];\n            this.indexes.delete(treeNode.id);\n            deepRemoveFromTreeIndex(treeNode);\n        }\n        else {\n            delete treeNode.parent;\n            delete parentTreeNode.children[treeNode.id];\n            this.indexes.delete(mutation.id);\n            deepRemoveFromTreeIndex(treeNode);\n        }\n    };\n    TreeIndex.prototype.text = function (mutation) {\n        var treeNode = this.indexes.get(mutation.id);\n        if (treeNode) {\n            treeNode.texts.push(mutation);\n        }\n        else {\n            this.textMutations.push(mutation);\n        }\n    };\n    TreeIndex.prototype.attribute = function (mutation) {\n        var treeNode = this.indexes.get(mutation.id);\n        if (treeNode) {\n            treeNode.attributes.push(mutation);\n        }\n        else {\n            this.attributeMutations.push(mutation);\n        }\n    };\n    TreeIndex.prototype.scroll = function (d) {\n        this.scrollMap.set(d.id, d);\n    };\n    TreeIndex.prototype.input = function (d) {\n        this.inputMap.set(d.id, d);\n    };\n    TreeIndex.prototype.flush = function () {\n        var e_1, _a, e_2, _b;\n        var _this = this;\n        var _c = this, tree = _c.tree, removeNodeMutations = _c.removeNodeMutations, textMutations = _c.textMutations, attributeMutations = _c.attributeMutations;\n        var batchMutationData = {\n            source: IncrementalSource.Mutation,\n            removes: removeNodeMutations,\n            texts: textMutations,\n            attributes: attributeMutations,\n            adds: [],\n        };\n        var walk = function (treeNode, removed) {\n            if (removed) {\n                _this.removeIdSet.add(treeNode.id);\n            }\n            batchMutationData.texts = batchMutationData.texts\n                .concat(removed ? [] : treeNode.texts)\n                .filter(function (m) { return !_this.removeIdSet.has(m.id); });\n            batchMutationData.attributes = batchMutationData.attributes\n                .concat(removed ? [] : treeNode.attributes)\n                .filter(function (m) { return !_this.removeIdSet.has(m.id); });\n            if (!_this.removeIdSet.has(treeNode.id) &&\n                !_this.removeIdSet.has(treeNode.mutation.parentId) &&\n                !removed) {\n                batchMutationData.adds.push(treeNode.mutation);\n                if (treeNode.children) {\n                    Object.values(treeNode.children).forEach(function (n) { return walk(n, false); });\n                }\n            }\n            else {\n                Object.values(treeNode.children).forEach(function (n) { return walk(n, true); });\n            }\n        };\n        Object.values(tree).forEach(function (n) { return walk(n, false); });\n        try {\n            for (var _d = __values(this.scrollMap.keys()), _e = _d.next(); !_e.done; _e = _d.next()) {\n                var id = _e.value;\n                if (this.removeIdSet.has(id)) {\n                    this.scrollMap.delete(id);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        try {\n            for (var _f = __values(this.inputMap.keys()), _g = _f.next(); !_g.done; _g = _f.next()) {\n                var id = _g.value;\n                if (this.removeIdSet.has(id)) {\n                    this.inputMap.delete(id);\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        var scrollMap = new Map(this.scrollMap);\n        var inputMap = new Map(this.inputMap);\n        this.reset();\n        return {\n            mutationData: batchMutationData,\n            scrollMap: scrollMap,\n            inputMap: inputMap,\n        };\n    };\n    TreeIndex.prototype.reset = function () {\n        this.tree = [];\n        this.indexes = new Map();\n        this.removeNodeMutations = [];\n        this.textMutations = [];\n        this.attributeMutations = [];\n        this.removeIdSet = new Set();\n        this.scrollMap = new Map();\n        this.inputMap = new Map();\n    };\n    TreeIndex.prototype.idRemoved = function (id) {\n        return this.removeIdSet.has(id);\n    };\n    return TreeIndex;\n}());\nfunction queueToResolveTrees(queue) {\n    var e_3, _a;\n    var queueNodeMap = {};\n    var putIntoMap = function (m, parent) {\n        var nodeInTree = {\n            value: m,\n            parent: parent,\n            children: [],\n        };\n        queueNodeMap[m.node.id] = nodeInTree;\n        return nodeInTree;\n    };\n    var queueNodeTrees = [];\n    try {\n        for (var queue_1 = __values(queue), queue_1_1 = queue_1.next(); !queue_1_1.done; queue_1_1 = queue_1.next()) {\n            var mutation = queue_1_1.value;\n            var nextId = mutation.nextId, parentId = mutation.parentId;\n            if (nextId && nextId in queueNodeMap) {\n                var nextInTree = queueNodeMap[nextId];\n                if (nextInTree.parent) {\n                    var idx = nextInTree.parent.children.indexOf(nextInTree);\n                    nextInTree.parent.children.splice(idx, 0, putIntoMap(mutation, nextInTree.parent));\n                }\n                else {\n                    var idx = queueNodeTrees.indexOf(nextInTree);\n                    queueNodeTrees.splice(idx, 0, putIntoMap(mutation, null));\n                }\n                continue;\n            }\n            if (parentId in queueNodeMap) {\n                var parentInTree = queueNodeMap[parentId];\n                parentInTree.children.push(putIntoMap(mutation, parentInTree));\n                continue;\n            }\n            queueNodeTrees.push(putIntoMap(mutation, null));\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (queue_1_1 && !queue_1_1.done && (_a = queue_1.return)) _a.call(queue_1);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return queueNodeTrees;\n}\nfunction iterateResolveTree(tree, cb) {\n    cb(tree.value);\n    for (var i = tree.children.length - 1; i >= 0; i--) {\n        iterateResolveTree(tree.children[i], cb);\n    }\n}\nfunction isIframeINode(node) {\n    if ('__sn' in node) {\n        return (node.__sn.type === NodeType.Element && node.__sn.tagName === 'iframe');\n    }\n    return false;\n}\nfunction getBaseDimension(node, rootIframe) {\n    var _a, _b;\n    var frameElement = (_b = (_a = node.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView) === null || _b === void 0 ? void 0 : _b.frameElement;\n    if (!frameElement || frameElement === rootIframe) {\n        return {\n            x: 0,\n            y: 0,\n            relativeScale: 1,\n            absoluteScale: 1,\n        };\n    }\n    var frameDimension = frameElement.getBoundingClientRect();\n    var frameBaseDimension = getBaseDimension(frameElement, rootIframe);\n    var relativeScale = frameDimension.height / frameElement.clientHeight;\n    return {\n        x: frameDimension.x * frameBaseDimension.relativeScale +\n            frameBaseDimension.x,\n        y: frameDimension.y * frameBaseDimension.relativeScale +\n            frameBaseDimension.y,\n        relativeScale: relativeScale,\n        absoluteScale: frameBaseDimension.absoluteScale * relativeScale,\n    };\n}\nfunction hasShadowRoot(n) {\n    return Boolean(n === null || n === void 0 ? void 0 : n.shadowRoot);\n}\n\nexport { TreeIndex, _mirror, createMirror, getBaseDimension, getWindowHeight, getWindowWidth, hasShadowRoot, hookSetter, isAncestorRemoved, isBlocked, isIframeINode, isIgnored, isTouchEvent, iterateResolveTree, on, patch, polyfill, queueToResolveTrees, throttle };\n","import { __values } from '../../ext/tslib/tslib.es6.js';\nimport { isShadowRoot, maskInputValue, transformAttribute, needMaskingText, IGNORED_NODE, serializeNodeWithId } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { isIgnored, isBlocked, isAncestorRemoved, isIframeINode, hasShadowRoot } from '../utils.js';\n\nfunction isNodeInLinkedList(n) {\n    return '__ln' in n;\n}\nvar DoubleLinkedList = (function () {\n    function DoubleLinkedList() {\n        this.length = 0;\n        this.head = null;\n    }\n    DoubleLinkedList.prototype.get = function (position) {\n        if (position >= this.length) {\n            throw new Error('Position outside of list range');\n        }\n        var current = this.head;\n        for (var index = 0; index < position; index++) {\n            current = (current === null || current === void 0 ? void 0 : current.next) || null;\n        }\n        return current;\n    };\n    DoubleLinkedList.prototype.addNode = function (n) {\n        var node = {\n            value: n,\n            previous: null,\n            next: null,\n        };\n        n.__ln = node;\n        if (n.previousSibling && isNodeInLinkedList(n.previousSibling)) {\n            var current = n.previousSibling.__ln.next;\n            node.next = current;\n            node.previous = n.previousSibling.__ln;\n            n.previousSibling.__ln.next = node;\n            if (current) {\n                current.previous = node;\n            }\n        }\n        else if (n.nextSibling &&\n            isNodeInLinkedList(n.nextSibling) &&\n            n.nextSibling.__ln.previous) {\n            var current = n.nextSibling.__ln.previous;\n            node.previous = current;\n            node.next = n.nextSibling.__ln;\n            n.nextSibling.__ln.previous = node;\n            if (current) {\n                current.next = node;\n            }\n        }\n        else {\n            if (this.head) {\n                this.head.previous = node;\n            }\n            node.next = this.head;\n            this.head = node;\n        }\n        this.length++;\n    };\n    DoubleLinkedList.prototype.removeNode = function (n) {\n        var current = n.__ln;\n        if (!this.head) {\n            return;\n        }\n        if (!current.previous) {\n            this.head = current.next;\n            if (this.head) {\n                this.head.previous = null;\n            }\n        }\n        else {\n            current.previous.next = current.next;\n            if (current.next) {\n                current.next.previous = current.previous;\n            }\n        }\n        if (n.__ln) {\n            delete n.__ln;\n        }\n        this.length--;\n    };\n    return DoubleLinkedList;\n}());\nvar moveKey = function (id, parentId) { return \"\".concat(id, \"@\").concat(parentId); };\nfunction isINode(n) {\n    return '__sn' in n;\n}\nvar MutationBuffer = (function () {\n    function MutationBuffer() {\n        var _this = this;\n        this.frozen = false;\n        this.locked = false;\n        this.texts = [];\n        this.attributes = [];\n        this.removes = [];\n        this.mapRemoves = [];\n        this.movedMap = {};\n        this.addedSet = new Set();\n        this.movedSet = new Set();\n        this.droppedSet = new Set();\n        this.processMutations = function (mutations) {\n            mutations.forEach(_this.processMutation);\n            _this.emit();\n        };\n        this.emit = function () {\n            var e_1, _a, e_2, _b;\n            if (_this.frozen || _this.locked) {\n                return;\n            }\n            var adds = [];\n            var addList = new DoubleLinkedList();\n            var getNextId = function (n) {\n                var ns = n;\n                var nextId = IGNORED_NODE;\n                while (nextId === IGNORED_NODE) {\n                    ns = ns && ns.nextSibling;\n                    nextId = ns && _this.mirror.getId(ns);\n                }\n                return nextId;\n            };\n            var pushAdd = function (n) {\n                var _a, _b, _c, _d, _e;\n                var shadowHost = n.getRootNode\n                    ? (_a = n.getRootNode()) === null || _a === void 0 ? void 0 : _a.host\n                    : null;\n                var rootShadowHost = shadowHost;\n                while ((_c = (_b = rootShadowHost === null || rootShadowHost === void 0 ? void 0 : rootShadowHost.getRootNode) === null || _b === void 0 ? void 0 : _b.call(rootShadowHost)) === null || _c === void 0 ? void 0 : _c.host)\n                    rootShadowHost =\n                        ((_e = (_d = rootShadowHost === null || rootShadowHost === void 0 ? void 0 : rootShadowHost.getRootNode) === null || _d === void 0 ? void 0 : _d.call(rootShadowHost)) === null || _e === void 0 ? void 0 : _e.host) ||\n                            null;\n                var notInDoc = !_this.doc.contains(n) &&\n                    (rootShadowHost === null || !_this.doc.contains(rootShadowHost));\n                if (!n.parentNode || notInDoc) {\n                    return;\n                }\n                var parentId = isShadowRoot(n.parentNode)\n                    ? _this.mirror.getId(shadowHost)\n                    : _this.mirror.getId(n.parentNode);\n                var nextId = getNextId(n);\n                if (parentId === -1 || nextId === -1) {\n                    return addList.addNode(n);\n                }\n                var sn = serializeNodeWithId(n, {\n                    doc: _this.doc,\n                    map: _this.mirror.map,\n                    blockClass: _this.blockClass,\n                    blockSelector: _this.blockSelector,\n                    unblockSelector: _this.unblockSelector,\n                    maskTextClass: _this.maskTextClass,\n                    maskTextSelector: _this.maskTextSelector,\n                    unmaskTextSelector: _this.unmaskTextSelector,\n                    maskInputSelector: _this.maskInputSelector,\n                    unmaskInputSelector: _this.unmaskInputSelector,\n                    skipChild: true,\n                    inlineStylesheet: _this.inlineStylesheet,\n                    maskInputOptions: _this.maskInputOptions,\n                    maskTextFn: _this.maskTextFn,\n                    maskInputFn: _this.maskInputFn,\n                    slimDOMOptions: _this.slimDOMOptions,\n                    recordCanvas: _this.recordCanvas,\n                    inlineImages: _this.inlineImages,\n                    onSerialize: function (currentN) {\n                        if (isIframeINode(currentN)) {\n                            _this.iframeManager.addIframe(currentN);\n                        }\n                        if (hasShadowRoot(n)) {\n                            _this.shadowDomManager.addShadowRoot(n.shadowRoot, document);\n                        }\n                    },\n                    onIframeLoad: function (iframe, childSn) {\n                        _this.iframeManager.attachIframe(iframe, childSn);\n                        _this.shadowDomManager.observeAttachShadow(iframe);\n                    },\n                });\n                if (sn) {\n                    adds.push({\n                        parentId: parentId,\n                        nextId: nextId,\n                        node: sn,\n                    });\n                }\n            };\n            while (_this.mapRemoves.length) {\n                _this.mirror.removeNodeFromMap(_this.mapRemoves.shift());\n            }\n            try {\n                for (var _c = __values(_this.movedSet), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var n = _d.value;\n                    if (isParentRemoved(_this.removes, n, _this.mirror) &&\n                        !_this.movedSet.has(n.parentNode)) {\n                        continue;\n                    }\n                    pushAdd(n);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            try {\n                for (var _e = __values(_this.addedSet), _f = _e.next(); !_f.done; _f = _e.next()) {\n                    var n = _f.value;\n                    if (!isAncestorInSet(_this.droppedSet, n) &&\n                        !isParentRemoved(_this.removes, n, _this.mirror)) {\n                        pushAdd(n);\n                    }\n                    else if (isAncestorInSet(_this.movedSet, n)) {\n                        pushAdd(n);\n                    }\n                    else {\n                        _this.droppedSet.add(n);\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            var candidate = null;\n            while (addList.length) {\n                var node = null;\n                if (candidate) {\n                    var parentId = _this.mirror.getId(candidate.value.parentNode);\n                    var nextId = getNextId(candidate.value);\n                    if (parentId !== -1 && nextId !== -1) {\n                        node = candidate;\n                    }\n                }\n                if (!node) {\n                    for (var index = addList.length - 1; index >= 0; index--) {\n                        var _node = addList.get(index);\n                        if (_node) {\n                            var parentId = _this.mirror.getId(_node.value.parentNode);\n                            var nextId = getNextId(_node.value);\n                            if (parentId !== -1 && nextId !== -1) {\n                                node = _node;\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (!node) {\n                    while (addList.head) {\n                        addList.removeNode(addList.head.value);\n                    }\n                    break;\n                }\n                candidate = node.previous;\n                addList.removeNode(node.value);\n                pushAdd(node.value);\n            }\n            var payload = {\n                texts: _this.texts\n                    .map(function (text) { return ({\n                    id: _this.mirror.getId(text.node),\n                    value: text.value,\n                }); })\n                    .filter(function (text) { return _this.mirror.has(text.id); }),\n                attributes: _this.attributes\n                    .map(function (attribute) { return ({\n                    id: _this.mirror.getId(attribute.node),\n                    attributes: attribute.attributes,\n                }); })\n                    .filter(function (attribute) { return _this.mirror.has(attribute.id); }),\n                removes: _this.removes,\n                adds: adds,\n            };\n            if (!payload.texts.length &&\n                !payload.attributes.length &&\n                !payload.removes.length &&\n                !payload.adds.length) {\n                return;\n            }\n            _this.texts = [];\n            _this.attributes = [];\n            _this.removes = [];\n            _this.addedSet = new Set();\n            _this.movedSet = new Set();\n            _this.droppedSet = new Set();\n            _this.movedMap = {};\n            _this.mutationCb(payload);\n        };\n        this.processMutation = function (m) {\n            var e_3, _a, e_4, _b;\n            if (isIgnored(m.target)) {\n                return;\n            }\n            switch (m.type) {\n                case 'characterData': {\n                    var value = m.target.textContent;\n                    if (!isBlocked(m.target, _this.blockClass) && value !== m.oldValue) {\n                        _this.texts.push({\n                            value: needMaskingText(m.target, _this.maskTextClass, _this.maskTextSelector, _this.unmaskTextSelector) && value\n                                ? _this.maskTextFn\n                                    ? _this.maskTextFn(value)\n                                    : value.replace(/[\\S]/g, '*')\n                                : value,\n                            node: m.target,\n                        });\n                    }\n                    break;\n                }\n                case 'attributes': {\n                    var target = m.target;\n                    var value = m.target.getAttribute(m.attributeName);\n                    if (m.attributeName === 'value') {\n                        value = maskInputValue({\n                            input: target,\n                            maskInputSelector: _this.maskInputSelector,\n                            unmaskInputSelector: _this.unmaskInputSelector,\n                            maskInputOptions: _this.maskInputOptions,\n                            tagName: m.target.tagName,\n                            type: m.target.getAttribute('type'),\n                            value: value,\n                            maskInputFn: _this.maskInputFn,\n                        });\n                    }\n                    if (isBlocked(m.target, _this.blockClass) || value === m.oldValue) {\n                        return;\n                    }\n                    var item = _this.attributes.find(function (a) { return a.node === m.target; });\n                    if (!item) {\n                        item = {\n                            node: m.target,\n                            attributes: {},\n                        };\n                        _this.attributes.push(item);\n                    }\n                    if (m.attributeName === 'style') {\n                        var old = _this.doc.createElement('span');\n                        if (m.oldValue) {\n                            old.setAttribute('style', m.oldValue);\n                        }\n                        if (item.attributes.style === undefined ||\n                            item.attributes.style === null) {\n                            item.attributes.style = {};\n                        }\n                        try {\n                            var styleObj = item.attributes.style;\n                            try {\n                                for (var _c = __values(Array.from(target.style)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                                    var pname = _d.value;\n                                    var newValue = target.style.getPropertyValue(pname);\n                                    var newPriority = target.style.getPropertyPriority(pname);\n                                    if (newValue !== old.style.getPropertyValue(pname) ||\n                                        newPriority !== old.style.getPropertyPriority(pname)) {\n                                        if (newPriority === '') {\n                                            styleObj[pname] = newValue;\n                                        }\n                                        else {\n                                            styleObj[pname] = [newValue, newPriority];\n                                        }\n                                    }\n                                }\n                            }\n                            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                            finally {\n                                try {\n                                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                                }\n                                finally { if (e_3) throw e_3.error; }\n                            }\n                            try {\n                                for (var _e = __values(Array.from(old.style)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                                    var pname = _f.value;\n                                    if (target.style.getPropertyValue(pname) === '') {\n                                        styleObj[pname] = false;\n                                    }\n                                }\n                            }\n                            catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                            finally {\n                                try {\n                                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                                }\n                                finally { if (e_4) throw e_4.error; }\n                            }\n                        }\n                        catch (error) {\n                            console.warn('[rrweb] Error when parsing update to style attribute:', error);\n                        }\n                    }\n                    else {\n                        item.attributes[m.attributeName] = transformAttribute(_this.doc, m.target.tagName, m.attributeName, value);\n                    }\n                    break;\n                }\n                case 'childList': {\n                    m.addedNodes.forEach(function (n) { return _this.genAdds(n, m.target); });\n                    m.removedNodes.forEach(function (n) {\n                        var nodeId = _this.mirror.getId(n);\n                        var parentId = isShadowRoot(m.target)\n                            ? _this.mirror.getId(m.target.host)\n                            : _this.mirror.getId(m.target);\n                        if (isBlocked(m.target, _this.blockClass) || isIgnored(n)) {\n                            return;\n                        }\n                        if (_this.addedSet.has(n)) {\n                            deepDelete(_this.addedSet, n);\n                            _this.droppedSet.add(n);\n                        }\n                        else if (_this.addedSet.has(m.target) && nodeId === -1) ;\n                        else if (isAncestorRemoved(m.target, _this.mirror)) ;\n                        else if (_this.movedSet.has(n) &&\n                            _this.movedMap[moveKey(nodeId, parentId)]) {\n                            deepDelete(_this.movedSet, n);\n                        }\n                        else {\n                            _this.removes.push({\n                                parentId: parentId,\n                                id: nodeId,\n                                isShadow: isShadowRoot(m.target) ? true : undefined,\n                            });\n                        }\n                        _this.mapRemoves.push(n);\n                    });\n                    break;\n                }\n            }\n        };\n        this.genAdds = function (n, target) {\n            if (target && isBlocked(target, _this.blockClass)) {\n                return;\n            }\n            if (isINode(n)) {\n                if (isIgnored(n)) {\n                    return;\n                }\n                _this.movedSet.add(n);\n                var targetId = null;\n                if (target && isINode(target)) {\n                    targetId = target.__sn.id;\n                }\n                if (targetId) {\n                    _this.movedMap[moveKey(n.__sn.id, targetId)] = true;\n                }\n            }\n            else {\n                _this.addedSet.add(n);\n                _this.droppedSet.delete(n);\n            }\n            if (!isBlocked(n, _this.blockClass))\n                n.childNodes.forEach(function (childN) { return _this.genAdds(childN); });\n        };\n    }\n    MutationBuffer.prototype.init = function (options) {\n        var _this = this;\n        [\n            'mutationCb',\n            'blockClass',\n            'blockSelector',\n            'unblockSelector',\n            'maskTextClass',\n            'maskTextSelector',\n            'unmaskTextSelector',\n            'maskInputSelector',\n            'unmaskInputSelector',\n            'inlineStylesheet',\n            'maskInputOptions',\n            'maskTextFn',\n            'maskInputFn',\n            'recordCanvas',\n            'inlineImages',\n            'slimDOMOptions',\n            'doc',\n            'mirror',\n            'iframeManager',\n            'shadowDomManager',\n            'canvasManager',\n        ].forEach(function (key) {\n            _this[key] = options[key];\n        });\n    };\n    MutationBuffer.prototype.freeze = function () {\n        this.frozen = true;\n        this.canvasManager.freeze();\n    };\n    MutationBuffer.prototype.unfreeze = function () {\n        this.frozen = false;\n        this.canvasManager.unfreeze();\n        this.emit();\n    };\n    MutationBuffer.prototype.isFrozen = function () {\n        return this.frozen;\n    };\n    MutationBuffer.prototype.lock = function () {\n        this.locked = true;\n        this.canvasManager.lock();\n    };\n    MutationBuffer.prototype.unlock = function () {\n        this.locked = false;\n        this.canvasManager.unlock();\n        this.emit();\n    };\n    MutationBuffer.prototype.reset = function () {\n        this.shadowDomManager.reset();\n        this.canvasManager.reset();\n    };\n    return MutationBuffer;\n}());\nfunction deepDelete(addsSet, n) {\n    addsSet.delete(n);\n    n.childNodes.forEach(function (childN) { return deepDelete(addsSet, childN); });\n}\nfunction isParentRemoved(removes, n, mirror) {\n    var parentNode = n.parentNode;\n    if (!parentNode) {\n        return false;\n    }\n    var parentId = mirror.getId(parentNode);\n    if (removes.some(function (r) { return r.id === parentId; })) {\n        return true;\n    }\n    return isParentRemoved(removes, parentNode, mirror);\n}\nfunction isAncestorInSet(set, n) {\n    var parentNode = n.parentNode;\n    if (!parentNode) {\n        return false;\n    }\n    if (set.has(parentNode)) {\n        return true;\n    }\n    return isAncestorInSet(set, parentNode);\n}\n\nexport default MutationBuffer;\n","import { __values, __spreadArray, __read, __assign } from '../../ext/tslib/tslib.es6.js';\nimport { maskInputValue } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { on, throttle, isTouchEvent, isBlocked, getWindowHeight, getWindowWidth, hookSetter, patch } from '../utils.js';\nimport { IncrementalSource, MouseInteractions } from '../types.js';\nimport MutationBuffer from './mutation.js';\n\nvar mutationBuffers = [];\nvar isCSSGroupingRuleSupported = typeof CSSGroupingRule !== 'undefined';\nvar isCSSMediaRuleSupported = typeof CSSMediaRule !== 'undefined';\nvar isCSSSupportsRuleSupported = typeof CSSSupportsRule !== 'undefined';\nvar isCSSConditionRuleSupported = typeof CSSConditionRule !== 'undefined';\nfunction getEventTarget(event) {\n    try {\n        if ('composedPath' in event) {\n            var path = event.composedPath();\n            if (path.length) {\n                return path[0];\n            }\n        }\n        else if ('path' in event && event.path.length) {\n            return event.path[0];\n        }\n    }\n    catch (_a) { }\n    return event && event.target;\n}\nfunction initMutationObserver(options, rootEl) {\n    var _a, _b;\n    var mutationBuffer = new MutationBuffer();\n    mutationBuffers.push(mutationBuffer);\n    mutationBuffer.init(options);\n    var mutationObserverCtor = window.MutationObserver ||\n        window.__rrMutationObserver;\n    var angularZoneSymbol = (_b = (_a = window === null || window === void 0 ? void 0 : window.Zone) === null || _a === void 0 ? void 0 : _a.__symbol__) === null || _b === void 0 ? void 0 : _b.call(_a, 'MutationObserver');\n    if (angularZoneSymbol &&\n        window[angularZoneSymbol]) {\n        mutationObserverCtor = window[angularZoneSymbol];\n    }\n    var observer = new mutationObserverCtor(mutationBuffer.processMutations.bind(mutationBuffer));\n    observer.observe(rootEl, {\n        attributes: true,\n        attributeOldValue: true,\n        characterData: true,\n        characterDataOldValue: true,\n        childList: true,\n        subtree: true,\n    });\n    return observer;\n}\nfunction initMoveObserver(_a) {\n    var mousemoveCb = _a.mousemoveCb, sampling = _a.sampling, doc = _a.doc, mirror = _a.mirror;\n    if (sampling.mousemove === false) {\n        return function () { };\n    }\n    var threshold = typeof sampling.mousemove === 'number' ? sampling.mousemove : 50;\n    var callbackThreshold = typeof sampling.mousemoveCallback === 'number'\n        ? sampling.mousemoveCallback\n        : 500;\n    var positions = [];\n    var timeBaseline;\n    var wrappedCb = throttle(function (source) {\n        var totalOffset = Date.now() - timeBaseline;\n        mousemoveCb(positions.map(function (p) {\n            p.timeOffset -= totalOffset;\n            return p;\n        }), source);\n        positions = [];\n        timeBaseline = null;\n    }, callbackThreshold);\n    var updatePosition = throttle(function (evt) {\n        var target = getEventTarget(evt);\n        var _a = isTouchEvent(evt)\n            ? evt.changedTouches[0]\n            : evt, clientX = _a.clientX, clientY = _a.clientY;\n        if (!timeBaseline) {\n            timeBaseline = Date.now();\n        }\n        positions.push({\n            x: clientX,\n            y: clientY,\n            id: mirror.getId(target),\n            timeOffset: Date.now() - timeBaseline,\n        });\n        wrappedCb(typeof DragEvent !== 'undefined' && evt instanceof DragEvent\n            ? IncrementalSource.Drag\n            : evt instanceof MouseEvent\n                ? IncrementalSource.MouseMove\n                : IncrementalSource.TouchMove);\n    }, threshold, {\n        trailing: false,\n    });\n    var handlers = [\n        on('mousemove', updatePosition, doc),\n        on('touchmove', updatePosition, doc),\n        on('drag', updatePosition, doc),\n    ];\n    return function () {\n        handlers.forEach(function (h) { return h(); });\n    };\n}\nfunction initMouseInteractionObserver(_a) {\n    var mouseInteractionCb = _a.mouseInteractionCb, doc = _a.doc, mirror = _a.mirror, blockClass = _a.blockClass, sampling = _a.sampling;\n    if (sampling.mouseInteraction === false) {\n        return function () { };\n    }\n    var disableMap = sampling.mouseInteraction === true ||\n        sampling.mouseInteraction === undefined\n        ? {}\n        : sampling.mouseInteraction;\n    var handlers = [];\n    var getHandler = function (eventKey) {\n        return function (event) {\n            var target = getEventTarget(event);\n            if (isBlocked(target, blockClass)) {\n                return;\n            }\n            var e = isTouchEvent(event) ? event.changedTouches[0] : event;\n            if (!e) {\n                return;\n            }\n            var id = mirror.getId(target);\n            var clientX = e.clientX, clientY = e.clientY;\n            mouseInteractionCb({\n                type: MouseInteractions[eventKey],\n                id: id,\n                x: clientX,\n                y: clientY,\n            });\n        };\n    };\n    Object.keys(MouseInteractions)\n        .filter(function (key) {\n        return Number.isNaN(Number(key)) &&\n            !key.endsWith('_Departed') &&\n            disableMap[key] !== false;\n    })\n        .forEach(function (eventKey) {\n        var eventName = eventKey.toLowerCase();\n        var handler = getHandler(eventKey);\n        handlers.push(on(eventName, handler, doc));\n    });\n    return function () {\n        handlers.forEach(function (h) { return h(); });\n    };\n}\nfunction initScrollObserver(_a) {\n    var scrollCb = _a.scrollCb, doc = _a.doc, mirror = _a.mirror, blockClass = _a.blockClass, sampling = _a.sampling;\n    var updatePosition = throttle(function (evt) {\n        var target = getEventTarget(evt);\n        if (!target || isBlocked(target, blockClass)) {\n            return;\n        }\n        var id = mirror.getId(target);\n        if (target === doc) {\n            var scrollEl = (doc.scrollingElement || doc.documentElement);\n            scrollCb({\n                id: id,\n                x: scrollEl.scrollLeft,\n                y: scrollEl.scrollTop,\n            });\n        }\n        else {\n            scrollCb({\n                id: id,\n                x: target.scrollLeft,\n                y: target.scrollTop,\n            });\n        }\n    }, sampling.scroll || 100);\n    return on('scroll', updatePosition, doc);\n}\nfunction initViewportResizeObserver(_a) {\n    var viewportResizeCb = _a.viewportResizeCb;\n    var lastH = -1;\n    var lastW = -1;\n    var updateDimension = throttle(function () {\n        var height = getWindowHeight();\n        var width = getWindowWidth();\n        if (lastH !== height || lastW !== width) {\n            viewportResizeCb({\n                width: Number(width),\n                height: Number(height),\n            });\n            lastH = height;\n            lastW = width;\n        }\n    }, 200);\n    return on('resize', updateDimension, window);\n}\nfunction wrapEventWithUserTriggeredFlag(v, enable) {\n    var value = __assign({}, v);\n    if (!enable)\n        delete value.userTriggered;\n    return value;\n}\nvar INPUT_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\nvar lastInputValueMap = new WeakMap();\nfunction initInputObserver(_a) {\n    var inputCb = _a.inputCb, doc = _a.doc, mirror = _a.mirror, blockClass = _a.blockClass, ignoreClass = _a.ignoreClass, ignoreSelector = _a.ignoreSelector, maskInputSelector = _a.maskInputSelector, unmaskInputSelector = _a.unmaskInputSelector, maskInputOptions = _a.maskInputOptions, maskInputFn = _a.maskInputFn, sampling = _a.sampling, userTriggeredOnInput = _a.userTriggeredOnInput;\n    function eventHandler(event) {\n        var target = getEventTarget(event);\n        var userTriggered = event.isTrusted;\n        if (target && target.tagName === 'OPTION')\n            target = target.parentElement;\n        if (!target ||\n            !target.tagName ||\n            INPUT_TAGS.indexOf(target.tagName) < 0 ||\n            isBlocked(target, blockClass)) {\n            return;\n        }\n        var type = target.type;\n        if (target.classList.contains(ignoreClass) ||\n            (ignoreSelector && target.matches(ignoreSelector))) {\n            return;\n        }\n        var text = target.value;\n        var isChecked = false;\n        if (type === 'radio' || type === 'checkbox') {\n            isChecked = target.checked;\n        }\n        else if (maskInputOptions[target.tagName.toLowerCase()] ||\n            maskInputOptions[type]) {\n            text = maskInputValue({\n                input: target,\n                maskInputOptions: maskInputOptions,\n                maskInputSelector: maskInputSelector,\n                unmaskInputSelector: unmaskInputSelector,\n                tagName: target.tagName,\n                type: type,\n                value: text,\n                maskInputFn: maskInputFn,\n            });\n        }\n        cbWithDedup(target, wrapEventWithUserTriggeredFlag({ text: text, isChecked: isChecked, userTriggered: userTriggered }, userTriggeredOnInput));\n        var name = target.name;\n        if (type === 'radio' && name && isChecked) {\n            doc\n                .querySelectorAll(\"input[type=\\\"radio\\\"][name=\\\"\".concat(name, \"\\\"]\"))\n                .forEach(function (el) {\n                if (el !== target) {\n                    cbWithDedup(el, wrapEventWithUserTriggeredFlag({\n                        text: el.value,\n                        isChecked: !isChecked,\n                        userTriggered: false,\n                    }, userTriggeredOnInput));\n                }\n            });\n        }\n    }\n    function cbWithDedup(target, v) {\n        var lastInputValue = lastInputValueMap.get(target);\n        if (!lastInputValue ||\n            lastInputValue.text !== v.text ||\n            lastInputValue.isChecked !== v.isChecked) {\n            lastInputValueMap.set(target, v);\n            var id = mirror.getId(target);\n            inputCb(__assign(__assign({}, v), { id: id }));\n        }\n    }\n    var events = sampling.input === 'last' ? ['change'] : ['input', 'change'];\n    var handlers = events.map(function (eventName) { return on(eventName, eventHandler, doc); });\n    var propertyDescriptor = Object.getOwnPropertyDescriptor(HTMLInputElement.prototype, 'value');\n    var hookProperties = [\n        [HTMLInputElement.prototype, 'value'],\n        [HTMLInputElement.prototype, 'checked'],\n        [HTMLSelectElement.prototype, 'value'],\n        [HTMLTextAreaElement.prototype, 'value'],\n        [HTMLSelectElement.prototype, 'selectedIndex'],\n        [HTMLOptionElement.prototype, 'selected'],\n    ];\n    if (propertyDescriptor && propertyDescriptor.set) {\n        handlers.push.apply(handlers, __spreadArray([], __read(hookProperties.map(function (p) {\n            return hookSetter(p[0], p[1], {\n                set: function () {\n                    eventHandler({ target: this });\n                },\n            });\n        })), false));\n    }\n    return function () {\n        handlers.forEach(function (h) { return h(); });\n    };\n}\nfunction getNestedCSSRulePositions(rule) {\n    var positions = [];\n    function recurse(childRule, pos) {\n        if ((isCSSGroupingRuleSupported &&\n            childRule.parentRule instanceof CSSGroupingRule) ||\n            (isCSSMediaRuleSupported &&\n                childRule.parentRule instanceof CSSMediaRule) ||\n            (isCSSSupportsRuleSupported &&\n                childRule.parentRule instanceof CSSSupportsRule) ||\n            (isCSSConditionRuleSupported &&\n                childRule.parentRule instanceof CSSConditionRule)) {\n            var rules = Array.from(childRule.parentRule.cssRules);\n            var index = rules.indexOf(childRule);\n            pos.unshift(index);\n        }\n        else {\n            var rules = Array.from(childRule.parentStyleSheet.cssRules);\n            var index = rules.indexOf(childRule);\n            pos.unshift(index);\n        }\n        return pos;\n    }\n    return recurse(rule, positions);\n}\nfunction initStyleSheetObserver(_a, _b) {\n    var styleSheetRuleCb = _a.styleSheetRuleCb, mirror = _a.mirror;\n    var win = _b.win;\n    if (!win.CSSStyleSheet || !win.CSSStyleSheet.prototype) {\n        return function () { };\n    }\n    var insertRule = win.CSSStyleSheet.prototype.insertRule;\n    win.CSSStyleSheet.prototype.insertRule = function (rule, index) {\n        var id = mirror.getId(this.ownerNode);\n        if (id !== -1) {\n            styleSheetRuleCb({\n                id: id,\n                adds: [{ rule: rule, index: index }],\n            });\n        }\n        return insertRule.apply(this, arguments);\n    };\n    var deleteRule = win.CSSStyleSheet.prototype.deleteRule;\n    win.CSSStyleSheet.prototype.deleteRule = function (index) {\n        var id = mirror.getId(this.ownerNode);\n        if (id !== -1) {\n            styleSheetRuleCb({\n                id: id,\n                removes: [{ index: index }],\n            });\n        }\n        return deleteRule.apply(this, arguments);\n    };\n    var supportedNestedCSSRuleTypes = {};\n    if (isCSSGroupingRuleSupported) {\n        supportedNestedCSSRuleTypes.CSSGroupingRule = win.CSSGroupingRule;\n    }\n    else {\n        if (isCSSMediaRuleSupported) {\n            supportedNestedCSSRuleTypes.CSSMediaRule = win.CSSMediaRule;\n        }\n        if (isCSSConditionRuleSupported) {\n            supportedNestedCSSRuleTypes.CSSConditionRule = win.CSSConditionRule;\n        }\n        if (isCSSSupportsRuleSupported) {\n            supportedNestedCSSRuleTypes.CSSSupportsRule = win.CSSSupportsRule;\n        }\n    }\n    var unmodifiedFunctions = {};\n    Object.entries(supportedNestedCSSRuleTypes).forEach(function (_a) {\n        var _b = __read(_a, 2), typeKey = _b[0], type = _b[1];\n        unmodifiedFunctions[typeKey] = {\n            insertRule: type.prototype.insertRule,\n            deleteRule: type.prototype.deleteRule,\n        };\n        type.prototype.insertRule = function (rule, index) {\n            var id = mirror.getId(this.parentStyleSheet.ownerNode);\n            if (id !== -1) {\n                styleSheetRuleCb({\n                    id: id,\n                    adds: [\n                        {\n                            rule: rule,\n                            index: __spreadArray(__spreadArray([], __read(getNestedCSSRulePositions(this)), false), [\n                                index || 0,\n                            ], false),\n                        },\n                    ],\n                });\n            }\n            return unmodifiedFunctions[typeKey].insertRule.apply(this, arguments);\n        };\n        type.prototype.deleteRule = function (index) {\n            var id = mirror.getId(this.parentStyleSheet.ownerNode);\n            if (id !== -1) {\n                styleSheetRuleCb({\n                    id: id,\n                    removes: [{ index: __spreadArray(__spreadArray([], __read(getNestedCSSRulePositions(this)), false), [index], false) }],\n                });\n            }\n            return unmodifiedFunctions[typeKey].deleteRule.apply(this, arguments);\n        };\n    });\n    return function () {\n        win.CSSStyleSheet.prototype.insertRule = insertRule;\n        win.CSSStyleSheet.prototype.deleteRule = deleteRule;\n        Object.entries(supportedNestedCSSRuleTypes).forEach(function (_a) {\n            var _b = __read(_a, 2), typeKey = _b[0], type = _b[1];\n            type.prototype.insertRule = unmodifiedFunctions[typeKey].insertRule;\n            type.prototype.deleteRule = unmodifiedFunctions[typeKey].deleteRule;\n        });\n    };\n}\nfunction initStyleDeclarationObserver(_a, _b) {\n    var styleDeclarationCb = _a.styleDeclarationCb, mirror = _a.mirror;\n    var win = _b.win;\n    var setProperty = win.CSSStyleDeclaration.prototype.setProperty;\n    win.CSSStyleDeclaration.prototype.setProperty = function (property, value, priority) {\n        var _a, _b;\n        var id = mirror.getId((_b = (_a = this.parentRule) === null || _a === void 0 ? void 0 : _a.parentStyleSheet) === null || _b === void 0 ? void 0 : _b.ownerNode);\n        if (id !== -1) {\n            styleDeclarationCb({\n                id: id,\n                set: {\n                    property: property,\n                    value: value,\n                    priority: priority,\n                },\n                index: getNestedCSSRulePositions(this.parentRule),\n            });\n        }\n        return setProperty.apply(this, arguments);\n    };\n    var removeProperty = win.CSSStyleDeclaration.prototype.removeProperty;\n    win.CSSStyleDeclaration.prototype.removeProperty = function (property) {\n        var _a, _b;\n        var id = mirror.getId((_b = (_a = this.parentRule) === null || _a === void 0 ? void 0 : _a.parentStyleSheet) === null || _b === void 0 ? void 0 : _b.ownerNode);\n        if (id !== -1) {\n            styleDeclarationCb({\n                id: id,\n                remove: {\n                    property: property,\n                },\n                index: getNestedCSSRulePositions(this.parentRule),\n            });\n        }\n        return removeProperty.apply(this, arguments);\n    };\n    return function () {\n        win.CSSStyleDeclaration.prototype.setProperty = setProperty;\n        win.CSSStyleDeclaration.prototype.removeProperty = removeProperty;\n    };\n}\nfunction initMediaInteractionObserver(_a) {\n    var mediaInteractionCb = _a.mediaInteractionCb, blockClass = _a.blockClass, mirror = _a.mirror, sampling = _a.sampling;\n    var handler = function (type) {\n        return throttle(function (event) {\n            var target = getEventTarget(event);\n            if (!target || isBlocked(target, blockClass)) {\n                return;\n            }\n            var _a = target, currentTime = _a.currentTime, volume = _a.volume, muted = _a.muted;\n            mediaInteractionCb({\n                type: type,\n                id: mirror.getId(target),\n                currentTime: currentTime,\n                volume: volume,\n                muted: muted,\n            });\n        }, sampling.media || 500);\n    };\n    var handlers = [\n        on('play', handler(0)),\n        on('pause', handler(1)),\n        on('seeked', handler(2)),\n        on('volumechange', handler(3)),\n    ];\n    return function () {\n        handlers.forEach(function (h) { return h(); });\n    };\n}\nfunction initFontObserver(_a) {\n    var fontCb = _a.fontCb, doc = _a.doc;\n    var win = doc.defaultView;\n    if (!win) {\n        return function () { };\n    }\n    var handlers = [];\n    var fontMap = new WeakMap();\n    var originalFontFace = win.FontFace;\n    win.FontFace = function FontFace(family, source, descriptors) {\n        var fontFace = new originalFontFace(family, source, descriptors);\n        fontMap.set(fontFace, {\n            family: family,\n            buffer: typeof source !== 'string',\n            descriptors: descriptors,\n            fontSource: typeof source === 'string'\n                ? source\n                :\n                    JSON.stringify(Array.from(new Uint8Array(source))),\n        });\n        return fontFace;\n    };\n    var restoreHandler = patch(doc.fonts, 'add', function (original) {\n        return function (fontFace) {\n            setTimeout(function () {\n                var p = fontMap.get(fontFace);\n                if (p) {\n                    fontCb(p);\n                    fontMap.delete(fontFace);\n                }\n            }, 0);\n            return original.apply(this, [fontFace]);\n        };\n    });\n    handlers.push(function () {\n        win.FontFace = originalFontFace;\n    });\n    handlers.push(restoreHandler);\n    return function () {\n        handlers.forEach(function (h) { return h(); });\n    };\n}\nfunction mergeHooks(o, hooks) {\n    var mutationCb = o.mutationCb, mousemoveCb = o.mousemoveCb, mouseInteractionCb = o.mouseInteractionCb, scrollCb = o.scrollCb, viewportResizeCb = o.viewportResizeCb, inputCb = o.inputCb, mediaInteractionCb = o.mediaInteractionCb, styleSheetRuleCb = o.styleSheetRuleCb, styleDeclarationCb = o.styleDeclarationCb, canvasMutationCb = o.canvasMutationCb, fontCb = o.fontCb;\n    o.mutationCb = function () {\n        var p = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            p[_i] = arguments[_i];\n        }\n        if (hooks.mutation) {\n            hooks.mutation.apply(hooks, __spreadArray([], __read(p), false));\n        }\n        mutationCb.apply(void 0, __spreadArray([], __read(p), false));\n    };\n    o.mousemoveCb = function () {\n        var p = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            p[_i] = arguments[_i];\n        }\n        if (hooks.mousemove) {\n            hooks.mousemove.apply(hooks, __spreadArray([], __read(p), false));\n        }\n        mousemoveCb.apply(void 0, __spreadArray([], __read(p), false));\n    };\n    o.mouseInteractionCb = function () {\n        var p = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            p[_i] = arguments[_i];\n        }\n        if (hooks.mouseInteraction) {\n            hooks.mouseInteraction.apply(hooks, __spreadArray([], __read(p), false));\n        }\n        mouseInteractionCb.apply(void 0, __spreadArray([], __read(p), false));\n    };\n    o.scrollCb = function () {\n        var p = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            p[_i] = arguments[_i];\n        }\n        if (hooks.scroll) {\n            hooks.scroll.apply(hooks, __spreadArray([], __read(p), false));\n        }\n        scrollCb.apply(void 0, __spreadArray([], __read(p), false));\n    };\n    o.viewportResizeCb = function () {\n        var p = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            p[_i] = arguments[_i];\n        }\n        if (hooks.viewportResize) {\n            hooks.viewportResize.apply(hooks, __spreadArray([], __read(p), false));\n        }\n        viewportResizeCb.apply(void 0, __spreadArray([], __read(p), false));\n    };\n    o.inputCb = function () {\n        var p = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            p[_i] = arguments[_i];\n        }\n        if (hooks.input) {\n            hooks.input.apply(hooks, __spreadArray([], __read(p), false));\n        }\n        inputCb.apply(void 0, __spreadArray([], __read(p), false));\n    };\n    o.mediaInteractionCb = function () {\n        var p = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            p[_i] = arguments[_i];\n        }\n        if (hooks.mediaInteaction) {\n            hooks.mediaInteaction.apply(hooks, __spreadArray([], __read(p), false));\n        }\n        mediaInteractionCb.apply(void 0, __spreadArray([], __read(p), false));\n    };\n    o.styleSheetRuleCb = function () {\n        var p = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            p[_i] = arguments[_i];\n        }\n        if (hooks.styleSheetRule) {\n            hooks.styleSheetRule.apply(hooks, __spreadArray([], __read(p), false));\n        }\n        styleSheetRuleCb.apply(void 0, __spreadArray([], __read(p), false));\n    };\n    o.styleDeclarationCb = function () {\n        var p = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            p[_i] = arguments[_i];\n        }\n        if (hooks.styleDeclaration) {\n            hooks.styleDeclaration.apply(hooks, __spreadArray([], __read(p), false));\n        }\n        styleDeclarationCb.apply(void 0, __spreadArray([], __read(p), false));\n    };\n    o.canvasMutationCb = function () {\n        var p = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            p[_i] = arguments[_i];\n        }\n        if (hooks.canvasMutation) {\n            hooks.canvasMutation.apply(hooks, __spreadArray([], __read(p), false));\n        }\n        canvasMutationCb.apply(void 0, __spreadArray([], __read(p), false));\n    };\n    o.fontCb = function () {\n        var p = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            p[_i] = arguments[_i];\n        }\n        if (hooks.font) {\n            hooks.font.apply(hooks, __spreadArray([], __read(p), false));\n        }\n        fontCb.apply(void 0, __spreadArray([], __read(p), false));\n    };\n}\nfunction initObservers(o, hooks) {\n    var e_1, _a;\n    if (hooks === void 0) { hooks = {}; }\n    var currentWindow = o.doc.defaultView;\n    if (!currentWindow) {\n        return function () { };\n    }\n    mergeHooks(o, hooks);\n    var mutationObserver = initMutationObserver(o, o.doc);\n    var mousemoveHandler = initMoveObserver(o);\n    var mouseInteractionHandler = initMouseInteractionObserver(o);\n    var scrollHandler = initScrollObserver(o);\n    var viewportResizeHandler = initViewportResizeObserver(o);\n    var inputHandler = initInputObserver(o);\n    var mediaInteractionHandler = initMediaInteractionObserver(o);\n    var styleSheetObserver = initStyleSheetObserver(o, { win: currentWindow });\n    var styleDeclarationObserver = initStyleDeclarationObserver(o, {\n        win: currentWindow,\n    });\n    var fontObserver = o.collectFonts ? initFontObserver(o) : function () { };\n    var pluginHandlers = [];\n    try {\n        for (var _b = __values(o.plugins), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var plugin = _c.value;\n            pluginHandlers.push(plugin.observer(plugin.callback, currentWindow, plugin.options));\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return function () {\n        mutationBuffers.forEach(function (b) { return b.reset(); });\n        mutationObserver.disconnect();\n        mousemoveHandler();\n        mouseInteractionHandler();\n        scrollHandler();\n        viewportResizeHandler();\n        inputHandler();\n        mediaInteractionHandler();\n        try {\n            styleSheetObserver();\n            styleDeclarationObserver();\n        }\n        catch (e) {\n        }\n        fontObserver();\n        pluginHandlers.forEach(function (h) { return h(); });\n    };\n}\n\nexport { INPUT_TAGS, initMutationObserver, initObservers, initScrollObserver, mutationBuffers };\n","var IframeManager = (function () {\n    function IframeManager(options) {\n        this.iframes = new WeakMap();\n        this.mutationCb = options.mutationCb;\n    }\n    IframeManager.prototype.addIframe = function (iframeEl) {\n        this.iframes.set(iframeEl, true);\n    };\n    IframeManager.prototype.addLoadListener = function (cb) {\n        this.loadListener = cb;\n    };\n    IframeManager.prototype.attachIframe = function (iframeEl, childSn) {\n        var _a;\n        this.mutationCb({\n            adds: [\n                {\n                    parentId: iframeEl.__sn.id,\n                    nextId: null,\n                    node: childSn,\n                },\n            ],\n            removes: [],\n            texts: [],\n            attributes: [],\n            isAttachIframe: true,\n        });\n        (_a = this.loadListener) === null || _a === void 0 ? void 0 : _a.call(this, iframeEl);\n    };\n    return IframeManager;\n}());\n\nexport { IframeManager };\n","import { __assign } from '../../ext/tslib/tslib.es6.js';\nimport { initMutationObserver, initScrollObserver } from './observer.js';\nimport { patch } from '../utils.js';\n\nvar ShadowDomManager = (function () {\n    function ShadowDomManager(options) {\n        this.restorePatches = [];\n        this.mutationCb = options.mutationCb;\n        this.scrollCb = options.scrollCb;\n        this.bypassOptions = options.bypassOptions;\n        this.mirror = options.mirror;\n        var manager = this;\n        this.restorePatches.push(patch(HTMLElement.prototype, 'attachShadow', function (original) {\n            return function () {\n                var shadowRoot = original.apply(this, arguments);\n                if (this.shadowRoot)\n                    manager.addShadowRoot(this.shadowRoot, this.ownerDocument);\n                return shadowRoot;\n            };\n        }));\n    }\n    ShadowDomManager.prototype.addShadowRoot = function (shadowRoot, doc) {\n        initMutationObserver(__assign(__assign({}, this.bypassOptions), { doc: doc, mutationCb: this.mutationCb, mirror: this.mirror, shadowDomManager: this }), shadowRoot);\n        initScrollObserver(__assign(__assign({}, this.bypassOptions), { scrollCb: this.scrollCb, doc: shadowRoot, mirror: this.mirror }));\n    };\n    ShadowDomManager.prototype.observeAttachShadow = function (iframeElement) {\n        if (iframeElement.contentWindow) {\n            var manager_1 = this;\n            this.restorePatches.push(patch(iframeElement.contentWindow.HTMLElement.prototype, 'attachShadow', function (original) {\n                return function () {\n                    var shadowRoot = original.apply(this, arguments);\n                    if (this.shadowRoot)\n                        manager_1.addShadowRoot(this.shadowRoot, iframeElement.contentDocument);\n                    return shadowRoot;\n                };\n            }));\n        }\n    };\n    ShadowDomManager.prototype.reset = function () {\n        this.restorePatches.forEach(function (restorePatch) { return restorePatch(); });\n    };\n    return ShadowDomManager;\n}());\n\nexport { ShadowDomManager };\n","import { __values, __spreadArray, __read } from '../../../../ext/tslib/tslib.es6.js';\nimport { CanvasContext } from '../../../types.js';\nimport { patch, isBlocked, hookSetter } from '../../../utils.js';\n\nfunction initCanvas2DMutationObserver(cb, win, blockClass, mirror) {\n    var e_1, _a;\n    var handlers = [];\n    var props2D = Object.getOwnPropertyNames(win.CanvasRenderingContext2D.prototype);\n    var _loop_1 = function (prop) {\n        try {\n            if (typeof win.CanvasRenderingContext2D.prototype[prop] !== 'function') {\n                return \"continue\";\n            }\n            var restoreHandler = patch(win.CanvasRenderingContext2D.prototype, prop, function (original) {\n                return function () {\n                    var _this = this;\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    if (!isBlocked(this.canvas, blockClass)) {\n                        setTimeout(function () {\n                            var recordArgs = __spreadArray([], __read(args), false);\n                            if (prop === 'drawImage') {\n                                if (recordArgs[0] &&\n                                    recordArgs[0] instanceof HTMLCanvasElement) {\n                                    var canvas = recordArgs[0];\n                                    var ctx = canvas.getContext('2d');\n                                    var imgd = ctx === null || ctx === void 0 ? void 0 : ctx.getImageData(0, 0, canvas.width, canvas.height);\n                                    var pix = imgd === null || imgd === void 0 ? void 0 : imgd.data;\n                                    recordArgs[0] = JSON.stringify(pix);\n                                }\n                            }\n                            cb(_this.canvas, {\n                                type: CanvasContext['2D'],\n                                property: prop,\n                                args: recordArgs,\n                            });\n                        }, 0);\n                    }\n                    return original.apply(this, args);\n                };\n            });\n            handlers.push(restoreHandler);\n        }\n        catch (_b) {\n            var hookHandler = hookSetter(win.CanvasRenderingContext2D.prototype, prop, {\n                set: function (v) {\n                    cb(this.canvas, {\n                        type: CanvasContext['2D'],\n                        property: prop,\n                        args: [v],\n                        setter: true,\n                    });\n                },\n            });\n            handlers.push(hookHandler);\n        }\n    };\n    try {\n        for (var props2D_1 = __values(props2D), props2D_1_1 = props2D_1.next(); !props2D_1_1.done; props2D_1_1 = props2D_1.next()) {\n            var prop = props2D_1_1.value;\n            _loop_1(prop);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (props2D_1_1 && !props2D_1_1.done && (_a = props2D_1.return)) _a.call(props2D_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return function () {\n        handlers.forEach(function (h) { return h(); });\n    };\n}\n\nexport default initCanvas2DMutationObserver;\n","import { __spreadArray, __read } from '../../../../ext/tslib/tslib.es6.js';\nimport { patch, isBlocked } from '../../../utils.js';\n\nfunction initCanvasContextObserver(win, blockClass) {\n    var handlers = [];\n    try {\n        var restoreHandler = patch(win.HTMLCanvasElement.prototype, 'getContext', function (original) {\n            return function (contextType) {\n                var args = [];\n                for (var _i = 1; _i < arguments.length; _i++) {\n                    args[_i - 1] = arguments[_i];\n                }\n                if (!isBlocked(this, blockClass)) {\n                    if (!('__context' in this))\n                        this.__context = contextType;\n                }\n                return original.apply(this, __spreadArray([contextType], __read(args), false));\n            };\n        });\n        handlers.push(restoreHandler);\n    }\n    catch (_a) {\n        console.error('failed to patch HTMLCanvasElement.prototype.getContext');\n    }\n    return function () {\n        handlers.forEach(function (h) { return h(); });\n    };\n}\n\nexport default initCanvasContextObserver;\n","/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode, encode };\n","import { __spreadArray, __read } from '../../../../ext/tslib/tslib.es6.js';\nimport { encode } from '../../../../../../ext/base64-arraybuffer/dist/base64-arraybuffer.es5.js';\n\nvar webGLVarMap = new Map();\nfunction variableListFor(ctx, ctor) {\n    var contextMap = webGLVarMap.get(ctx);\n    if (!contextMap) {\n        contextMap = new Map();\n        webGLVarMap.set(ctx, contextMap);\n    }\n    if (!contextMap.has(ctor)) {\n        contextMap.set(ctor, []);\n    }\n    return contextMap.get(ctor);\n}\nvar saveWebGLVar = function (value, win, ctx) {\n    if (!value ||\n        !(isInstanceOfWebGLObject(value, win) || typeof value === 'object'))\n        return;\n    var name = value.constructor.name;\n    var list = variableListFor(ctx, name);\n    var index = list.indexOf(value);\n    if (index === -1) {\n        index = list.length;\n        list.push(value);\n    }\n    return index;\n};\nfunction serializeArg(value, win, ctx) {\n    if (value instanceof Array) {\n        return value.map(function (arg) { return serializeArg(arg, win, ctx); });\n    }\n    else if (value === null) {\n        return value;\n    }\n    else if (value instanceof Float32Array ||\n        value instanceof Float64Array ||\n        value instanceof Int32Array ||\n        value instanceof Uint32Array ||\n        value instanceof Uint8Array ||\n        value instanceof Uint16Array ||\n        value instanceof Int16Array ||\n        value instanceof Int8Array ||\n        value instanceof Uint8ClampedArray) {\n        var name_1 = value.constructor.name;\n        return {\n            rr_type: name_1,\n            args: [Object.values(value)],\n        };\n    }\n    else if (value instanceof ArrayBuffer) {\n        var name_2 = value.constructor.name;\n        var base64 = encode(value);\n        return {\n            rr_type: name_2,\n            base64: base64,\n        };\n    }\n    else if (value instanceof DataView) {\n        var name_3 = value.constructor.name;\n        return {\n            rr_type: name_3,\n            args: [\n                serializeArg(value.buffer, win, ctx),\n                value.byteOffset,\n                value.byteLength,\n            ],\n        };\n    }\n    else if (value instanceof HTMLImageElement) {\n        var name_4 = value.constructor.name;\n        var src = value.src;\n        return {\n            rr_type: name_4,\n            src: src,\n        };\n    }\n    else if (value instanceof ImageData) {\n        var name_5 = value.constructor.name;\n        return {\n            rr_type: name_5,\n            args: [serializeArg(value.data, win, ctx), value.width, value.height],\n        };\n    }\n    else if (isInstanceOfWebGLObject(value, win) || typeof value === 'object') {\n        var name_6 = value.constructor.name;\n        var index = saveWebGLVar(value, win, ctx);\n        return {\n            rr_type: name_6,\n            index: index,\n        };\n    }\n    return value;\n}\nvar serializeArgs = function (args, win, ctx) {\n    return __spreadArray([], __read(args), false).map(function (arg) { return serializeArg(arg, win, ctx); });\n};\nvar isInstanceOfWebGLObject = function (value, win) {\n    var webGLConstructorNames = [\n        'WebGLActiveInfo',\n        'WebGLBuffer',\n        'WebGLFramebuffer',\n        'WebGLProgram',\n        'WebGLRenderbuffer',\n        'WebGLShader',\n        'WebGLShaderPrecisionFormat',\n        'WebGLTexture',\n        'WebGLUniformLocation',\n        'WebGLVertexArrayObject',\n        'WebGLVertexArrayObjectOES',\n    ];\n    var supportedWebGLConstructorNames = webGLConstructorNames.filter(function (name) { return typeof win[name] === 'function'; });\n    return Boolean(supportedWebGLConstructorNames.find(function (name) { return value instanceof win[name]; }));\n};\n\nexport { isInstanceOfWebGLObject, saveWebGLVar, serializeArg, serializeArgs, variableListFor };\n","import { __spreadArray, __read, __values } from '../../../../ext/tslib/tslib.es6.js';\nimport { CanvasContext } from '../../../types.js';\nimport { patch, isBlocked, hookSetter } from '../../../utils.js';\nimport { saveWebGLVar, serializeArgs } from './serialize-args.js';\n\nfunction patchGLPrototype(prototype, type, cb, blockClass, mirror, win) {\n    var e_1, _a;\n    var handlers = [];\n    var props = Object.getOwnPropertyNames(prototype);\n    var _loop_1 = function (prop) {\n        try {\n            if (typeof prototype[prop] !== 'function') {\n                return \"continue\";\n            }\n            var restoreHandler = patch(prototype, prop, function (original) {\n                return function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var result = original.apply(this, args);\n                    saveWebGLVar(result, win, prototype);\n                    if (!isBlocked(this.canvas, blockClass)) {\n                        var id = mirror.getId(this.canvas);\n                        var recordArgs = serializeArgs(__spreadArray([], __read(args), false), win, prototype);\n                        var mutation = {\n                            type: type,\n                            property: prop,\n                            args: recordArgs,\n                        };\n                        cb(this.canvas, mutation);\n                    }\n                    return result;\n                };\n            });\n            handlers.push(restoreHandler);\n        }\n        catch (_b) {\n            var hookHandler = hookSetter(prototype, prop, {\n                set: function (v) {\n                    cb(this.canvas, {\n                        type: type,\n                        property: prop,\n                        args: [v],\n                        setter: true,\n                    });\n                },\n            });\n            handlers.push(hookHandler);\n        }\n    };\n    try {\n        for (var props_1 = __values(props), props_1_1 = props_1.next(); !props_1_1.done; props_1_1 = props_1.next()) {\n            var prop = props_1_1.value;\n            _loop_1(prop);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (props_1_1 && !props_1_1.done && (_a = props_1.return)) _a.call(props_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return handlers;\n}\nfunction initCanvasWebGLMutationObserver(cb, win, blockClass, mirror) {\n    var handlers = [];\n    handlers.push.apply(handlers, __spreadArray([], __read(patchGLPrototype(win.WebGLRenderingContext.prototype, CanvasContext.WebGL, cb, blockClass, mirror, win)), false));\n    if (typeof win.WebGL2RenderingContext !== 'undefined') {\n        handlers.push.apply(handlers, __spreadArray([], __read(patchGLPrototype(win.WebGL2RenderingContext.prototype, CanvasContext.WebGL2, cb, blockClass, mirror, win)), false));\n    }\n    return function () {\n        handlers.forEach(function (h) { return h(); });\n    };\n}\n\nexport default initCanvasWebGLMutationObserver;\n","import { __rest } from '../../../../ext/tslib/tslib.es6.js';\nimport initCanvas2DMutationObserver from './2d.js';\nimport initCanvasContextObserver from './canvas.js';\nimport initCanvasWebGLMutationObserver from './webgl.js';\n\nvar CanvasManager = (function () {\n    function CanvasManager(options) {\n        this.pendingCanvasMutations = new Map();\n        this.rafStamps = { latestId: 0, invokeId: null };\n        this.frozen = false;\n        this.locked = false;\n        this.processMutation = function (target, mutation) {\n            var newFrame = this.rafStamps.invokeId &&\n                this.rafStamps.latestId !== this.rafStamps.invokeId;\n            if (newFrame || !this.rafStamps.invokeId)\n                this.rafStamps.invokeId = this.rafStamps.latestId;\n            if (!this.pendingCanvasMutations.has(target)) {\n                this.pendingCanvasMutations.set(target, []);\n            }\n            this.pendingCanvasMutations.get(target).push(mutation);\n        };\n        this.mutationCb = options.mutationCb;\n        this.mirror = options.mirror;\n        if (options.recordCanvas === true)\n            this.initCanvasMutationObserver(options.win, options.blockClass);\n    }\n    CanvasManager.prototype.reset = function () {\n        this.pendingCanvasMutations.clear();\n        this.resetObservers && this.resetObservers();\n    };\n    CanvasManager.prototype.freeze = function () {\n        this.frozen = true;\n    };\n    CanvasManager.prototype.unfreeze = function () {\n        this.frozen = false;\n    };\n    CanvasManager.prototype.lock = function () {\n        this.locked = true;\n    };\n    CanvasManager.prototype.unlock = function () {\n        this.locked = false;\n    };\n    CanvasManager.prototype.initCanvasMutationObserver = function (win, blockClass) {\n        this.startRAFTimestamping();\n        this.startPendingCanvasMutationFlusher();\n        var canvasContextReset = initCanvasContextObserver(win, blockClass);\n        var canvas2DReset = initCanvas2DMutationObserver(this.processMutation.bind(this), win, blockClass, this.mirror);\n        var canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(this.processMutation.bind(this), win, blockClass, this.mirror);\n        this.resetObservers = function () {\n            canvasContextReset();\n            canvas2DReset();\n            canvasWebGL1and2Reset();\n        };\n    };\n    CanvasManager.prototype.startPendingCanvasMutationFlusher = function () {\n        var _this = this;\n        requestAnimationFrame(function () { return _this.flushPendingCanvasMutations(); });\n    };\n    CanvasManager.prototype.startRAFTimestamping = function () {\n        var _this = this;\n        var setLatestRAFTimestamp = function (timestamp) {\n            _this.rafStamps.latestId = timestamp;\n            requestAnimationFrame(setLatestRAFTimestamp);\n        };\n        requestAnimationFrame(setLatestRAFTimestamp);\n    };\n    CanvasManager.prototype.flushPendingCanvasMutations = function () {\n        var _this = this;\n        this.pendingCanvasMutations.forEach(function (values, canvas) {\n            var id = _this.mirror.getId(canvas);\n            _this.flushPendingCanvasMutationFor(canvas, id);\n        });\n        requestAnimationFrame(function () { return _this.flushPendingCanvasMutations(); });\n    };\n    CanvasManager.prototype.flushPendingCanvasMutationFor = function (canvas, id) {\n        if (this.frozen || this.locked) {\n            return;\n        }\n        var valuesWithType = this.pendingCanvasMutations.get(canvas);\n        if (!valuesWithType || id === -1)\n            return;\n        var values = valuesWithType.map(function (value) {\n            value.type; var rest = __rest(value, [\"type\"]);\n            return rest;\n        });\n        var type = valuesWithType[0].type;\n        this.mutationCb({ id: id, type: type, commands: values });\n        this.pendingCanvasMutations.delete(canvas);\n    };\n    return CanvasManager;\n}());\n\nexport { CanvasManager };\n","import { __assign, __read, __values } from '../../ext/tslib/tslib.es6.js';\nimport { snapshot } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { initObservers, mutationBuffers } from './observer.js';\nimport { polyfill, on, createMirror, getWindowWidth, getWindowHeight, isIframeINode, hasShadowRoot } from '../utils.js';\nimport { EventType, IncrementalSource } from '../types.js';\nimport { IframeManager } from './iframe-manager.js';\nimport { ShadowDomManager } from './shadow-dom-manager.js';\nimport { CanvasManager } from './observers/canvas/canvas-manager.js';\n\nfunction wrapEvent(e) {\n    return __assign(__assign({}, e), { timestamp: Date.now() });\n}\nvar wrappedEmit;\nvar takeFullSnapshot;\nvar mirror = createMirror();\nfunction record(options) {\n    if (options === void 0) { options = {}; }\n    var emit = options.emit, checkoutEveryNms = options.checkoutEveryNms, checkoutEveryNth = options.checkoutEveryNth, _a = options.blockClass, blockClass = _a === void 0 ? 'rr-block' : _a, _b = options.blockSelector, blockSelector = _b === void 0 ? null : _b, _c = options.unblockSelector, unblockSelector = _c === void 0 ? null : _c, _d = options.ignoreClass, ignoreClass = _d === void 0 ? 'rr-ignore' : _d, _e = options.ignoreSelector, ignoreSelector = _e === void 0 ? null : _e, _f = options.maskTextClass, maskTextClass = _f === void 0 ? 'rr-mask' : _f, _g = options.maskTextSelector, maskTextSelector = _g === void 0 ? null : _g, _h = options.maskInputSelector, maskInputSelector = _h === void 0 ? null : _h, _j = options.unmaskTextSelector, unmaskTextSelector = _j === void 0 ? null : _j, _k = options.unmaskInputSelector, unmaskInputSelector = _k === void 0 ? null : _k, _l = options.inlineStylesheet, inlineStylesheet = _l === void 0 ? true : _l, maskAllInputs = options.maskAllInputs, _maskInputOptions = options.maskInputOptions, _slimDOMOptions = options.slimDOMOptions, maskInputFn = options.maskInputFn, maskTextFn = options.maskTextFn, hooks = options.hooks, packFn = options.packFn, _m = options.sampling, sampling = _m === void 0 ? {} : _m, mousemoveWait = options.mousemoveWait, _o = options.recordCanvas, recordCanvas = _o === void 0 ? false : _o, _p = options.userTriggeredOnInput, userTriggeredOnInput = _p === void 0 ? false : _p, _q = options.collectFonts, collectFonts = _q === void 0 ? false : _q, _r = options.inlineImages, inlineImages = _r === void 0 ? false : _r, plugins = options.plugins, _s = options.keepIframeSrcFn, keepIframeSrcFn = _s === void 0 ? function () { return false; } : _s;\n    if (!emit) {\n        throw new Error('emit function is required');\n    }\n    if (mousemoveWait !== undefined && sampling.mousemove === undefined) {\n        sampling.mousemove = mousemoveWait;\n    }\n    var maskInputOptions = maskAllInputs === true\n        ? {\n            color: true,\n            date: true,\n            'datetime-local': true,\n            email: true,\n            month: true,\n            number: true,\n            range: true,\n            search: true,\n            tel: true,\n            text: true,\n            time: true,\n            url: true,\n            week: true,\n            textarea: true,\n            select: true,\n            password: true,\n        }\n        : _maskInputOptions !== undefined\n            ? _maskInputOptions\n            : { password: true };\n    var slimDOMOptions = _slimDOMOptions === true || _slimDOMOptions === 'all'\n        ? {\n            script: true,\n            comment: true,\n            headFavicon: true,\n            headWhitespace: true,\n            headMetaSocial: true,\n            headMetaRobots: true,\n            headMetaHttpEquiv: true,\n            headMetaVerification: true,\n            headMetaAuthorship: _slimDOMOptions === 'all',\n            headMetaDescKeywords: _slimDOMOptions === 'all',\n        }\n        : _slimDOMOptions\n            ? _slimDOMOptions\n            : {};\n    polyfill();\n    var lastFullSnapshotEvent;\n    var incrementalSnapshotCount = 0;\n    var eventProcessor = function (e) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(plugins || []), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var plugin = _c.value;\n                if (plugin.eventProcessor) {\n                    e = plugin.eventProcessor(e);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (packFn) {\n            e = packFn(e);\n        }\n        return e;\n    };\n    wrappedEmit = function (e, isCheckout) {\n        var _a;\n        if (((_a = mutationBuffers[0]) === null || _a === void 0 ? void 0 : _a.isFrozen()) &&\n            e.type !== EventType.FullSnapshot &&\n            !(e.type === EventType.IncrementalSnapshot &&\n                e.data.source === IncrementalSource.Mutation)) {\n            mutationBuffers.forEach(function (buf) { return buf.unfreeze(); });\n        }\n        emit(eventProcessor(e), isCheckout);\n        if (e.type === EventType.FullSnapshot) {\n            lastFullSnapshotEvent = e;\n            incrementalSnapshotCount = 0;\n        }\n        else if (e.type === EventType.IncrementalSnapshot) {\n            if (e.data.source === IncrementalSource.Mutation &&\n                e.data.isAttachIframe) {\n                return;\n            }\n            incrementalSnapshotCount++;\n            var exceedCount = checkoutEveryNth && incrementalSnapshotCount >= checkoutEveryNth;\n            var exceedTime = checkoutEveryNms &&\n                e.timestamp - lastFullSnapshotEvent.timestamp > checkoutEveryNms;\n            if (exceedCount || exceedTime) {\n                takeFullSnapshot(true);\n            }\n        }\n    };\n    var wrappedMutationEmit = function (m) {\n        wrappedEmit(wrapEvent({\n            type: EventType.IncrementalSnapshot,\n            data: __assign({ source: IncrementalSource.Mutation }, m),\n        }));\n    };\n    var wrappedScrollEmit = function (p) {\n        return wrappedEmit(wrapEvent({\n            type: EventType.IncrementalSnapshot,\n            data: __assign({ source: IncrementalSource.Scroll }, p),\n        }));\n    };\n    var wrappedCanvasMutationEmit = function (p) {\n        return wrappedEmit(wrapEvent({\n            type: EventType.IncrementalSnapshot,\n            data: __assign({ source: IncrementalSource.CanvasMutation }, p),\n        }));\n    };\n    var iframeManager = new IframeManager({\n        mutationCb: wrappedMutationEmit,\n    });\n    var canvasManager = new CanvasManager({\n        recordCanvas: recordCanvas,\n        mutationCb: wrappedCanvasMutationEmit,\n        win: window,\n        blockClass: blockClass,\n        mirror: mirror,\n    });\n    var shadowDomManager = new ShadowDomManager({\n        mutationCb: wrappedMutationEmit,\n        scrollCb: wrappedScrollEmit,\n        bypassOptions: {\n            blockClass: blockClass,\n            blockSelector: blockSelector,\n            unblockSelector: unblockSelector,\n            maskTextClass: maskTextClass,\n            maskTextSelector: maskTextSelector,\n            unmaskTextSelector: unmaskTextSelector,\n            maskInputSelector: maskInputSelector,\n            unmaskInputSelector: unmaskInputSelector,\n            inlineStylesheet: inlineStylesheet,\n            maskInputOptions: maskInputOptions,\n            maskTextFn: maskTextFn,\n            maskInputFn: maskInputFn,\n            recordCanvas: recordCanvas,\n            inlineImages: inlineImages,\n            sampling: sampling,\n            slimDOMOptions: slimDOMOptions,\n            iframeManager: iframeManager,\n            canvasManager: canvasManager,\n        },\n        mirror: mirror,\n    });\n    takeFullSnapshot = function (isCheckout) {\n        var _a, _b, _c, _d;\n        if (isCheckout === void 0) { isCheckout = false; }\n        wrappedEmit(wrapEvent({\n            type: EventType.Meta,\n            data: {\n                href: window.location.href,\n                width: getWindowWidth(),\n                height: getWindowHeight(),\n            },\n        }), isCheckout);\n        mutationBuffers.forEach(function (buf) { return buf.lock(); });\n        var _e = __read(snapshot(document, {\n            blockClass: blockClass,\n            blockSelector: blockSelector,\n            unblockSelector: unblockSelector,\n            maskTextClass: maskTextClass,\n            maskTextSelector: maskTextSelector,\n            unmaskTextSelector: unmaskTextSelector,\n            maskInputSelector: maskInputSelector,\n            unmaskInputSelector: unmaskInputSelector,\n            inlineStylesheet: inlineStylesheet,\n            maskAllInputs: maskInputOptions,\n            maskTextFn: maskTextFn,\n            slimDOM: slimDOMOptions,\n            recordCanvas: recordCanvas,\n            inlineImages: inlineImages,\n            onSerialize: function (n) {\n                if (isIframeINode(n)) {\n                    iframeManager.addIframe(n);\n                }\n                if (hasShadowRoot(n)) {\n                    shadowDomManager.addShadowRoot(n.shadowRoot, document);\n                }\n            },\n            onIframeLoad: function (iframe, childSn) {\n                iframeManager.attachIframe(iframe, childSn);\n                shadowDomManager.observeAttachShadow(iframe);\n            },\n            keepIframeSrcFn: keepIframeSrcFn,\n        }), 2), node = _e[0], idNodeMap = _e[1];\n        if (!node) {\n            return console.warn('Failed to snapshot the document');\n        }\n        mirror.map = idNodeMap;\n        wrappedEmit(wrapEvent({\n            type: EventType.FullSnapshot,\n            data: {\n                node: node,\n                initialOffset: {\n                    left: window.pageXOffset !== undefined\n                        ? window.pageXOffset\n                        : (document === null || document === void 0 ? void 0 : document.documentElement.scrollLeft) ||\n                            ((_b = (_a = document === null || document === void 0 ? void 0 : document.body) === null || _a === void 0 ? void 0 : _a.parentElement) === null || _b === void 0 ? void 0 : _b.scrollLeft) ||\n                            (document === null || document === void 0 ? void 0 : document.body.scrollLeft) ||\n                            0,\n                    top: window.pageYOffset !== undefined\n                        ? window.pageYOffset\n                        : (document === null || document === void 0 ? void 0 : document.documentElement.scrollTop) ||\n                            ((_d = (_c = document === null || document === void 0 ? void 0 : document.body) === null || _c === void 0 ? void 0 : _c.parentElement) === null || _d === void 0 ? void 0 : _d.scrollTop) ||\n                            (document === null || document === void 0 ? void 0 : document.body.scrollTop) ||\n                            0,\n                },\n            },\n        }));\n        mutationBuffers.forEach(function (buf) { return buf.unlock(); });\n    };\n    try {\n        var handlers_1 = [];\n        handlers_1.push(on('DOMContentLoaded', function () {\n            wrappedEmit(wrapEvent({\n                type: EventType.DomContentLoaded,\n                data: {},\n            }));\n        }));\n        var observe_1 = function (doc) {\n            var _a;\n            return initObservers({\n                mutationCb: wrappedMutationEmit,\n                mousemoveCb: function (positions, source) {\n                    return wrappedEmit(wrapEvent({\n                        type: EventType.IncrementalSnapshot,\n                        data: {\n                            source: source,\n                            positions: positions,\n                        },\n                    }));\n                },\n                mouseInteractionCb: function (d) {\n                    return wrappedEmit(wrapEvent({\n                        type: EventType.IncrementalSnapshot,\n                        data: __assign({ source: IncrementalSource.MouseInteraction }, d),\n                    }));\n                },\n                scrollCb: wrappedScrollEmit,\n                viewportResizeCb: function (d) {\n                    return wrappedEmit(wrapEvent({\n                        type: EventType.IncrementalSnapshot,\n                        data: __assign({ source: IncrementalSource.ViewportResize }, d),\n                    }));\n                },\n                inputCb: function (v) {\n                    return wrappedEmit(wrapEvent({\n                        type: EventType.IncrementalSnapshot,\n                        data: __assign({ source: IncrementalSource.Input }, v),\n                    }));\n                },\n                mediaInteractionCb: function (p) {\n                    return wrappedEmit(wrapEvent({\n                        type: EventType.IncrementalSnapshot,\n                        data: __assign({ source: IncrementalSource.MediaInteraction }, p),\n                    }));\n                },\n                styleSheetRuleCb: function (r) {\n                    return wrappedEmit(wrapEvent({\n                        type: EventType.IncrementalSnapshot,\n                        data: __assign({ source: IncrementalSource.StyleSheetRule }, r),\n                    }));\n                },\n                styleDeclarationCb: function (r) {\n                    return wrappedEmit(wrapEvent({\n                        type: EventType.IncrementalSnapshot,\n                        data: __assign({ source: IncrementalSource.StyleDeclaration }, r),\n                    }));\n                },\n                canvasMutationCb: wrappedCanvasMutationEmit,\n                fontCb: function (p) {\n                    return wrappedEmit(wrapEvent({\n                        type: EventType.IncrementalSnapshot,\n                        data: __assign({ source: IncrementalSource.Font }, p),\n                    }));\n                },\n                blockClass: blockClass,\n                ignoreClass: ignoreClass,\n                ignoreSelector: ignoreSelector,\n                maskTextClass: maskTextClass,\n                maskTextSelector: maskTextSelector,\n                unmaskTextSelector: unmaskTextSelector,\n                maskInputSelector: maskInputSelector,\n                unmaskInputSelector: unmaskInputSelector,\n                maskInputOptions: maskInputOptions,\n                inlineStylesheet: inlineStylesheet,\n                sampling: sampling,\n                recordCanvas: recordCanvas,\n                inlineImages: inlineImages,\n                userTriggeredOnInput: userTriggeredOnInput,\n                collectFonts: collectFonts,\n                doc: doc,\n                maskInputFn: maskInputFn,\n                maskTextFn: maskTextFn,\n                blockSelector: blockSelector,\n                unblockSelector: unblockSelector,\n                slimDOMOptions: slimDOMOptions,\n                mirror: mirror,\n                iframeManager: iframeManager,\n                shadowDomManager: shadowDomManager,\n                canvasManager: canvasManager,\n                plugins: ((_a = plugins === null || plugins === void 0 ? void 0 : plugins.filter(function (p) { return p.observer; })) === null || _a === void 0 ? void 0 : _a.map(function (p) { return ({\n                    observer: p.observer,\n                    options: p.options,\n                    callback: function (payload) {\n                        return wrappedEmit(wrapEvent({\n                            type: EventType.Plugin,\n                            data: {\n                                plugin: p.name,\n                                payload: payload,\n                            },\n                        }));\n                    },\n                }); })) || [],\n            }, hooks);\n        };\n        iframeManager.addLoadListener(function (iframeEl) {\n            try {\n                handlers_1.push(observe_1(iframeEl.contentDocument));\n            }\n            catch (error) {\n                console.warn(error);\n            }\n        });\n        var init_1 = function () {\n            takeFullSnapshot();\n            handlers_1.push(observe_1(document));\n        };\n        if (document.readyState === 'interactive' ||\n            document.readyState === 'complete') {\n            init_1();\n        }\n        else {\n            handlers_1.push(on('load', function () {\n                wrappedEmit(wrapEvent({\n                    type: EventType.Load,\n                    data: {},\n                }));\n                init_1();\n            }, window));\n        }\n        return function () {\n            handlers_1.forEach(function (h) { return h(); });\n        };\n    }\n    catch (error) {\n        console.warn(error);\n    }\n}\nrecord.addCustomEvent = function (tag, payload) {\n    if (!wrappedEmit) {\n        throw new Error('please add custom event after start recording');\n    }\n    wrappedEmit(wrapEvent({\n        type: EventType.Custom,\n        data: {\n            tag: tag,\n            payload: payload,\n        },\n    }));\n};\nrecord.freezePage = function () {\n    mutationBuffers.forEach(function (buf) { return buf.freeze(); });\n};\nrecord.takeFullSnapshot = function (isCheckout) {\n    if (!takeFullSnapshot) {\n        throw new Error('please take full snapshot after start recording');\n    }\n    takeFullSnapshot(isCheckout);\n};\nrecord.mirror = mirror;\n\nexport default record;\n","import type { PerformanceNavigationTiming, PerformancePaintTiming } from '../types';\n\nconst NAVIGATION_ENTRY_KEYS: Array<keyof PerformanceNavigationTiming> = [\n  'name',\n  'type',\n  'startTime',\n  'transferSize',\n  'duration',\n];\n\nfunction isNavigationEntryEqual(a: PerformanceNavigationTiming) {\n  return function (b: PerformanceNavigationTiming) {\n    return NAVIGATION_ENTRY_KEYS.every(key => a[key] === b[key]);\n  };\n}\n\n/**\n * There are some difficulties diagnosing why there are duplicate navigation\n * entries. We've witnessed several intermittent results:\n * - duplicate entries have duration = 0\n * - duplicate entries are the same object reference\n * - none of the above\n *\n * Compare the values of several keys to determine if the entries are duplicates or not.\n */\n// TODO (high-prio): Figure out wth is returned here\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function dedupePerformanceEntries(\n  currentList: PerformanceEntryList,\n  newList: PerformanceEntryList,\n): PerformanceEntryList {\n  // Partition `currentList` into 3 different lists based on entryType\n  const [existingNavigationEntries, existingLcpEntries, existingEntries] = currentList.reduce(\n    (acc: [PerformanceNavigationTiming[], PerformancePaintTiming[], PerformanceEntryList], entry) => {\n      if (entry.entryType === 'navigation') {\n        acc[0].push(entry as PerformanceNavigationTiming);\n      } else if (entry.entryType === 'largest-contentful-paint') {\n        acc[1].push(entry as PerformancePaintTiming);\n      } else {\n        acc[2].push(entry);\n      }\n      return acc;\n    },\n    [[], [], []],\n  );\n\n  const newEntries: PerformanceEntryList = [];\n  const newNavigationEntries: PerformanceNavigationTiming[] = [];\n  let newLcpEntry: PerformancePaintTiming | undefined = existingLcpEntries.length\n    ? existingLcpEntries[existingLcpEntries.length - 1] // Take the last element as list is sorted\n    : undefined;\n\n  newList.forEach(entry => {\n    if (entry.entryType === 'largest-contentful-paint') {\n      // We want the latest LCP event only\n      if (!newLcpEntry || newLcpEntry.startTime < entry.startTime) {\n        newLcpEntry = entry;\n      }\n      return;\n    }\n\n    if (entry.entryType === 'navigation') {\n      const navigationEntry = entry as PerformanceNavigationTiming;\n\n      // Check if the navigation entry is contained in currentList or newList\n      if (\n        // Ignore any navigation entries with duration 0, as they are likely duplicates\n        entry.duration > 0 &&\n        // Ensure new entry does not already exist in existing entries\n        !existingNavigationEntries.find(isNavigationEntryEqual(navigationEntry)) &&\n        // Ensure new entry does not already exist in new list of navigation entries\n        !newNavigationEntries.find(isNavigationEntryEqual(navigationEntry))\n      ) {\n        newNavigationEntries.push(navigationEntry);\n      }\n\n      // Otherwise this navigation entry is considered a duplicate and is thrown away\n      return;\n    }\n\n    newEntries.push(entry);\n  });\n\n  // Re-combine and sort by startTime\n  return [\n    ...(newLcpEntry ? [newLcpEntry] : []),\n    ...existingNavigationEntries,\n    ...existingEntries,\n    ...newEntries,\n    ...newNavigationEntries,\n  ].sort((a, b) => a.startTime - b.startTime);\n}\n","import type { AllPerformanceEntry, ReplayContainer } from '../types';\nimport { dedupePerformanceEntries } from '../util/dedupePerformanceEntries';\n\n/**\n * Sets up a PerformanceObserver to listen to all performance entry types.\n */\nexport function setupPerformanceObserver(replay: ReplayContainer): PerformanceObserver {\n  const performanceObserverHandler = (list: PerformanceObserverEntryList): void => {\n    // For whatever reason the observer was returning duplicate navigation\n    // entries (the other entry types were not duplicated).\n    const newPerformanceEntries = dedupePerformanceEntries(\n      replay.performanceEvents,\n      list.getEntries() as AllPerformanceEntry[],\n    );\n    replay.performanceEvents = newPerformanceEntries;\n  };\n\n  const performanceObserver = new PerformanceObserver(performanceObserverHandler);\n\n  [\n    'element',\n    'event',\n    'first-input',\n    'largest-contentful-paint',\n    'layout-shift',\n    'longtask',\n    'navigation',\n    'paint',\n    'resource',\n  ].forEach(type => {\n    try {\n      performanceObserver.observe({\n        type,\n        buffered: true,\n      });\n    } catch {\n      // This can throw if an entry type is not supported in the browser.\n      // Ignore these errors.\n    }\n  });\n\n  return performanceObserver;\n}\n","export default `/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\nfunction t(t){let e=t.length;for(;--e>=0;)t[e]=0}const e=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),a=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),i=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),n=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=new Array(576);t(s);const r=new Array(60);t(r);const o=new Array(512);t(o);const l=new Array(256);t(l);const h=new Array(29);t(h);const d=new Array(30);function _(t,e,a,i,n){this.static_tree=t,this.extra_bits=e,this.extra_base=a,this.elems=i,this.max_length=n,this.has_stree=t&&t.length}let f,c,u;function w(t,e){this.dyn_tree=t,this.max_code=0,this.stat_desc=e}t(d);const m=t=>t<256?o[t]:o[256+(t>>>7)],b=(t,e)=>{t.pending_buf[t.pending++]=255&e,t.pending_buf[t.pending++]=e>>>8&255},g=(t,e,a)=>{t.bi_valid>16-a?(t.bi_buf|=e<<t.bi_valid&65535,b(t,t.bi_buf),t.bi_buf=e>>16-t.bi_valid,t.bi_valid+=a-16):(t.bi_buf|=e<<t.bi_valid&65535,t.bi_valid+=a)},p=(t,e,a)=>{g(t,a[2*e],a[2*e+1])},k=(t,e)=>{let a=0;do{a|=1&t,t>>>=1,a<<=1}while(--e>0);return a>>>1},v=(t,e,a)=>{const i=new Array(16);let n,s,r=0;for(n=1;n<=15;n++)r=r+a[n-1]<<1,i[n]=r;for(s=0;s<=e;s++){let e=t[2*s+1];0!==e&&(t[2*s]=k(i[e]++,e))}},y=t=>{let e;for(e=0;e<286;e++)t.dyn_ltree[2*e]=0;for(e=0;e<30;e++)t.dyn_dtree[2*e]=0;for(e=0;e<19;e++)t.bl_tree[2*e]=0;t.dyn_ltree[512]=1,t.opt_len=t.static_len=0,t.sym_next=t.matches=0},x=t=>{t.bi_valid>8?b(t,t.bi_buf):t.bi_valid>0&&(t.pending_buf[t.pending++]=t.bi_buf),t.bi_buf=0,t.bi_valid=0},z=(t,e,a,i)=>{const n=2*e,s=2*a;return t[n]<t[s]||t[n]===t[s]&&i[e]<=i[a]},A=(t,e,a)=>{const i=t.heap[a];let n=a<<1;for(;n<=t.heap_len&&(n<t.heap_len&&z(e,t.heap[n+1],t.heap[n],t.depth)&&n++,!z(e,i,t.heap[n],t.depth));)t.heap[a]=t.heap[n],a=n,n<<=1;t.heap[a]=i},E=(t,i,n)=>{let s,r,o,_,f=0;if(0!==t.sym_next)do{s=255&t.pending_buf[t.sym_buf+f++],s+=(255&t.pending_buf[t.sym_buf+f++])<<8,r=t.pending_buf[t.sym_buf+f++],0===s?p(t,r,i):(o=l[r],p(t,o+256+1,i),_=e[o],0!==_&&(r-=h[o],g(t,r,_)),s--,o=m(s),p(t,o,n),_=a[o],0!==_&&(s-=d[o],g(t,s,_)))}while(f<t.sym_next);p(t,256,i)},R=(t,e)=>{const a=e.dyn_tree,i=e.stat_desc.static_tree,n=e.stat_desc.has_stree,s=e.stat_desc.elems;let r,o,l,h=-1;for(t.heap_len=0,t.heap_max=573,r=0;r<s;r++)0!==a[2*r]?(t.heap[++t.heap_len]=h=r,t.depth[r]=0):a[2*r+1]=0;for(;t.heap_len<2;)l=t.heap[++t.heap_len]=h<2?++h:0,a[2*l]=1,t.depth[l]=0,t.opt_len--,n&&(t.static_len-=i[2*l+1]);for(e.max_code=h,r=t.heap_len>>1;r>=1;r--)A(t,a,r);l=s;do{r=t.heap[1],t.heap[1]=t.heap[t.heap_len--],A(t,a,1),o=t.heap[1],t.heap[--t.heap_max]=r,t.heap[--t.heap_max]=o,a[2*l]=a[2*r]+a[2*o],t.depth[l]=(t.depth[r]>=t.depth[o]?t.depth[r]:t.depth[o])+1,a[2*r+1]=a[2*o+1]=l,t.heap[1]=l++,A(t,a,1)}while(t.heap_len>=2);t.heap[--t.heap_max]=t.heap[1],((t,e)=>{const a=e.dyn_tree,i=e.max_code,n=e.stat_desc.static_tree,s=e.stat_desc.has_stree,r=e.stat_desc.extra_bits,o=e.stat_desc.extra_base,l=e.stat_desc.max_length;let h,d,_,f,c,u,w=0;for(f=0;f<=15;f++)t.bl_count[f]=0;for(a[2*t.heap[t.heap_max]+1]=0,h=t.heap_max+1;h<573;h++)d=t.heap[h],f=a[2*a[2*d+1]+1]+1,f>l&&(f=l,w++),a[2*d+1]=f,d>i||(t.bl_count[f]++,c=0,d>=o&&(c=r[d-o]),u=a[2*d],t.opt_len+=u*(f+c),s&&(t.static_len+=u*(n[2*d+1]+c)));if(0!==w){do{for(f=l-1;0===t.bl_count[f];)f--;t.bl_count[f]--,t.bl_count[f+1]+=2,t.bl_count[l]--,w-=2}while(w>0);for(f=l;0!==f;f--)for(d=t.bl_count[f];0!==d;)_=t.heap[--h],_>i||(a[2*_+1]!==f&&(t.opt_len+=(f-a[2*_+1])*a[2*_],a[2*_+1]=f),d--)}})(t,e),v(a,h,t.bl_count)},Z=(t,e,a)=>{let i,n,s=-1,r=e[1],o=0,l=7,h=4;for(0===r&&(l=138,h=3),e[2*(a+1)+1]=65535,i=0;i<=a;i++)n=r,r=e[2*(i+1)+1],++o<l&&n===r||(o<h?t.bl_tree[2*n]+=o:0!==n?(n!==s&&t.bl_tree[2*n]++,t.bl_tree[32]++):o<=10?t.bl_tree[34]++:t.bl_tree[36]++,o=0,s=n,0===r?(l=138,h=3):n===r?(l=6,h=3):(l=7,h=4))},U=(t,e,a)=>{let i,n,s=-1,r=e[1],o=0,l=7,h=4;for(0===r&&(l=138,h=3),i=0;i<=a;i++)if(n=r,r=e[2*(i+1)+1],!(++o<l&&n===r)){if(o<h)do{p(t,n,t.bl_tree)}while(0!=--o);else 0!==n?(n!==s&&(p(t,n,t.bl_tree),o--),p(t,16,t.bl_tree),g(t,o-3,2)):o<=10?(p(t,17,t.bl_tree),g(t,o-3,3)):(p(t,18,t.bl_tree),g(t,o-11,7));o=0,s=n,0===r?(l=138,h=3):n===r?(l=6,h=3):(l=7,h=4)}};let S=!1;const D=(t,e,a,i)=>{g(t,0+(i?1:0),3),x(t),b(t,a),b(t,~a),a&&t.pending_buf.set(t.window.subarray(e,e+a),t.pending),t.pending+=a};var T=(t,e,a,i)=>{let o,l,h=0;t.level>0?(2===t.strm.data_type&&(t.strm.data_type=(t=>{let e,a=4093624447;for(e=0;e<=31;e++,a>>>=1)if(1&a&&0!==t.dyn_ltree[2*e])return 0;if(0!==t.dyn_ltree[18]||0!==t.dyn_ltree[20]||0!==t.dyn_ltree[26])return 1;for(e=32;e<256;e++)if(0!==t.dyn_ltree[2*e])return 1;return 0})(t)),R(t,t.l_desc),R(t,t.d_desc),h=(t=>{let e;for(Z(t,t.dyn_ltree,t.l_desc.max_code),Z(t,t.dyn_dtree,t.d_desc.max_code),R(t,t.bl_desc),e=18;e>=3&&0===t.bl_tree[2*n[e]+1];e--);return t.opt_len+=3*(e+1)+5+5+4,e})(t),o=t.opt_len+3+7>>>3,l=t.static_len+3+7>>>3,l<=o&&(o=l)):o=l=a+5,a+4<=o&&-1!==e?D(t,e,a,i):4===t.strategy||l===o?(g(t,2+(i?1:0),3),E(t,s,r)):(g(t,4+(i?1:0),3),((t,e,a,i)=>{let s;for(g(t,e-257,5),g(t,a-1,5),g(t,i-4,4),s=0;s<i;s++)g(t,t.bl_tree[2*n[s]+1],3);U(t,t.dyn_ltree,e-1),U(t,t.dyn_dtree,a-1)})(t,t.l_desc.max_code+1,t.d_desc.max_code+1,h+1),E(t,t.dyn_ltree,t.dyn_dtree)),y(t),i&&x(t)},O={_tr_init:t=>{S||((()=>{let t,n,w,m,b;const g=new Array(16);for(w=0,m=0;m<28;m++)for(h[m]=w,t=0;t<1<<e[m];t++)l[w++]=m;for(l[w-1]=m,b=0,m=0;m<16;m++)for(d[m]=b,t=0;t<1<<a[m];t++)o[b++]=m;for(b>>=7;m<30;m++)for(d[m]=b<<7,t=0;t<1<<a[m]-7;t++)o[256+b++]=m;for(n=0;n<=15;n++)g[n]=0;for(t=0;t<=143;)s[2*t+1]=8,t++,g[8]++;for(;t<=255;)s[2*t+1]=9,t++,g[9]++;for(;t<=279;)s[2*t+1]=7,t++,g[7]++;for(;t<=287;)s[2*t+1]=8,t++,g[8]++;for(v(s,287,g),t=0;t<30;t++)r[2*t+1]=5,r[2*t]=k(t,5);f=new _(s,e,257,286,15),c=new _(r,a,0,30,15),u=new _(new Array(0),i,0,19,7)})(),S=!0),t.l_desc=new w(t.dyn_ltree,f),t.d_desc=new w(t.dyn_dtree,c),t.bl_desc=new w(t.bl_tree,u),t.bi_buf=0,t.bi_valid=0,y(t)},_tr_stored_block:D,_tr_flush_block:T,_tr_tally:(t,e,a)=>(t.pending_buf[t.sym_buf+t.sym_next++]=e,t.pending_buf[t.sym_buf+t.sym_next++]=e>>8,t.pending_buf[t.sym_buf+t.sym_next++]=a,0===e?t.dyn_ltree[2*a]++:(t.matches++,e--,t.dyn_ltree[2*(l[a]+256+1)]++,t.dyn_dtree[2*m(e)]++),t.sym_next===t.sym_end),_tr_align:t=>{g(t,2,3),p(t,256,s),(t=>{16===t.bi_valid?(b(t,t.bi_buf),t.bi_buf=0,t.bi_valid=0):t.bi_valid>=8&&(t.pending_buf[t.pending++]=255&t.bi_buf,t.bi_buf>>=8,t.bi_valid-=8)})(t)}};var F=(t,e,a,i)=>{let n=65535&t|0,s=t>>>16&65535|0,r=0;for(;0!==a;){r=a>2e3?2e3:a,a-=r;do{n=n+e[i++]|0,s=s+n|0}while(--r);n%=65521,s%=65521}return n|s<<16|0};const L=new Uint32Array((()=>{let t,e=[];for(var a=0;a<256;a++){t=a;for(var i=0;i<8;i++)t=1&t?3988292384^t>>>1:t>>>1;e[a]=t}return e})());var N=(t,e,a,i)=>{const n=L,s=i+a;t^=-1;for(let a=i;a<s;a++)t=t>>>8^n[255&(t^e[a])];return-1^t},I={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"},B={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:C,_tr_stored_block:H,_tr_flush_block:M,_tr_tally:j,_tr_align:K}=O,{Z_NO_FLUSH:P,Z_PARTIAL_FLUSH:Y,Z_FULL_FLUSH:G,Z_FINISH:X,Z_BLOCK:W,Z_OK:q,Z_STREAM_END:J,Z_STREAM_ERROR:Q,Z_DATA_ERROR:V,Z_BUF_ERROR:$,Z_DEFAULT_COMPRESSION:tt,Z_FILTERED:et,Z_HUFFMAN_ONLY:at,Z_RLE:it,Z_FIXED:nt,Z_DEFAULT_STRATEGY:st,Z_UNKNOWN:rt,Z_DEFLATED:ot}=B,lt=(t,e)=>(t.msg=I[e],e),ht=t=>2*t-(t>4?9:0),dt=t=>{let e=t.length;for(;--e>=0;)t[e]=0},_t=t=>{let e,a,i,n=t.w_size;e=t.hash_size,i=e;do{a=t.head[--i],t.head[i]=a>=n?a-n:0}while(--e);e=n,i=e;do{a=t.prev[--i],t.prev[i]=a>=n?a-n:0}while(--e)};let ft=(t,e,a)=>(e<<t.hash_shift^a)&t.hash_mask;const ct=t=>{const e=t.state;let a=e.pending;a>t.avail_out&&(a=t.avail_out),0!==a&&(t.output.set(e.pending_buf.subarray(e.pending_out,e.pending_out+a),t.next_out),t.next_out+=a,e.pending_out+=a,t.total_out+=a,t.avail_out-=a,e.pending-=a,0===e.pending&&(e.pending_out=0))},ut=(t,e)=>{M(t,t.block_start>=0?t.block_start:-1,t.strstart-t.block_start,e),t.block_start=t.strstart,ct(t.strm)},wt=(t,e)=>{t.pending_buf[t.pending++]=e},mt=(t,e)=>{t.pending_buf[t.pending++]=e>>>8&255,t.pending_buf[t.pending++]=255&e},bt=(t,e,a,i)=>{let n=t.avail_in;return n>i&&(n=i),0===n?0:(t.avail_in-=n,e.set(t.input.subarray(t.next_in,t.next_in+n),a),1===t.state.wrap?t.adler=F(t.adler,e,n,a):2===t.state.wrap&&(t.adler=N(t.adler,e,n,a)),t.next_in+=n,t.total_in+=n,n)},gt=(t,e)=>{let a,i,n=t.max_chain_length,s=t.strstart,r=t.prev_length,o=t.nice_match;const l=t.strstart>t.w_size-262?t.strstart-(t.w_size-262):0,h=t.window,d=t.w_mask,_=t.prev,f=t.strstart+258;let c=h[s+r-1],u=h[s+r];t.prev_length>=t.good_match&&(n>>=2),o>t.lookahead&&(o=t.lookahead);do{if(a=e,h[a+r]===u&&h[a+r-1]===c&&h[a]===h[s]&&h[++a]===h[s+1]){s+=2,a++;do{}while(h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&s<f);if(i=258-(f-s),s=f-258,i>r){if(t.match_start=e,r=i,i>=o)break;c=h[s+r-1],u=h[s+r]}}}while((e=_[e&d])>l&&0!=--n);return r<=t.lookahead?r:t.lookahead},pt=t=>{const e=t.w_size;let a,i,n;do{if(i=t.window_size-t.lookahead-t.strstart,t.strstart>=e+(e-262)&&(t.window.set(t.window.subarray(e,e+e-i),0),t.match_start-=e,t.strstart-=e,t.block_start-=e,t.insert>t.strstart&&(t.insert=t.strstart),_t(t),i+=e),0===t.strm.avail_in)break;if(a=bt(t.strm,t.window,t.strstart+t.lookahead,i),t.lookahead+=a,t.lookahead+t.insert>=3)for(n=t.strstart-t.insert,t.ins_h=t.window[n],t.ins_h=ft(t,t.ins_h,t.window[n+1]);t.insert&&(t.ins_h=ft(t,t.ins_h,t.window[n+3-1]),t.prev[n&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=n,n++,t.insert--,!(t.lookahead+t.insert<3)););}while(t.lookahead<262&&0!==t.strm.avail_in)},kt=(t,e)=>{let a,i,n,s=t.pending_buf_size-5>t.w_size?t.w_size:t.pending_buf_size-5,r=0,o=t.strm.avail_in;do{if(a=65535,n=t.bi_valid+42>>3,t.strm.avail_out<n)break;if(n=t.strm.avail_out-n,i=t.strstart-t.block_start,a>i+t.strm.avail_in&&(a=i+t.strm.avail_in),a>n&&(a=n),a<s&&(0===a&&e!==X||e===P||a!==i+t.strm.avail_in))break;r=e===X&&a===i+t.strm.avail_in?1:0,H(t,0,0,r),t.pending_buf[t.pending-4]=a,t.pending_buf[t.pending-3]=a>>8,t.pending_buf[t.pending-2]=~a,t.pending_buf[t.pending-1]=~a>>8,ct(t.strm),i&&(i>a&&(i=a),t.strm.output.set(t.window.subarray(t.block_start,t.block_start+i),t.strm.next_out),t.strm.next_out+=i,t.strm.avail_out-=i,t.strm.total_out+=i,t.block_start+=i,a-=i),a&&(bt(t.strm,t.strm.output,t.strm.next_out,a),t.strm.next_out+=a,t.strm.avail_out-=a,t.strm.total_out+=a)}while(0===r);return o-=t.strm.avail_in,o&&(o>=t.w_size?(t.matches=2,t.window.set(t.strm.input.subarray(t.strm.next_in-t.w_size,t.strm.next_in),0),t.strstart=t.w_size,t.insert=t.strstart):(t.window_size-t.strstart<=o&&(t.strstart-=t.w_size,t.window.set(t.window.subarray(t.w_size,t.w_size+t.strstart),0),t.matches<2&&t.matches++,t.insert>t.strstart&&(t.insert=t.strstart)),t.window.set(t.strm.input.subarray(t.strm.next_in-o,t.strm.next_in),t.strstart),t.strstart+=o,t.insert+=o>t.w_size-t.insert?t.w_size-t.insert:o),t.block_start=t.strstart),t.high_water<t.strstart&&(t.high_water=t.strstart),r?4:e!==P&&e!==X&&0===t.strm.avail_in&&t.strstart===t.block_start?2:(n=t.window_size-t.strstart,t.strm.avail_in>n&&t.block_start>=t.w_size&&(t.block_start-=t.w_size,t.strstart-=t.w_size,t.window.set(t.window.subarray(t.w_size,t.w_size+t.strstart),0),t.matches<2&&t.matches++,n+=t.w_size,t.insert>t.strstart&&(t.insert=t.strstart)),n>t.strm.avail_in&&(n=t.strm.avail_in),n&&(bt(t.strm,t.window,t.strstart,n),t.strstart+=n,t.insert+=n>t.w_size-t.insert?t.w_size-t.insert:n),t.high_water<t.strstart&&(t.high_water=t.strstart),n=t.bi_valid+42>>3,n=t.pending_buf_size-n>65535?65535:t.pending_buf_size-n,s=n>t.w_size?t.w_size:n,i=t.strstart-t.block_start,(i>=s||(i||e===X)&&e!==P&&0===t.strm.avail_in&&i<=n)&&(a=i>n?n:i,r=e===X&&0===t.strm.avail_in&&a===i?1:0,H(t,t.block_start,a,r),t.block_start+=a,ct(t.strm)),r?3:1)},vt=(t,e)=>{let a,i;for(;;){if(t.lookahead<262){if(pt(t),t.lookahead<262&&e===P)return 1;if(0===t.lookahead)break}if(a=0,t.lookahead>=3&&(t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!==a&&t.strstart-a<=t.w_size-262&&(t.match_length=gt(t,a)),t.match_length>=3)if(i=j(t,t.strstart-t.match_start,t.match_length-3),t.lookahead-=t.match_length,t.match_length<=t.max_lazy_match&&t.lookahead>=3){t.match_length--;do{t.strstart++,t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart}while(0!=--t.match_length);t.strstart++}else t.strstart+=t.match_length,t.match_length=0,t.ins_h=t.window[t.strstart],t.ins_h=ft(t,t.ins_h,t.window[t.strstart+1]);else i=j(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++;if(i&&(ut(t,!1),0===t.strm.avail_out))return 1}return t.insert=t.strstart<2?t.strstart:2,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2},yt=(t,e)=>{let a,i,n;for(;;){if(t.lookahead<262){if(pt(t),t.lookahead<262&&e===P)return 1;if(0===t.lookahead)break}if(a=0,t.lookahead>=3&&(t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),t.prev_length=t.match_length,t.prev_match=t.match_start,t.match_length=2,0!==a&&t.prev_length<t.max_lazy_match&&t.strstart-a<=t.w_size-262&&(t.match_length=gt(t,a),t.match_length<=5&&(t.strategy===et||3===t.match_length&&t.strstart-t.match_start>4096)&&(t.match_length=2)),t.prev_length>=3&&t.match_length<=t.prev_length){n=t.strstart+t.lookahead-3,i=j(t,t.strstart-1-t.prev_match,t.prev_length-3),t.lookahead-=t.prev_length-1,t.prev_length-=2;do{++t.strstart<=n&&(t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart)}while(0!=--t.prev_length);if(t.match_available=0,t.match_length=2,t.strstart++,i&&(ut(t,!1),0===t.strm.avail_out))return 1}else if(t.match_available){if(i=j(t,0,t.window[t.strstart-1]),i&&ut(t,!1),t.strstart++,t.lookahead--,0===t.strm.avail_out)return 1}else t.match_available=1,t.strstart++,t.lookahead--}return t.match_available&&(i=j(t,0,t.window[t.strstart-1]),t.match_available=0),t.insert=t.strstart<2?t.strstart:2,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2};function xt(t,e,a,i,n){this.good_length=t,this.max_lazy=e,this.nice_length=a,this.max_chain=i,this.func=n}const zt=[new xt(0,0,0,0,kt),new xt(4,4,8,4,vt),new xt(4,5,16,8,vt),new xt(4,6,32,32,vt),new xt(4,4,16,16,yt),new xt(8,16,32,32,yt),new xt(8,16,128,128,yt),new xt(8,32,128,256,yt),new xt(32,128,258,1024,yt),new xt(32,258,258,4096,yt)];function At(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=ot,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(1146),this.dyn_dtree=new Uint16Array(122),this.bl_tree=new Uint16Array(78),dt(this.dyn_ltree),dt(this.dyn_dtree),dt(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(16),this.heap=new Uint16Array(573),dt(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(573),dt(this.depth),this.sym_buf=0,this.lit_bufsize=0,this.sym_next=0,this.sym_end=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const Et=t=>{if(!t)return 1;const e=t.state;return!e||e.strm!==t||42!==e.status&&57!==e.status&&69!==e.status&&73!==e.status&&91!==e.status&&103!==e.status&&113!==e.status&&666!==e.status?1:0},Rt=t=>{if(Et(t))return lt(t,Q);t.total_in=t.total_out=0,t.data_type=rt;const e=t.state;return e.pending=0,e.pending_out=0,e.wrap<0&&(e.wrap=-e.wrap),e.status=2===e.wrap?57:e.wrap?42:113,t.adler=2===e.wrap?0:1,e.last_flush=-2,C(e),q},Zt=t=>{const e=Rt(t);var a;return e===q&&((a=t.state).window_size=2*a.w_size,dt(a.head),a.max_lazy_match=zt[a.level].max_lazy,a.good_match=zt[a.level].good_length,a.nice_match=zt[a.level].nice_length,a.max_chain_length=zt[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=2,a.match_available=0,a.ins_h=0),e},Ut=(t,e,a,i,n,s)=>{if(!t)return Q;let r=1;if(e===tt&&(e=6),i<0?(r=0,i=-i):i>15&&(r=2,i-=16),n<1||n>9||a!==ot||i<8||i>15||e<0||e>9||s<0||s>nt||8===i&&1!==r)return lt(t,Q);8===i&&(i=9);const o=new At;return t.state=o,o.strm=t,o.status=42,o.wrap=r,o.gzhead=null,o.w_bits=i,o.w_size=1<<o.w_bits,o.w_mask=o.w_size-1,o.hash_bits=n+7,o.hash_size=1<<o.hash_bits,o.hash_mask=o.hash_size-1,o.hash_shift=~~((o.hash_bits+3-1)/3),o.window=new Uint8Array(2*o.w_size),o.head=new Uint16Array(o.hash_size),o.prev=new Uint16Array(o.w_size),o.lit_bufsize=1<<n+6,o.pending_buf_size=4*o.lit_bufsize,o.pending_buf=new Uint8Array(o.pending_buf_size),o.sym_buf=o.lit_bufsize,o.sym_end=3*(o.lit_bufsize-1),o.level=e,o.strategy=s,o.method=a,Zt(t)};var St={deflateInit:(t,e)=>Ut(t,e,ot,15,8,st),deflateInit2:Ut,deflateReset:Zt,deflateResetKeep:Rt,deflateSetHeader:(t,e)=>Et(t)||2!==t.state.wrap?Q:(t.state.gzhead=e,q),deflate:(t,e)=>{if(Et(t)||e>W||e<0)return t?lt(t,Q):Q;const a=t.state;if(!t.output||0!==t.avail_in&&!t.input||666===a.status&&e!==X)return lt(t,0===t.avail_out?$:Q);const i=a.last_flush;if(a.last_flush=e,0!==a.pending){if(ct(t),0===t.avail_out)return a.last_flush=-1,q}else if(0===t.avail_in&&ht(e)<=ht(i)&&e!==X)return lt(t,$);if(666===a.status&&0!==t.avail_in)return lt(t,$);if(42===a.status&&0===a.wrap&&(a.status=113),42===a.status){let e=ot+(a.w_bits-8<<4)<<8,i=-1;if(i=a.strategy>=at||a.level<2?0:a.level<6?1:6===a.level?2:3,e|=i<<6,0!==a.strstart&&(e|=32),e+=31-e%31,mt(a,e),0!==a.strstart&&(mt(a,t.adler>>>16),mt(a,65535&t.adler)),t.adler=1,a.status=113,ct(t),0!==a.pending)return a.last_flush=-1,q}if(57===a.status)if(t.adler=0,wt(a,31),wt(a,139),wt(a,8),a.gzhead)wt(a,(a.gzhead.text?1:0)+(a.gzhead.hcrc?2:0)+(a.gzhead.extra?4:0)+(a.gzhead.name?8:0)+(a.gzhead.comment?16:0)),wt(a,255&a.gzhead.time),wt(a,a.gzhead.time>>8&255),wt(a,a.gzhead.time>>16&255),wt(a,a.gzhead.time>>24&255),wt(a,9===a.level?2:a.strategy>=at||a.level<2?4:0),wt(a,255&a.gzhead.os),a.gzhead.extra&&a.gzhead.extra.length&&(wt(a,255&a.gzhead.extra.length),wt(a,a.gzhead.extra.length>>8&255)),a.gzhead.hcrc&&(t.adler=N(t.adler,a.pending_buf,a.pending,0)),a.gzindex=0,a.status=69;else if(wt(a,0),wt(a,0),wt(a,0),wt(a,0),wt(a,0),wt(a,9===a.level?2:a.strategy>=at||a.level<2?4:0),wt(a,3),a.status=113,ct(t),0!==a.pending)return a.last_flush=-1,q;if(69===a.status){if(a.gzhead.extra){let e=a.pending,i=(65535&a.gzhead.extra.length)-a.gzindex;for(;a.pending+i>a.pending_buf_size;){let n=a.pending_buf_size-a.pending;if(a.pending_buf.set(a.gzhead.extra.subarray(a.gzindex,a.gzindex+n),a.pending),a.pending=a.pending_buf_size,a.gzhead.hcrc&&a.pending>e&&(t.adler=N(t.adler,a.pending_buf,a.pending-e,e)),a.gzindex+=n,ct(t),0!==a.pending)return a.last_flush=-1,q;e=0,i-=n}let n=new Uint8Array(a.gzhead.extra);a.pending_buf.set(n.subarray(a.gzindex,a.gzindex+i),a.pending),a.pending+=i,a.gzhead.hcrc&&a.pending>e&&(t.adler=N(t.adler,a.pending_buf,a.pending-e,e)),a.gzindex=0}a.status=73}if(73===a.status){if(a.gzhead.name){let e,i=a.pending;do{if(a.pending===a.pending_buf_size){if(a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i)),ct(t),0!==a.pending)return a.last_flush=-1,q;i=0}e=a.gzindex<a.gzhead.name.length?255&a.gzhead.name.charCodeAt(a.gzindex++):0,wt(a,e)}while(0!==e);a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i)),a.gzindex=0}a.status=91}if(91===a.status){if(a.gzhead.comment){let e,i=a.pending;do{if(a.pending===a.pending_buf_size){if(a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i)),ct(t),0!==a.pending)return a.last_flush=-1,q;i=0}e=a.gzindex<a.gzhead.comment.length?255&a.gzhead.comment.charCodeAt(a.gzindex++):0,wt(a,e)}while(0!==e);a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i))}a.status=103}if(103===a.status){if(a.gzhead.hcrc){if(a.pending+2>a.pending_buf_size&&(ct(t),0!==a.pending))return a.last_flush=-1,q;wt(a,255&t.adler),wt(a,t.adler>>8&255),t.adler=0}if(a.status=113,ct(t),0!==a.pending)return a.last_flush=-1,q}if(0!==t.avail_in||0!==a.lookahead||e!==P&&666!==a.status){let i=0===a.level?kt(a,e):a.strategy===at?((t,e)=>{let a;for(;;){if(0===t.lookahead&&(pt(t),0===t.lookahead)){if(e===P)return 1;break}if(t.match_length=0,a=j(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++,a&&(ut(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2})(a,e):a.strategy===it?((t,e)=>{let a,i,n,s;const r=t.window;for(;;){if(t.lookahead<=258){if(pt(t),t.lookahead<=258&&e===P)return 1;if(0===t.lookahead)break}if(t.match_length=0,t.lookahead>=3&&t.strstart>0&&(n=t.strstart-1,i=r[n],i===r[++n]&&i===r[++n]&&i===r[++n])){s=t.strstart+258;do{}while(i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&n<s);t.match_length=258-(s-n),t.match_length>t.lookahead&&(t.match_length=t.lookahead)}if(t.match_length>=3?(a=j(t,1,t.match_length-3),t.lookahead-=t.match_length,t.strstart+=t.match_length,t.match_length=0):(a=j(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++),a&&(ut(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2})(a,e):zt[a.level].func(a,e);if(3!==i&&4!==i||(a.status=666),1===i||3===i)return 0===t.avail_out&&(a.last_flush=-1),q;if(2===i&&(e===Y?K(a):e!==W&&(H(a,0,0,!1),e===G&&(dt(a.head),0===a.lookahead&&(a.strstart=0,a.block_start=0,a.insert=0))),ct(t),0===t.avail_out))return a.last_flush=-1,q}return e!==X?q:a.wrap<=0?J:(2===a.wrap?(wt(a,255&t.adler),wt(a,t.adler>>8&255),wt(a,t.adler>>16&255),wt(a,t.adler>>24&255),wt(a,255&t.total_in),wt(a,t.total_in>>8&255),wt(a,t.total_in>>16&255),wt(a,t.total_in>>24&255)):(mt(a,t.adler>>>16),mt(a,65535&t.adler)),ct(t),a.wrap>0&&(a.wrap=-a.wrap),0!==a.pending?q:J)},deflateEnd:t=>{if(Et(t))return Q;const e=t.state.status;return t.state=null,113===e?lt(t,V):q},deflateSetDictionary:(t,e)=>{let a=e.length;if(Et(t))return Q;const i=t.state,n=i.wrap;if(2===n||1===n&&42!==i.status||i.lookahead)return Q;if(1===n&&(t.adler=F(t.adler,e,a,0)),i.wrap=0,a>=i.w_size){0===n&&(dt(i.head),i.strstart=0,i.block_start=0,i.insert=0);let t=new Uint8Array(i.w_size);t.set(e.subarray(a-i.w_size,a),0),e=t,a=i.w_size}const s=t.avail_in,r=t.next_in,o=t.input;for(t.avail_in=a,t.next_in=0,t.input=e,pt(i);i.lookahead>=3;){let t=i.strstart,e=i.lookahead-2;do{i.ins_h=ft(i,i.ins_h,i.window[t+3-1]),i.prev[t&i.w_mask]=i.head[i.ins_h],i.head[i.ins_h]=t,t++}while(--e);i.strstart=t,i.lookahead=2,pt(i)}return i.strstart+=i.lookahead,i.block_start=i.strstart,i.insert=i.lookahead,i.lookahead=0,i.match_length=i.prev_length=2,i.match_available=0,t.next_in=r,t.input=o,t.avail_in=s,i.wrap=n,q},deflateInfo:\"pako deflate (from Nodeca project)\"};const Dt=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var Tt=function(t){const e=Array.prototype.slice.call(arguments,1);for(;e.length;){const a=e.shift();if(a){if(\"object\"!=typeof a)throw new TypeError(a+\"must be non-object\");for(const e in a)Dt(a,e)&&(t[e]=a[e])}}return t},Ot=t=>{let e=0;for(let a=0,i=t.length;a<i;a++)e+=t[a].length;const a=new Uint8Array(e);for(let e=0,i=0,n=t.length;e<n;e++){let n=t[e];a.set(n,i),i+=n.length}return a};let Ft=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(t){Ft=!1}const Lt=new Uint8Array(256);for(let t=0;t<256;t++)Lt[t]=t>=252?6:t>=248?5:t>=240?4:t>=224?3:t>=192?2:1;Lt[254]=Lt[254]=1;var Nt=t=>{if(\"function\"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(t);let e,a,i,n,s,r=t.length,o=0;for(n=0;n<r;n++)a=t.charCodeAt(n),55296==(64512&a)&&n+1<r&&(i=t.charCodeAt(n+1),56320==(64512&i)&&(a=65536+(a-55296<<10)+(i-56320),n++)),o+=a<128?1:a<2048?2:a<65536?3:4;for(e=new Uint8Array(o),s=0,n=0;s<o;n++)a=t.charCodeAt(n),55296==(64512&a)&&n+1<r&&(i=t.charCodeAt(n+1),56320==(64512&i)&&(a=65536+(a-55296<<10)+(i-56320),n++)),a<128?e[s++]=a:a<2048?(e[s++]=192|a>>>6,e[s++]=128|63&a):a<65536?(e[s++]=224|a>>>12,e[s++]=128|a>>>6&63,e[s++]=128|63&a):(e[s++]=240|a>>>18,e[s++]=128|a>>>12&63,e[s++]=128|a>>>6&63,e[s++]=128|63&a);return e},It=(t,e)=>{const a=e||t.length;if(\"function\"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(t.subarray(0,e));let i,n;const s=new Array(2*a);for(n=0,i=0;i<a;){let e=t[i++];if(e<128){s[n++]=e;continue}let r=Lt[e];if(r>4)s[n++]=65533,i+=r-1;else{for(e&=2===r?31:3===r?15:7;r>1&&i<a;)e=e<<6|63&t[i++],r--;r>1?s[n++]=65533:e<65536?s[n++]=e:(e-=65536,s[n++]=55296|e>>10&1023,s[n++]=56320|1023&e)}}return((t,e)=>{if(e<65534&&t.subarray&&Ft)return String.fromCharCode.apply(null,t.length===e?t:t.subarray(0,e));let a=\"\";for(let i=0;i<e;i++)a+=String.fromCharCode(t[i]);return a})(s,n)},Bt=(t,e)=>{(e=e||t.length)>t.length&&(e=t.length);let a=e-1;for(;a>=0&&128==(192&t[a]);)a--;return a<0||0===a?e:a+Lt[t[a]]>e?a:e};var Ct=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0};const Ht=Object.prototype.toString,{Z_NO_FLUSH:Mt,Z_SYNC_FLUSH:jt,Z_FULL_FLUSH:Kt,Z_FINISH:Pt,Z_OK:Yt,Z_STREAM_END:Gt,Z_DEFAULT_COMPRESSION:Xt,Z_DEFAULT_STRATEGY:Wt,Z_DEFLATED:qt}=B;function Jt(t){this.options=Tt({level:Xt,method:qt,chunkSize:16384,windowBits:15,memLevel:8,strategy:Wt},t||{});let e=this.options;e.raw&&e.windowBits>0?e.windowBits=-e.windowBits:e.gzip&&e.windowBits>0&&e.windowBits<16&&(e.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new Ct,this.strm.avail_out=0;let a=St.deflateInit2(this.strm,e.level,e.method,e.windowBits,e.memLevel,e.strategy);if(a!==Yt)throw new Error(I[a]);if(e.header&&St.deflateSetHeader(this.strm,e.header),e.dictionary){let t;if(t=\"string\"==typeof e.dictionary?Nt(e.dictionary):\"[object ArrayBuffer]\"===Ht.call(e.dictionary)?new Uint8Array(e.dictionary):e.dictionary,a=St.deflateSetDictionary(this.strm,t),a!==Yt)throw new Error(I[a]);this._dict_set=!0}}function Qt(t,e){const a=new Jt(e);if(a.push(t,!0),a.err)throw a.msg||I[a.err];return a.result}Jt.prototype.push=function(t,e){const a=this.strm,i=this.options.chunkSize;let n,s;if(this.ended)return!1;for(s=e===~~e?e:!0===e?Pt:Mt,\"string\"==typeof t?a.input=Nt(t):\"[object ArrayBuffer]\"===Ht.call(t)?a.input=new Uint8Array(t):a.input=t,a.next_in=0,a.avail_in=a.input.length;;)if(0===a.avail_out&&(a.output=new Uint8Array(i),a.next_out=0,a.avail_out=i),(s===jt||s===Kt)&&a.avail_out<=6)this.onData(a.output.subarray(0,a.next_out)),a.avail_out=0;else{if(n=St.deflate(a,s),n===Gt)return a.next_out>0&&this.onData(a.output.subarray(0,a.next_out)),n=St.deflateEnd(this.strm),this.onEnd(n),this.ended=!0,n===Yt;if(0!==a.avail_out){if(s>0&&a.next_out>0)this.onData(a.output.subarray(0,a.next_out)),a.avail_out=0;else if(0===a.avail_in)break}else this.onData(a.output)}return!0},Jt.prototype.onData=function(t){this.chunks.push(t)},Jt.prototype.onEnd=function(t){t===Yt&&(this.result=Ot(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg};var Vt={Deflate:Jt,deflate:Qt,deflateRaw:function(t,e){return(e=e||{}).raw=!0,Qt(t,e)},gzip:function(t,e){return(e=e||{}).gzip=!0,Qt(t,e)},constants:B};var $t=function(t,e){let a,i,n,s,r,o,l,h,d,_,f,c,u,w,m,b,g,p,k,v,y,x,z,A;const E=t.state;a=t.next_in,z=t.input,i=a+(t.avail_in-5),n=t.next_out,A=t.output,s=n-(e-t.avail_out),r=n+(t.avail_out-257),o=E.dmax,l=E.wsize,h=E.whave,d=E.wnext,_=E.window,f=E.hold,c=E.bits,u=E.lencode,w=E.distcode,m=(1<<E.lenbits)-1,b=(1<<E.distbits)-1;t:do{c<15&&(f+=z[a++]<<c,c+=8,f+=z[a++]<<c,c+=8),g=u[f&m];e:for(;;){if(p=g>>>24,f>>>=p,c-=p,p=g>>>16&255,0===p)A[n++]=65535&g;else{if(!(16&p)){if(0==(64&p)){g=u[(65535&g)+(f&(1<<p)-1)];continue e}if(32&p){E.mode=16191;break t}t.msg=\"invalid literal/length code\",E.mode=16209;break t}k=65535&g,p&=15,p&&(c<p&&(f+=z[a++]<<c,c+=8),k+=f&(1<<p)-1,f>>>=p,c-=p),c<15&&(f+=z[a++]<<c,c+=8,f+=z[a++]<<c,c+=8),g=w[f&b];a:for(;;){if(p=g>>>24,f>>>=p,c-=p,p=g>>>16&255,!(16&p)){if(0==(64&p)){g=w[(65535&g)+(f&(1<<p)-1)];continue a}t.msg=\"invalid distance code\",E.mode=16209;break t}if(v=65535&g,p&=15,c<p&&(f+=z[a++]<<c,c+=8,c<p&&(f+=z[a++]<<c,c+=8)),v+=f&(1<<p)-1,v>o){t.msg=\"invalid distance too far back\",E.mode=16209;break t}if(f>>>=p,c-=p,p=n-s,v>p){if(p=v-p,p>h&&E.sane){t.msg=\"invalid distance too far back\",E.mode=16209;break t}if(y=0,x=_,0===d){if(y+=l-p,p<k){k-=p;do{A[n++]=_[y++]}while(--p);y=n-v,x=A}}else if(d<p){if(y+=l+d-p,p-=d,p<k){k-=p;do{A[n++]=_[y++]}while(--p);if(y=0,d<k){p=d,k-=p;do{A[n++]=_[y++]}while(--p);y=n-v,x=A}}}else if(y+=d-p,p<k){k-=p;do{A[n++]=_[y++]}while(--p);y=n-v,x=A}for(;k>2;)A[n++]=x[y++],A[n++]=x[y++],A[n++]=x[y++],k-=3;k&&(A[n++]=x[y++],k>1&&(A[n++]=x[y++]))}else{y=n-v;do{A[n++]=A[y++],A[n++]=A[y++],A[n++]=A[y++],k-=3}while(k>2);k&&(A[n++]=A[y++],k>1&&(A[n++]=A[y++]))}break}}break}}while(a<i&&n<r);k=c>>3,a-=k,c-=k<<3,f&=(1<<c)-1,t.next_in=a,t.next_out=n,t.avail_in=a<i?i-a+5:5-(a-i),t.avail_out=n<r?r-n+257:257-(n-r),E.hold=f,E.bits=c};const te=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),ee=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),ae=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),ie=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var ne=(t,e,a,i,n,s,r,o)=>{const l=o.bits;let h,d,_,f,c,u,w=0,m=0,b=0,g=0,p=0,k=0,v=0,y=0,x=0,z=0,A=null;const E=new Uint16Array(16),R=new Uint16Array(16);let Z,U,S,D=null;for(w=0;w<=15;w++)E[w]=0;for(m=0;m<i;m++)E[e[a+m]]++;for(p=l,g=15;g>=1&&0===E[g];g--);if(p>g&&(p=g),0===g)return n[s++]=20971520,n[s++]=20971520,o.bits=1,0;for(b=1;b<g&&0===E[b];b++);for(p<b&&(p=b),y=1,w=1;w<=15;w++)if(y<<=1,y-=E[w],y<0)return-1;if(y>0&&(0===t||1!==g))return-1;for(R[1]=0,w=1;w<15;w++)R[w+1]=R[w]+E[w];for(m=0;m<i;m++)0!==e[a+m]&&(r[R[e[a+m]]++]=m);if(0===t?(A=D=r,u=20):1===t?(A=te,D=ee,u=257):(A=ae,D=ie,u=0),z=0,m=0,w=b,c=s,k=p,v=0,_=-1,x=1<<p,f=x-1,1===t&&x>852||2===t&&x>592)return 1;for(;;){Z=w-v,r[m]+1<u?(U=0,S=r[m]):r[m]>=u?(U=D[r[m]-u],S=A[r[m]-u]):(U=96,S=0),h=1<<w-v,d=1<<k,b=d;do{d-=h,n[c+(z>>v)+d]=Z<<24|U<<16|S|0}while(0!==d);for(h=1<<w-1;z&h;)h>>=1;if(0!==h?(z&=h-1,z+=h):z=0,m++,0==--E[w]){if(w===g)break;w=e[a+r[m]]}if(w>p&&(z&f)!==_){for(0===v&&(v=p),c+=b,k=w-v,y=1<<k;k+v<g&&(y-=E[k+v],!(y<=0));)k++,y<<=1;if(x+=1<<k,1===t&&x>852||2===t&&x>592)return 1;_=z&f,n[_]=p<<24|k<<16|c-s|0}}return 0!==z&&(n[c+z]=w-v<<24|64<<16|0),o.bits=p,0};const{Z_FINISH:se,Z_BLOCK:re,Z_TREES:oe,Z_OK:le,Z_STREAM_END:he,Z_NEED_DICT:de,Z_STREAM_ERROR:_e,Z_DATA_ERROR:fe,Z_MEM_ERROR:ce,Z_BUF_ERROR:ue,Z_DEFLATED:we}=B,me=16209,be=t=>(t>>>24&255)+(t>>>8&65280)+((65280&t)<<8)+((255&t)<<24);function ge(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const pe=t=>{if(!t)return 1;const e=t.state;return!e||e.strm!==t||e.mode<16180||e.mode>16211?1:0},ke=t=>{if(pe(t))return _e;const e=t.state;return t.total_in=t.total_out=e.total=0,t.msg=\"\",e.wrap&&(t.adler=1&e.wrap),e.mode=16180,e.last=0,e.havedict=0,e.flags=-1,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new Int32Array(852),e.distcode=e.distdyn=new Int32Array(592),e.sane=1,e.back=-1,le},ve=t=>{if(pe(t))return _e;const e=t.state;return e.wsize=0,e.whave=0,e.wnext=0,ke(t)},ye=(t,e)=>{let a;if(pe(t))return _e;const i=t.state;return e<0?(a=0,e=-e):(a=5+(e>>4),e<48&&(e&=15)),e&&(e<8||e>15)?_e:(null!==i.window&&i.wbits!==e&&(i.window=null),i.wrap=a,i.wbits=e,ve(t))},xe=(t,e)=>{if(!t)return _e;const a=new ge;t.state=a,a.strm=t,a.window=null,a.mode=16180;const i=ye(t,e);return i!==le&&(t.state=null),i};let ze,Ae,Ee=!0;const Re=t=>{if(Ee){ze=new Int32Array(512),Ae=new Int32Array(32);let e=0;for(;e<144;)t.lens[e++]=8;for(;e<256;)t.lens[e++]=9;for(;e<280;)t.lens[e++]=7;for(;e<288;)t.lens[e++]=8;for(ne(1,t.lens,0,288,ze,0,t.work,{bits:9}),e=0;e<32;)t.lens[e++]=5;ne(2,t.lens,0,32,Ae,0,t.work,{bits:5}),Ee=!1}t.lencode=ze,t.lenbits=9,t.distcode=Ae,t.distbits=5},Ze=(t,e,a,i)=>{let n;const s=t.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new Uint8Array(s.wsize)),i>=s.wsize?(s.window.set(e.subarray(a-s.wsize,a),0),s.wnext=0,s.whave=s.wsize):(n=s.wsize-s.wnext,n>i&&(n=i),s.window.set(e.subarray(a-i,a-i+n),s.wnext),(i-=n)?(s.window.set(e.subarray(a-i,a),0),s.wnext=i,s.whave=s.wsize):(s.wnext+=n,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=n))),0};var Ue={inflateReset:ve,inflateReset2:ye,inflateResetKeep:ke,inflateInit:t=>xe(t,15),inflateInit2:xe,inflate:(t,e)=>{let a,i,n,s,r,o,l,h,d,_,f,c,u,w,m,b,g,p,k,v,y,x,z=0;const A=new Uint8Array(4);let E,R;const Z=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(pe(t)||!t.output||!t.input&&0!==t.avail_in)return _e;a=t.state,16191===a.mode&&(a.mode=16192),r=t.next_out,n=t.output,l=t.avail_out,s=t.next_in,i=t.input,o=t.avail_in,h=a.hold,d=a.bits,_=o,f=l,x=le;t:for(;;)switch(a.mode){case 16180:if(0===a.wrap){a.mode=16192;break}for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(2&a.wrap&&35615===h){0===a.wbits&&(a.wbits=15),a.check=0,A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0),h=0,d=0,a.mode=16181;break}if(a.head&&(a.head.done=!1),!(1&a.wrap)||(((255&h)<<8)+(h>>8))%31){t.msg=\"incorrect header check\",a.mode=me;break}if((15&h)!==we){t.msg=\"unknown compression method\",a.mode=me;break}if(h>>>=4,d-=4,y=8+(15&h),0===a.wbits&&(a.wbits=y),y>15||y>a.wbits){t.msg=\"invalid window size\",a.mode=me;break}a.dmax=1<<a.wbits,a.flags=0,t.adler=a.check=1,a.mode=512&h?16189:16191,h=0,d=0;break;case 16181:for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(a.flags=h,(255&a.flags)!==we){t.msg=\"unknown compression method\",a.mode=me;break}if(57344&a.flags){t.msg=\"unknown header flags set\",a.mode=me;break}a.head&&(a.head.text=h>>8&1),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0)),h=0,d=0,a.mode=16182;case 16182:for(;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.head&&(a.head.time=h),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,A[2]=h>>>16&255,A[3]=h>>>24&255,a.check=N(a.check,A,4,0)),h=0,d=0,a.mode=16183;case 16183:for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.head&&(a.head.xflags=255&h,a.head.os=h>>8),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0)),h=0,d=0,a.mode=16184;case 16184:if(1024&a.flags){for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.length=h,a.head&&(a.head.extra_len=h),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0)),h=0,d=0}else a.head&&(a.head.extra=null);a.mode=16185;case 16185:if(1024&a.flags&&(c=a.length,c>o&&(c=o),c&&(a.head&&(y=a.head.extra_len-a.length,a.head.extra||(a.head.extra=new Uint8Array(a.head.extra_len)),a.head.extra.set(i.subarray(s,s+c),y)),512&a.flags&&4&a.wrap&&(a.check=N(a.check,i,c,s)),o-=c,s+=c,a.length-=c),a.length))break t;a.length=0,a.mode=16186;case 16186:if(2048&a.flags){if(0===o)break t;c=0;do{y=i[s+c++],a.head&&y&&a.length<65536&&(a.head.name+=String.fromCharCode(y))}while(y&&c<o);if(512&a.flags&&4&a.wrap&&(a.check=N(a.check,i,c,s)),o-=c,s+=c,y)break t}else a.head&&(a.head.name=null);a.length=0,a.mode=16187;case 16187:if(4096&a.flags){if(0===o)break t;c=0;do{y=i[s+c++],a.head&&y&&a.length<65536&&(a.head.comment+=String.fromCharCode(y))}while(y&&c<o);if(512&a.flags&&4&a.wrap&&(a.check=N(a.check,i,c,s)),o-=c,s+=c,y)break t}else a.head&&(a.head.comment=null);a.mode=16188;case 16188:if(512&a.flags){for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(4&a.wrap&&h!==(65535&a.check)){t.msg=\"header crc mismatch\",a.mode=me;break}h=0,d=0}a.head&&(a.head.hcrc=a.flags>>9&1,a.head.done=!0),t.adler=a.check=0,a.mode=16191;break;case 16189:for(;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}t.adler=a.check=be(h),h=0,d=0,a.mode=16190;case 16190:if(0===a.havedict)return t.next_out=r,t.avail_out=l,t.next_in=s,t.avail_in=o,a.hold=h,a.bits=d,de;t.adler=a.check=1,a.mode=16191;case 16191:if(e===re||e===oe)break t;case 16192:if(a.last){h>>>=7&d,d-=7&d,a.mode=16206;break}for(;d<3;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}switch(a.last=1&h,h>>>=1,d-=1,3&h){case 0:a.mode=16193;break;case 1:if(Re(a),a.mode=16199,e===oe){h>>>=2,d-=2;break t}break;case 2:a.mode=16196;break;case 3:t.msg=\"invalid block type\",a.mode=me}h>>>=2,d-=2;break;case 16193:for(h>>>=7&d,d-=7&d;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if((65535&h)!=(h>>>16^65535)){t.msg=\"invalid stored block lengths\",a.mode=me;break}if(a.length=65535&h,h=0,d=0,a.mode=16194,e===oe)break t;case 16194:a.mode=16195;case 16195:if(c=a.length,c){if(c>o&&(c=o),c>l&&(c=l),0===c)break t;n.set(i.subarray(s,s+c),r),o-=c,s+=c,l-=c,r+=c,a.length-=c;break}a.mode=16191;break;case 16196:for(;d<14;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(a.nlen=257+(31&h),h>>>=5,d-=5,a.ndist=1+(31&h),h>>>=5,d-=5,a.ncode=4+(15&h),h>>>=4,d-=4,a.nlen>286||a.ndist>30){t.msg=\"too many length or distance symbols\",a.mode=me;break}a.have=0,a.mode=16197;case 16197:for(;a.have<a.ncode;){for(;d<3;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.lens[Z[a.have++]]=7&h,h>>>=3,d-=3}for(;a.have<19;)a.lens[Z[a.have++]]=0;if(a.lencode=a.lendyn,a.lenbits=7,E={bits:a.lenbits},x=ne(0,a.lens,0,19,a.lencode,0,a.work,E),a.lenbits=E.bits,x){t.msg=\"invalid code lengths set\",a.mode=me;break}a.have=0,a.mode=16198;case 16198:for(;a.have<a.nlen+a.ndist;){for(;z=a.lencode[h&(1<<a.lenbits)-1],m=z>>>24,b=z>>>16&255,g=65535&z,!(m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(g<16)h>>>=m,d-=m,a.lens[a.have++]=g;else{if(16===g){for(R=m+2;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(h>>>=m,d-=m,0===a.have){t.msg=\"invalid bit length repeat\",a.mode=me;break}y=a.lens[a.have-1],c=3+(3&h),h>>>=2,d-=2}else if(17===g){for(R=m+3;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=m,d-=m,y=0,c=3+(7&h),h>>>=3,d-=3}else{for(R=m+7;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=m,d-=m,y=0,c=11+(127&h),h>>>=7,d-=7}if(a.have+c>a.nlen+a.ndist){t.msg=\"invalid bit length repeat\",a.mode=me;break}for(;c--;)a.lens[a.have++]=y}}if(a.mode===me)break;if(0===a.lens[256]){t.msg=\"invalid code -- missing end-of-block\",a.mode=me;break}if(a.lenbits=9,E={bits:a.lenbits},x=ne(1,a.lens,0,a.nlen,a.lencode,0,a.work,E),a.lenbits=E.bits,x){t.msg=\"invalid literal/lengths set\",a.mode=me;break}if(a.distbits=6,a.distcode=a.distdyn,E={bits:a.distbits},x=ne(2,a.lens,a.nlen,a.ndist,a.distcode,0,a.work,E),a.distbits=E.bits,x){t.msg=\"invalid distances set\",a.mode=me;break}if(a.mode=16199,e===oe)break t;case 16199:a.mode=16200;case 16200:if(o>=6&&l>=258){t.next_out=r,t.avail_out=l,t.next_in=s,t.avail_in=o,a.hold=h,a.bits=d,$t(t,f),r=t.next_out,n=t.output,l=t.avail_out,s=t.next_in,i=t.input,o=t.avail_in,h=a.hold,d=a.bits,16191===a.mode&&(a.back=-1);break}for(a.back=0;z=a.lencode[h&(1<<a.lenbits)-1],m=z>>>24,b=z>>>16&255,g=65535&z,!(m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(b&&0==(240&b)){for(p=m,k=b,v=g;z=a.lencode[v+((h&(1<<p+k)-1)>>p)],m=z>>>24,b=z>>>16&255,g=65535&z,!(p+m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=p,d-=p,a.back+=p}if(h>>>=m,d-=m,a.back+=m,a.length=g,0===b){a.mode=16205;break}if(32&b){a.back=-1,a.mode=16191;break}if(64&b){t.msg=\"invalid literal/length code\",a.mode=me;break}a.extra=15&b,a.mode=16201;case 16201:if(a.extra){for(R=a.extra;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.length+=h&(1<<a.extra)-1,h>>>=a.extra,d-=a.extra,a.back+=a.extra}a.was=a.length,a.mode=16202;case 16202:for(;z=a.distcode[h&(1<<a.distbits)-1],m=z>>>24,b=z>>>16&255,g=65535&z,!(m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(0==(240&b)){for(p=m,k=b,v=g;z=a.distcode[v+((h&(1<<p+k)-1)>>p)],m=z>>>24,b=z>>>16&255,g=65535&z,!(p+m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=p,d-=p,a.back+=p}if(h>>>=m,d-=m,a.back+=m,64&b){t.msg=\"invalid distance code\",a.mode=me;break}a.offset=g,a.extra=15&b,a.mode=16203;case 16203:if(a.extra){for(R=a.extra;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.offset+=h&(1<<a.extra)-1,h>>>=a.extra,d-=a.extra,a.back+=a.extra}if(a.offset>a.dmax){t.msg=\"invalid distance too far back\",a.mode=me;break}a.mode=16204;case 16204:if(0===l)break t;if(c=f-l,a.offset>c){if(c=a.offset-c,c>a.whave&&a.sane){t.msg=\"invalid distance too far back\",a.mode=me;break}c>a.wnext?(c-=a.wnext,u=a.wsize-c):u=a.wnext-c,c>a.length&&(c=a.length),w=a.window}else w=n,u=r-a.offset,c=a.length;c>l&&(c=l),l-=c,a.length-=c;do{n[r++]=w[u++]}while(--c);0===a.length&&(a.mode=16200);break;case 16205:if(0===l)break t;n[r++]=a.length,l--,a.mode=16200;break;case 16206:if(a.wrap){for(;d<32;){if(0===o)break t;o--,h|=i[s++]<<d,d+=8}if(f-=l,t.total_out+=f,a.total+=f,4&a.wrap&&f&&(t.adler=a.check=a.flags?N(a.check,n,f,r-f):F(a.check,n,f,r-f)),f=l,4&a.wrap&&(a.flags?h:be(h))!==a.check){t.msg=\"incorrect data check\",a.mode=me;break}h=0,d=0}a.mode=16207;case 16207:if(a.wrap&&a.flags){for(;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(4&a.wrap&&h!==(4294967295&a.total)){t.msg=\"incorrect length check\",a.mode=me;break}h=0,d=0}a.mode=16208;case 16208:x=he;break t;case me:x=fe;break t;case 16210:return ce;default:return _e}return t.next_out=r,t.avail_out=l,t.next_in=s,t.avail_in=o,a.hold=h,a.bits=d,(a.wsize||f!==t.avail_out&&a.mode<me&&(a.mode<16206||e!==se))&&Ze(t,t.output,t.next_out,f-t.avail_out),_-=t.avail_in,f-=t.avail_out,t.total_in+=_,t.total_out+=f,a.total+=f,4&a.wrap&&f&&(t.adler=a.check=a.flags?N(a.check,n,f,t.next_out-f):F(a.check,n,f,t.next_out-f)),t.data_type=a.bits+(a.last?64:0)+(16191===a.mode?128:0)+(16199===a.mode||16194===a.mode?256:0),(0===_&&0===f||e===se)&&x===le&&(x=ue),x},inflateEnd:t=>{if(pe(t))return _e;let e=t.state;return e.window&&(e.window=null),t.state=null,le},inflateGetHeader:(t,e)=>{if(pe(t))return _e;const a=t.state;return 0==(2&a.wrap)?_e:(a.head=e,e.done=!1,le)},inflateSetDictionary:(t,e)=>{const a=e.length;let i,n,s;return pe(t)?_e:(i=t.state,0!==i.wrap&&16190!==i.mode?_e:16190===i.mode&&(n=1,n=F(n,e,a,0),n!==i.check)?fe:(s=Ze(t,e,a,a),s?(i.mode=16210,ce):(i.havedict=1,le)))},inflateInfo:\"pako inflate (from Nodeca project)\"};var Se=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1};const De=Object.prototype.toString,{Z_NO_FLUSH:Te,Z_FINISH:Oe,Z_OK:Fe,Z_STREAM_END:Le,Z_NEED_DICT:Ne,Z_STREAM_ERROR:Ie,Z_DATA_ERROR:Be,Z_MEM_ERROR:Ce}=B;function He(t){this.options=Tt({chunkSize:65536,windowBits:15,to:\"\"},t||{});const e=this.options;e.raw&&e.windowBits>=0&&e.windowBits<16&&(e.windowBits=-e.windowBits,0===e.windowBits&&(e.windowBits=-15)),!(e.windowBits>=0&&e.windowBits<16)||t&&t.windowBits||(e.windowBits+=32),e.windowBits>15&&e.windowBits<48&&0==(15&e.windowBits)&&(e.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new Ct,this.strm.avail_out=0;let a=Ue.inflateInit2(this.strm,e.windowBits);if(a!==Fe)throw new Error(I[a]);if(this.header=new Se,Ue.inflateGetHeader(this.strm,this.header),e.dictionary&&(\"string\"==typeof e.dictionary?e.dictionary=Nt(e.dictionary):\"[object ArrayBuffer]\"===De.call(e.dictionary)&&(e.dictionary=new Uint8Array(e.dictionary)),e.raw&&(a=Ue.inflateSetDictionary(this.strm,e.dictionary),a!==Fe)))throw new Error(I[a])}He.prototype.push=function(t,e){const a=this.strm,i=this.options.chunkSize,n=this.options.dictionary;let s,r,o;if(this.ended)return!1;for(r=e===~~e?e:!0===e?Oe:Te,\"[object ArrayBuffer]\"===De.call(t)?a.input=new Uint8Array(t):a.input=t,a.next_in=0,a.avail_in=a.input.length;;){for(0===a.avail_out&&(a.output=new Uint8Array(i),a.next_out=0,a.avail_out=i),s=Ue.inflate(a,r),s===Ne&&n&&(s=Ue.inflateSetDictionary(a,n),s===Fe?s=Ue.inflate(a,r):s===Be&&(s=Ne));a.avail_in>0&&s===Le&&a.state.wrap>0&&0!==t[a.next_in];)Ue.inflateReset(a),s=Ue.inflate(a,r);switch(s){case Ie:case Be:case Ne:case Ce:return this.onEnd(s),this.ended=!0,!1}if(o=a.avail_out,a.next_out&&(0===a.avail_out||s===Le))if(\"string\"===this.options.to){let t=Bt(a.output,a.next_out),e=a.next_out-t,n=It(a.output,t);a.next_out=e,a.avail_out=i-e,e&&a.output.set(a.output.subarray(t,t+e),0),this.onData(n)}else this.onData(a.output.length===a.next_out?a.output:a.output.subarray(0,a.next_out));if(s!==Fe||0!==o){if(s===Le)return s=Ue.inflateEnd(this.strm),this.onEnd(s),this.ended=!0,!0;if(0===a.avail_in)break}}return!0},He.prototype.onData=function(t){this.chunks.push(t)},He.prototype.onEnd=function(t){t===Fe&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=Ot(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg};const{Deflate:Me,deflate:je,deflateRaw:Ke,gzip:Pe}=Vt;var Ye=Me,Ge=B;const Xe=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error(\"Adding invalid event\");const e=this._hasEvents?\",\":\"\";this.deflate.push(e+t,Ge.Z_SYNC_FLUSH),this._hasEvents=!0}finish(){if(this.deflate.push(\"]\",Ge.Z_FINISH),this.deflate.err)throw this.deflate.err;const t=this.deflate.result;return this._init(),t}_init(){this._hasEvents=!1,this.deflate=new Ye,this.deflate.push(\"[\",Ge.Z_NO_FLUSH)}},We={clear:()=>(Xe.clear(),\"\"),addEvent:t=>Xe.addEvent(t),finish:()=>Xe.finish()};addEventListener(\"message\",(function(t){const e=t.data.method,a=t.data.id,i=t.data.arg;if(e in We&&\"function\"==typeof We[e])try{const t=We[e](i);postMessage({id:a,method:e,success:!0,response:t})}catch(t){postMessage({id:a,method:e,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:\"init\",success:!0,response:void 0});`;\n","import type { AddEventResult, EventBuffer, RecordingEvent } from '../types';\n\n/**\n * A basic event buffer that does not do any compression.\n * Used as fallback if the compression worker cannot be loaded or is disabled.\n */\nexport class EventBufferArray implements EventBuffer {\n  /** All the events that are buffered to be sent. */\n  public events: RecordingEvent[];\n\n  public constructor() {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n  public get hasEvents(): boolean {\n    return this.events.length > 0;\n  }\n\n  /** @inheritdoc */\n  public destroy(): void {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n  public async addEvent(event: RecordingEvent, isCheckout?: boolean): Promise<AddEventResult> {\n    if (isCheckout) {\n      this.events = [event];\n      return;\n    }\n\n    this.events.push(event);\n    return;\n  }\n\n  /** @inheritdoc */\n  public finish(): Promise<string> {\n    return new Promise<string>(resolve => {\n      // Make a copy of the events array reference and immediately clear the\n      // events member so that we do not lose new events while uploading\n      // attachment.\n      const eventsRet = this.events;\n      this.events = [];\n      resolve(JSON.stringify(eventsRet));\n    });\n  }\n}\n","import { logger } from '@sentry/utils';\n\nimport type { WorkerRequest, WorkerResponse } from '../types';\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nexport class WorkerHandler {\n  private _worker: Worker;\n  private _id: number;\n  private _ensureReadyPromise?: Promise<void>;\n\n  public constructor(worker: Worker) {\n    this._worker = worker;\n    this._id = 0;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n  public ensureReady(): Promise<void> {\n    // Ensure we only check once\n    if (this._ensureReadyPromise) {\n      return this._ensureReadyPromise;\n    }\n\n    this._ensureReadyPromise = new Promise((resolve, reject) => {\n      this._worker.addEventListener(\n        'message',\n        ({ data }: MessageEvent) => {\n          if ((data as WorkerResponse).success) {\n            resolve();\n          } else {\n            reject();\n          }\n        },\n        { once: true },\n      );\n\n      this._worker.addEventListener(\n        'error',\n        error => {\n          reject(error);\n        },\n        { once: true },\n      );\n    });\n\n    return this._ensureReadyPromise;\n  }\n\n  /**\n   * Destroy the worker.\n   */\n  public destroy(): void {\n    __DEBUG_BUILD__ && logger.log('[Replay] Destroying compression worker');\n    this._worker.terminate();\n  }\n\n  /**\n   * Post message to worker and wait for response before resolving promise.\n   */\n  public postMessage<T>(method: WorkerRequest['method'], arg?: WorkerRequest['arg']): Promise<T> {\n    const id = this._getAndIncrementId();\n\n    return new Promise((resolve, reject) => {\n      const listener = ({ data }: MessageEvent): void => {\n        const response = data as WorkerResponse;\n        if (response.method !== method) {\n          return;\n        }\n\n        // There can be multiple listeners for a single method, the id ensures\n        // that the response matches the caller.\n        if (response.id !== id) {\n          return;\n        }\n\n        // At this point, we'll always want to remove listener regardless of result status\n        this._worker.removeEventListener('message', listener);\n\n        if (!response.success) {\n          // TODO: Do some error handling, not sure what\n          __DEBUG_BUILD__ && logger.error('[Replay]', response.response);\n\n          reject(new Error('Error in compression worker'));\n          return;\n        }\n\n        resolve(response.response as T);\n      };\n\n      // Note: we can't use `once` option because it's possible it needs to\n      // listen to multiple messages\n      this._worker.addEventListener('message', listener);\n      this._worker.postMessage({ id, method, arg });\n    });\n  }\n\n  /** Get the current ID and increment it for the next call. */\n  private _getAndIncrementId(): number {\n    return this._id++;\n  }\n}\n","import type { ReplayRecordingData } from '@sentry/types';\n\nimport type { AddEventResult, EventBuffer, RecordingEvent } from '../types';\nimport { WorkerHandler } from './WorkerHandler';\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nexport class EventBufferCompressionWorker implements EventBuffer {\n  /** @inheritdoc */\n  public hasEvents: boolean;\n\n  private _worker: WorkerHandler;\n\n  public constructor(worker: Worker) {\n    this._worker = new WorkerHandler(worker);\n    this.hasEvents = false;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n  public ensureReady(): Promise<void> {\n    return this._worker.ensureReady();\n  }\n\n  /**\n   * Destroy the event buffer.\n   */\n  public destroy(): void {\n    this._worker.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfuly received and processed by worker.\n   */\n  public async addEvent(event: RecordingEvent, isCheckout?: boolean): Promise<AddEventResult> {\n    this.hasEvents = true;\n\n    if (isCheckout) {\n      // This event is a checkout, make sure worker buffer is cleared before\n      // proceeding.\n      await this._clear();\n    }\n\n    return this._sendEventToWorker(event);\n  }\n\n  /**\n   * Finish the event buffer and return the compressed data.\n   */\n  public finish(): Promise<ReplayRecordingData> {\n    return this._finishRequest();\n  }\n\n  /**\n   * Send the event to the worker.\n   */\n  private _sendEventToWorker(event: RecordingEvent): Promise<AddEventResult> {\n    return this._worker.postMessage<void>('addEvent', JSON.stringify(event));\n  }\n\n  /**\n   * Finish the request and return the compressed data from the worker.\n   */\n  private async _finishRequest(): Promise<Uint8Array> {\n    const response = await this._worker.postMessage<Uint8Array>('finish');\n\n    this.hasEvents = false;\n\n    return response;\n  }\n\n  /** Clear any pending events from the worker. */\n  private _clear(): Promise<void> {\n    return this._worker.postMessage('clear');\n  }\n}\n","import type { ReplayRecordingData } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport type { AddEventResult, EventBuffer, RecordingEvent } from '../types';\nimport { EventBufferArray } from './EventBufferArray';\nimport { EventBufferCompressionWorker } from './EventBufferCompressionWorker';\n\n/**\n * This proxy will try to use the compression worker, and fall back to use the simple buffer if an error occurs there.\n * This can happen e.g. if the worker cannot be loaded.\n * Exported only for testing.\n */\nexport class EventBufferProxy implements EventBuffer {\n  private _fallback: EventBufferArray;\n  private _compression: EventBufferCompressionWorker;\n  private _used: EventBuffer;\n  private _ensureWorkerIsLoadedPromise: Promise<void>;\n\n  public constructor(worker: Worker) {\n    this._fallback = new EventBufferArray();\n    this._compression = new EventBufferCompressionWorker(worker);\n    this._used = this._fallback;\n\n    this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded();\n  }\n\n  /** @inheritDoc */\n  public get hasEvents(): boolean {\n    return this._used.hasEvents;\n  }\n\n  /** @inheritDoc */\n  public destroy(): void {\n    this._fallback.destroy();\n    this._compression.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfully added.\n   */\n  public addEvent(event: RecordingEvent, isCheckout?: boolean): Promise<AddEventResult> {\n    return this._used.addEvent(event, isCheckout);\n  }\n\n  /** @inheritDoc */\n  public async finish(): Promise<ReplayRecordingData> {\n    // Ensure the worker is loaded, so the sent event is compressed\n    await this.ensureWorkerIsLoaded();\n\n    return this._used.finish();\n  }\n\n  /** Ensure the worker has loaded. */\n  public ensureWorkerIsLoaded(): Promise<void> {\n    return this._ensureWorkerIsLoadedPromise;\n  }\n\n  /** Actually check if the worker has been loaded. */\n  private async _ensureWorkerIsLoaded(): Promise<void> {\n    try {\n      await this._compression.ensureReady();\n    } catch (error) {\n      // If the worker fails to load, we fall back to the simple buffer.\n      // Nothing more to do from our side here\n      __DEBUG_BUILD__ && logger.log('[Replay] Failed to load the compression worker, falling back to simple buffer');\n      return;\n    }\n\n    // Now we need to switch over the array buffer to the compression worker\n    await this._switchToCompressionWorker();\n  }\n\n  /** Switch the used buffer to the compression worker. */\n  private async _switchToCompressionWorker(): Promise<void> {\n    const { events } = this._fallback;\n\n    const addEventPromises: Promise<void>[] = [];\n    for (const event of events) {\n      addEventPromises.push(this._compression.addEvent(event));\n    }\n\n    // We switch over to the new buffer immediately - any further events will be added\n    // after the previously buffered ones\n    this._used = this._compression;\n\n    // Wait for original events to be re-added before resolving\n    try {\n      await Promise.all(addEventPromises);\n    } catch (error) {\n      __DEBUG_BUILD__ && logger.warn('[Replay] Failed to add events when switching buffers.', error);\n    }\n  }\n}\n","import { logger } from '@sentry/utils';\n\nimport type { EventBuffer } from '../types';\nimport workerString from '../worker/worker.js';\nimport { EventBufferArray } from './EventBufferArray';\nimport { EventBufferProxy } from './EventBufferProxy';\n\ninterface CreateEventBufferParams {\n  useCompression: boolean;\n}\n\n/**\n * Create an event buffer for replays.\n */\nexport function createEventBuffer({ useCompression }: CreateEventBufferParams): EventBuffer {\n  // eslint-disable-next-line no-restricted-globals\n  if (useCompression && window.Worker) {\n    try {\n      const workerBlob = new Blob([workerString]);\n      const workerUrl = URL.createObjectURL(workerBlob);\n\n      __DEBUG_BUILD__ && logger.log('[Replay] Using compression worker');\n      const worker = new Worker(workerUrl);\n      return new EventBufferProxy(worker);\n    } catch (error) {\n      __DEBUG_BUILD__ && logger.log('[Replay] Failed to create compression worker');\n      // Fall back to use simple event buffer array\n    }\n  }\n\n  __DEBUG_BUILD__ && logger.log('[Replay] Using simple buffer');\n  return new EventBufferArray();\n}\n","/**\n * Given an initial timestamp and an expiry duration, checks to see if current\n * time should be considered as expired.\n */\nexport function isExpired(\n  initialTime: null | number,\n  expiry: undefined | number,\n  targetTime: number = +new Date(),\n): boolean {\n  // Always expired if < 0\n  if (initialTime === null || expiry === undefined || expiry < 0) {\n    return true;\n  }\n\n  // Never expires if == 0\n  if (expiry === 0) {\n    return false;\n  }\n\n  return initialTime + expiry <= targetTime;\n}\n","import { MAX_SESSION_LIFE } from '../constants';\nimport type { Session } from '../types';\nimport { isExpired } from './isExpired';\n\n/**\n * Checks to see if session is expired\n */\nexport function isSessionExpired(session: Session, idleTimeout: number, targetTime: number = +new Date()): boolean {\n  return (\n    // First, check that maximum session length has not been exceeded\n    isExpired(session.started, MAX_SESSION_LIFE, targetTime) ||\n    // check that the idle timeout has not been exceeded (i.e. user has\n    // performed an action within the last `idleTimeout` ms)\n    isExpired(session.lastActivity, idleTimeout, targetTime)\n  );\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../constants';\nimport type { Session } from '../types';\n\n/**\n * Save a session to session storage.\n */\nexport function saveSession(session: Session): void {\n  const hasSessionStorage = 'sessionStorage' in WINDOW;\n  if (!hasSessionStorage) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.setItem(REPLAY_SESSION_KEY, JSON.stringify(session));\n  } catch {\n    // Ignore potential SecurityError exceptions\n  }\n}\n","/**\n * Given a sample rate, returns true if replay should be sampled.\n *\n * 1.0 = 100% sampling\n * 0.0 = 0% sampling\n */\nexport function isSampled(sampleRate?: number): boolean {\n  if (sampleRate === undefined) {\n    return false;\n  }\n\n  // Math.random() returns a number in range of 0 to 1 (inclusive of 0, but not 1)\n  return Math.random() < sampleRate;\n}\n","import { uuid4 } from '@sentry/utils';\n\nimport type { Sampled, Session } from '../types';\nimport { isSampled } from '../util/isSampled';\n\n/**\n * Get a session with defaults & applied sampling.\n */\nexport function makeSession(session: Partial<Session> & { sampled: Sampled }): Session {\n  const now = new Date().getTime();\n  const id = session.id || uuid4();\n  // Note that this means we cannot set a started/lastActivity of `0`, but this should not be relevant outside of tests.\n  const started = session.started || now;\n  const lastActivity = session.lastActivity || now;\n  const segmentId = session.segmentId || 0;\n  const sampled = session.sampled;\n\n  return {\n    id,\n    started,\n    lastActivity,\n    segmentId,\n    sampled,\n  };\n}\n\n/**\n * Get the sampled status for a session based on sample rates & current sampled status.\n */\nexport function getSessionSampleType(sessionSampleRate: number, errorSampleRate: number): Sampled {\n  return isSampled(sessionSampleRate) ? 'session' : isSampled(errorSampleRate) ? 'error' : false;\n}\n","import { logger } from '@sentry/utils';\n\nimport type { Session, SessionOptions } from '../types';\nimport { saveSession } from './saveSession';\nimport { getSessionSampleType, makeSession } from './Session';\n\n/**\n * Create a new session, which in its current implementation is a Sentry event\n * that all replays will be saved to as attachments. Currently, we only expect\n * one of these Sentry events per \"replay session\".\n */\nexport function createSession({ sessionSampleRate, errorSampleRate, stickySession = false }: SessionOptions): Session {\n  const sampled = getSessionSampleType(sessionSampleRate, errorSampleRate);\n  const session = makeSession({\n    sampled,\n  });\n\n  __DEBUG_BUILD__ && logger.log(`[Replay] Creating new session: ${session.id}`);\n\n  if (stickySession) {\n    saveSession(session);\n  }\n\n  return session;\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../constants';\nimport type { Session } from '../types';\nimport { makeSession } from './Session';\n\n/**\n * Fetches a session from storage\n */\nexport function fetchSession(): Session | null {\n  const hasSessionStorage = 'sessionStorage' in WINDOW;\n\n  if (!hasSessionStorage) {\n    return null;\n  }\n\n  try {\n    // This can throw if cookies are disabled\n    const sessionStringFromStorage = WINDOW.sessionStorage.getItem(REPLAY_SESSION_KEY);\n\n    if (!sessionStringFromStorage) {\n      return null;\n    }\n\n    const sessionObj = JSON.parse(sessionStringFromStorage) as Session;\n\n    return makeSession(sessionObj);\n  } catch {\n    return null;\n  }\n}\n","import { logger } from '@sentry/utils';\n\nimport type { Session, SessionOptions } from '../types';\nimport { isSessionExpired } from '../util/isSessionExpired';\nimport { createSession } from './createSession';\nimport { fetchSession } from './fetchSession';\nimport { makeSession } from './Session';\n\ninterface GetSessionParams extends SessionOptions {\n  /**\n   * The length of time (in ms) which we will consider the session to be expired.\n   */\n  expiry: number;\n\n  /**\n   * The current session (e.g. if stickySession is off)\n   */\n  currentSession?: Session;\n}\n\n/**\n * Get or create a session\n */\nexport function getSession({\n  expiry,\n  currentSession,\n  stickySession,\n  sessionSampleRate,\n  errorSampleRate,\n}: GetSessionParams): { type: 'new' | 'saved'; session: Session } {\n  // If session exists and is passed, use it instead of always hitting session storage\n  const session = currentSession || (stickySession && fetchSession());\n\n  if (session) {\n    // If there is a session, check if it is valid (e.g. \"last activity\" time\n    // should be within the \"session idle time\", and \"session started\" time is\n    // within \"max session time\").\n    const isExpired = isSessionExpired(session, expiry);\n\n    if (!isExpired) {\n      return { type: 'saved', session };\n    } else if (session.sampled === 'error') {\n      // Error samples should not be re-created when expired, but instead we stop when the replay is done\n      const discardedSession = makeSession({ sampled: false });\n      return { type: 'new', session: discardedSession };\n    } else {\n      __DEBUG_BUILD__ && logger.log('[Replay] Session has expired');\n    }\n    // Otherwise continue to create a new session\n  }\n\n  const newSession = createSession({\n    stickySession,\n    sessionSampleRate,\n    errorSampleRate,\n  });\n\n  return { type: 'new', session: newSession };\n}\n","import { logger } from '@sentry/utils';\n\nimport { SESSION_IDLE_DURATION } from '../constants';\nimport type { AddEventResult, RecordingEvent, ReplayContainer } from '../types';\n\n/**\n * Add an event to the event buffer\n */\nexport async function addEvent(\n  replay: ReplayContainer,\n  event: RecordingEvent,\n  isCheckout?: boolean,\n): Promise<AddEventResult | null> {\n  if (!replay.eventBuffer) {\n    // This implies that `_isEnabled` is false\n    return null;\n  }\n\n  if (replay.isPaused()) {\n    // Do not add to event buffer when recording is paused\n    return null;\n  }\n\n  // TODO: sadness -- we will want to normalize timestamps to be in ms -\n  // requires coordination with frontend\n  const isMs = event.timestamp > 9999999999;\n  const timestampInMs = isMs ? event.timestamp : event.timestamp * 1000;\n\n  // Throw out events that happen more than 5 minutes ago. This can happen if\n  // page has been left open and idle for a long period of time and user\n  // comes back to trigger a new session. The performance entries rely on\n  // `performance.timeOrigin`, which is when the page first opened.\n  if (timestampInMs + SESSION_IDLE_DURATION < new Date().getTime()) {\n    return null;\n  }\n\n  // Only record earliest event if a new session was created, otherwise it\n  // shouldn't be relevant\n  const earliestEvent = replay.getContext().earliestEvent;\n  if (replay.session && replay.session.segmentId === 0 && (!earliestEvent || timestampInMs < earliestEvent)) {\n    replay.getContext().earliestEvent = timestampInMs;\n  }\n\n  try {\n    return await replay.eventBuffer.addEvent(event, isCheckout);\n  } catch (error) {\n    __DEBUG_BUILD__ && logger.error(error);\n    replay.stop();\n  }\n}\n","import type { Breadcrumb } from '@sentry/types';\n\ntype RequiredProperties = 'category' | 'message';\n\n/**\n * Create a breadcrumb for a replay.\n */\nexport function createBreadcrumb(\n  breadcrumb: Pick<Breadcrumb, RequiredProperties> & Partial<Omit<Breadcrumb, RequiredProperties>>,\n): Breadcrumb {\n  return {\n    timestamp: new Date().getTime() / 1000,\n    type: 'default',\n    ...breadcrumb,\n  };\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport type { Breadcrumb } from '@sentry/types';\n\nimport type { ReplayContainer } from '../types';\nimport { addEvent } from '../util/addEvent';\n\n/**\n * Add a breadcrumb event to replay.\n */\nexport function addBreadcrumbEvent(replay: ReplayContainer, breadcrumb: Breadcrumb): void {\n  if (breadcrumb.category === 'sentry.transaction') {\n    return;\n  }\n\n  if (breadcrumb.category === 'ui.click') {\n    replay.triggerUserActivity();\n  } else {\n    replay.checkAndHandleExpiredSession();\n  }\n\n  replay.addUpdate(() => {\n    void addEvent(replay, {\n      type: EventType.Custom,\n      // TODO: We were converting from ms to seconds for breadcrumbs, spans,\n      // but maybe we should just keep them as milliseconds\n      timestamp: (breadcrumb.timestamp || 0) * 1000,\n      data: {\n        tag: 'breadcrumb',\n        payload: breadcrumb,\n      },\n    });\n\n    // Do not flush after console log messages\n    return breadcrumb.category === 'console';\n  });\n}\n","import { record } from '@sentry-internal/rrweb';\nimport type { Breadcrumb } from '@sentry/types';\nimport { htmlTreeAsString } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { addBreadcrumbEvent } from './addBreadcrumbEvent';\n\ninterface DomHandlerData {\n  name: string;\n  event: Node | { target: Node };\n}\n\nexport const handleDomListener: (replay: ReplayContainer) => (handlerData: DomHandlerData) => void =\n  (replay: ReplayContainer) =>\n  (handlerData: DomHandlerData): void => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleDom(handlerData);\n\n    if (!result) {\n      return;\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n\n/**\n * An event handler to react to DOM events.\n */\nfunction handleDom(handlerData: DomHandlerData): Breadcrumb | null {\n  // Taken from https://github.com/getsentry/sentry-javascript/blob/master/packages/browser/src/integrations/breadcrumbs.ts#L112\n  let target;\n  let targetNode;\n\n  // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n  try {\n    targetNode = getTargetNode(handlerData);\n    target = htmlTreeAsString(targetNode);\n  } catch (e) {\n    target = '<unknown>';\n  }\n\n  if (target.length === 0) {\n    return null;\n  }\n\n  return createBreadcrumb({\n    category: `ui.${handlerData.name}`,\n    message: target,\n    data: {\n      // Not sure why this errors, Node should be correct (Argument of type 'Node' is not assignable to parameter of type 'INode')\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ...(targetNode ? { nodeId: record.mirror.getId(targetNode as any) } : {}),\n    },\n  });\n}\n\nfunction getTargetNode(handlerData: DomHandlerData): Node {\n  if (isEventWithTarget(handlerData.event)) {\n    return handlerData.event.target;\n  }\n\n  return handlerData.event;\n}\n\nfunction isEventWithTarget(event: unknown): event is { target: Node } {\n  return !!(event as { target?: Node }).target;\n}\n","import { EventType } from '@sentry-internal/rrweb';\n\nimport type { AddEventResult, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { addEvent } from './addEvent';\n\n/**\n * Create a \"span\" for each performance entry. The parent transaction is `this.replayEvent`.\n */\nexport function createPerformanceSpans(\n  replay: ReplayContainer,\n  entries: ReplayPerformanceEntry[],\n): Promise<AddEventResult | null>[] {\n  return entries.map(({ type, start, end, name, data }) =>\n    addEvent(replay, {\n      type: EventType.Custom,\n      timestamp: start,\n      data: {\n        tag: 'performanceSpan',\n        payload: {\n          op: type,\n          description: name,\n          startTimestamp: start,\n          endTimestamp: end,\n          data,\n        },\n      },\n    }),\n  );\n}\n","import { getCurrentHub } from '@sentry/core';\n\nimport type { ReplayContainer } from '../types';\n\n/**\n * Check whether a given request URL should be filtered out.\n */\nexport function shouldFilterRequest(replay: ReplayContainer, url: string): boolean {\n  // If we enabled the `traceInternals` experiment, we want to trace everything\n  if (__DEBUG_BUILD__ && replay.getOptions()._experiments.traceInternals) {\n    return false;\n  }\n\n  return !_isSentryRequest(url);\n}\n\n/**\n * Checks wether a given URL belongs to the configured Sentry DSN.\n */\nfunction _isSentryRequest(url: string): boolean {\n  const client = getCurrentHub().getClient();\n  const dsn = client && client.getDsn();\n  return dsn ? url.includes(dsn.host) : false;\n}\n","import type { ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from '../util/createPerformanceSpans';\nimport { shouldFilterRequest } from '../util/shouldFilterRequest';\n\ninterface FetchHandlerData {\n  args: Parameters<typeof fetch>;\n  fetchData: {\n    method: string;\n    url: string;\n  };\n  response: {\n    type: string;\n    url: string;\n    redirected: boolean;\n    status: number;\n    ok: boolean;\n  };\n  startTimestamp: number;\n  endTimestamp?: number;\n}\n\n/** only exported for tests */\nexport function handleFetch(handlerData: FetchHandlerData): null | ReplayPerformanceEntry {\n  if (!handlerData.endTimestamp) {\n    return null;\n  }\n\n  const { startTimestamp, endTimestamp, fetchData, response } = handlerData;\n\n  return {\n    type: 'resource.fetch',\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: fetchData.url,\n    data: {\n      method: fetchData.method,\n      statusCode: response.status,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addInstrumentationHandler('fetch', listener)`.\n */\nexport function handleFetchSpanListener(replay: ReplayContainer): (handlerData: FetchHandlerData) => void {\n  return (handlerData: FetchHandlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleFetch(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    if (shouldFilterRequest(replay, result.name)) {\n      return;\n    }\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning true will cause `addUpdate` to not flush\n      // We do not want network requests to cause a flush. This will prevent\n      // recurring/polling requests from keeping the replay session alive.\n      return true;\n    });\n  };\n}\n","import type { Event } from '@sentry/types';\n\n/**\n * Returns true if we think the given event is an error originating inside of rrweb.\n */\nexport function isRrwebError(event: Event): boolean {\n  if (event.type || !event.exception || !event.exception.values || !event.exception.values.length) {\n    return false;\n  }\n\n  // Check if any exception originates from rrweb\n  return event.exception.values.some(exception => {\n    if (!exception.stacktrace || !exception.stacktrace.frames || !exception.stacktrace.frames.length) {\n      return false;\n    }\n\n    return exception.stacktrace.frames.some(frame => frame.filename && frame.filename.includes('/rrweb/src/'));\n  });\n}\n","import { addBreadcrumb } from '@sentry/core';\nimport type { Event } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { REPLAY_EVENT_NAME, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport type { ReplayContainer } from '../types';\nimport { isRrwebError } from '../util/isRrwebError';\n\n/**\n * Returns a listener to be added to `addGlobalEventProcessor(listener)`.\n */\nexport function handleGlobalEventListener(replay: ReplayContainer): (event: Event) => Event | null {\n  return (event: Event) => {\n    // Do not apply replayId to the root event\n    if (event.type === REPLAY_EVENT_NAME) {\n      // Replays have separate set of breadcrumbs, do not include breadcrumbs\n      // from core SDK\n      delete event.breadcrumbs;\n      return event;\n    }\n\n    // Unless `captureExceptions` is enabled, we want to ignore errors coming from rrweb\n    // As there can be a bunch of stuff going wrong in internals there, that we don't want to bubble up to users\n    if (isRrwebError(event) && !replay.getOptions()._experiments.captureExceptions) {\n      __DEBUG_BUILD__ && logger.log('[Replay] Ignoring error from rrweb internals', event);\n      return null;\n    }\n\n    // Only tag transactions with replayId if not waiting for an error\n    // @ts-ignore private\n    if (!event.type || replay.recordingMode === 'session') {\n      event.tags = { ...event.tags, replayId: replay.getSessionId() };\n    }\n\n    // Collect traceIds in _context regardless of `recordingMode` - if it's true,\n    // _context gets cleared on every checkout\n    if (event.type === 'transaction' && event.contexts && event.contexts.trace && event.contexts.trace.trace_id) {\n      replay.getContext().traceIds.add(event.contexts.trace.trace_id as string);\n      return event;\n    }\n\n    // no event type means error\n    if (!event.type) {\n      replay.getContext().errorIds.add(event.event_id as string);\n    }\n\n    if (__DEBUG_BUILD__ && replay.getOptions()._experiments.traceInternals) {\n      const exc = getEventExceptionValues(event);\n      addInternalBreadcrumb({\n        message: `Tagging event (${event.event_id}) - ${event.message} - ${exc.type}: ${exc.value}`,\n      });\n    }\n\n    // Need to be very careful that this does not cause an infinite loop\n    if (\n      replay.recordingMode === 'error' &&\n      event.exception &&\n      event.message !== UNABLE_TO_SEND_REPLAY // ignore this error because otherwise we could loop indefinitely with trying to capture replay and failing\n    ) {\n      setTimeout(async () => {\n        // Allow flush to complete before resuming as a session recording, otherwise\n        // the checkout from `startRecording` may be included in the payload.\n        // Prefer to keep the error replay as a separate (and smaller) segment\n        // than the session replay.\n        await replay.flushImmediate();\n\n        if (replay.stopRecording()) {\n          // Reset all \"capture on error\" configuration before\n          // starting a new recording\n          replay.recordingMode = 'session';\n          replay.startRecording();\n        }\n      });\n    }\n\n    return event;\n  };\n}\n\nfunction addInternalBreadcrumb(arg: Parameters<typeof addBreadcrumb>[0]): void {\n  const { category, level, message, ...rest } = arg;\n\n  addBreadcrumb({\n    category: category || 'console',\n    level: level || 'debug',\n    message: `[debug]: ${message}`,\n    ...rest,\n  });\n}\n\nfunction getEventExceptionValues(event: Event): { type: string; value: string } {\n  return {\n    type: 'Unknown',\n    value: 'n/a',\n    ...(event.exception && event.exception.values && event.exception.values[0]),\n  };\n}\n","import type { ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from '../util/createPerformanceSpans';\n\ninterface HistoryHandlerData {\n  from: string;\n  to: string;\n}\n\nfunction handleHistory(handlerData: HistoryHandlerData): ReplayPerformanceEntry {\n  const { from, to } = handlerData;\n\n  const now = new Date().getTime() / 1000;\n\n  return {\n    type: 'navigation.push',\n    start: now,\n    end: now,\n    name: to,\n    data: {\n      previous: from,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addInstrumentationHandler('history', listener)`.\n */\nexport function handleHistorySpanListener(replay: ReplayContainer): (handlerData: HistoryHandlerData) => void {\n  return (handlerData: HistoryHandlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleHistory(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    // Need to collect visited URLs\n    replay.getContext().urls.push(result.name);\n    replay.triggerUserActivity();\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning false to flush\n      return false;\n    });\n  };\n}\n","import type { Breadcrumb, Scope } from '@sentry/types';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { addBreadcrumbEvent } from './addBreadcrumbEvent';\n\nlet _LAST_BREADCRUMB: null | Breadcrumb = null;\n\nexport const handleScopeListener: (replay: ReplayContainer) => (scope: Scope) => void =\n  (replay: ReplayContainer) =>\n  (scope: Scope): void => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleScope(scope);\n\n    if (!result) {\n      return;\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n\n/**\n * An event handler to handle scope changes.\n */\nexport function handleScope(scope: Scope): Breadcrumb | null {\n  // TODO (v8): Remove this guard. This was put in place because we introduced\n  // Scope.getLastBreadcrumb mid-v7 which caused incompatibilities with older SDKs.\n  // For now, we'll just return null if the method doesn't exist but we should eventually\n  // get rid of this guard.\n  const newBreadcrumb = scope.getLastBreadcrumb && scope.getLastBreadcrumb();\n\n  // Listener can be called when breadcrumbs have not changed, so we store the\n  // reference to the last crumb and only return a crumb if it has changed\n  if (_LAST_BREADCRUMB === newBreadcrumb || !newBreadcrumb) {\n    return null;\n  }\n\n  _LAST_BREADCRUMB = newBreadcrumb;\n\n  if (\n    newBreadcrumb.category &&\n    (['fetch', 'xhr', 'sentry.event', 'sentry.transaction'].includes(newBreadcrumb.category) ||\n      newBreadcrumb.category.startsWith('ui.'))\n  ) {\n    return null;\n  }\n\n  return createBreadcrumb(newBreadcrumb);\n}\n","import type { ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from '../util/createPerformanceSpans';\nimport { shouldFilterRequest } from '../util/shouldFilterRequest';\n\n// From sentry-javascript\n// e.g. https://github.com/getsentry/sentry-javascript/blob/c7fc025bf9fa8c073fdb56351808ce53909fbe45/packages/utils/src/instrument.ts#L180\ntype XHRSendInput = null | Blob | BufferSource | FormData | URLSearchParams | string;\n\ninterface SentryWrappedXMLHttpRequest extends XMLHttpRequest {\n  [key: string]: unknown;\n  __sentry_xhr__?: {\n    method?: string;\n    url?: string;\n    status_code?: number;\n    body?: XHRSendInput;\n    startTimestamp?: number; // This is unique to replay SDK\n  };\n  // If Sentry key appears in request, don't capture as request\n  // See https://github.com/getsentry/sentry-javascript/blob/c7fc025bf9fa8c073fdb56351808ce53909fbe45/packages/utils/src/instrument.ts#L236\n  __sentry_own_request__?: boolean;\n}\n\ninterface XhrHandlerData {\n  args: [string, string];\n  xhr: SentryWrappedXMLHttpRequest;\n  startTimestamp: number;\n  endTimestamp?: number;\n}\n\nfunction handleXhr(handlerData: XhrHandlerData): ReplayPerformanceEntry | null {\n  if (handlerData.xhr.__sentry_own_request__) {\n    // Taken from sentry-javascript\n    // Only capture non-sentry requests\n    return null;\n  }\n\n  if (handlerData.startTimestamp) {\n    // TODO: See if this is still needed\n    handlerData.xhr.__sentry_xhr__ = handlerData.xhr.__sentry_xhr__ || {};\n    handlerData.xhr.__sentry_xhr__.startTimestamp = handlerData.startTimestamp;\n  }\n\n  if (!handlerData.endTimestamp) {\n    return null;\n  }\n\n  const { method, url, status_code: statusCode } = handlerData.xhr.__sentry_xhr__ || {};\n\n  if (url === undefined) {\n    return null;\n  }\n\n  const timestamp = handlerData.xhr.__sentry_xhr__\n    ? handlerData.xhr.__sentry_xhr__.startTimestamp || 0\n    : handlerData.endTimestamp;\n\n  return {\n    type: 'resource.xhr',\n    name: url,\n    start: timestamp / 1000,\n    end: handlerData.endTimestamp / 1000,\n    data: {\n      method,\n      statusCode,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addInstrumentationHandler('xhr', listener)`.\n */\nexport function handleXhrSpanListener(replay: ReplayContainer): (handlerData: XhrHandlerData) => void {\n  return (handlerData: XhrHandlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleXhr(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    if (shouldFilterRequest(replay, result.name)) {\n      return;\n    }\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning true will cause `addUpdate` to not flush\n      // We do not want network requests to cause a flush. This will prevent\n      // recurring/polling requests from keeping the replay session alive.\n      return true;\n    });\n  };\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { addInstrumentationHandler } from '@sentry/utils';\n\nimport { handleDomListener } from '../coreHandlers/handleDom';\nimport { handleFetchSpanListener } from '../coreHandlers/handleFetch';\nimport { handleGlobalEventListener } from '../coreHandlers/handleGlobalEvent';\nimport { handleHistorySpanListener } from '../coreHandlers/handleHistory';\nimport { handleScopeListener } from '../coreHandlers/handleScope';\nimport { handleXhrSpanListener } from '../coreHandlers/handleXhr';\nimport type { ReplayContainer } from '../types';\n\n/**\n * Add global listeners that cannot be removed.\n */\nexport function addGlobalListeners(replay: ReplayContainer): void {\n  // Listeners from core SDK //\n  const scope = getCurrentHub().getScope();\n  if (scope) {\n    scope.addScopeListener(handleScopeListener(replay));\n  }\n  addInstrumentationHandler('dom', handleDomListener(replay));\n  addInstrumentationHandler('fetch', handleFetchSpanListener(replay));\n  addInstrumentationHandler('xhr', handleXhrSpanListener(replay));\n  addInstrumentationHandler('history', handleHistorySpanListener(replay));\n\n  // Tag all (non replay) events that get sent to Sentry with the current\n  // replay ID so that we can reference them later in the UI\n  addGlobalEventProcessor(handleGlobalEventListener(replay));\n}\n","import { WINDOW } from '../constants';\nimport type { AddEventResult, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from './createPerformanceSpans';\n\ntype ReplayMemoryEntry = ReplayPerformanceEntry & { data: { memory: MemoryInfo } };\n\ninterface MemoryInfo {\n  jsHeapSizeLimit: number;\n  totalJSHeapSize: number;\n  usedJSHeapSize: number;\n}\n\n/**\n * Create a \"span\" for the total amount of memory being used by JS objects\n * (including v8 internal objects).\n */\nexport async function addMemoryEntry(replay: ReplayContainer): Promise<Array<AddEventResult | null>> {\n  // window.performance.memory is a non-standard API and doesn't work on all browsers, so we try-catch this\n  try {\n    return Promise.all(\n      createPerformanceSpans(replay, [\n        // @ts-ignore memory doesn't exist on type Performance as the API is non-standard (we check that it exists above)\n        createMemoryEntry(WINDOW.performance.memory),\n      ]),\n    );\n  } catch (error) {\n    // Do nothing\n    return [];\n  }\n}\n\nfunction createMemoryEntry(memoryEntry: MemoryInfo): ReplayMemoryEntry {\n  const { jsHeapSizeLimit, totalJSHeapSize, usedJSHeapSize } = memoryEntry;\n  // we don't want to use `getAbsoluteTime` because it adds the event time to the\n  // time origin, so we get the current timestamp instead\n  const time = new Date().getTime() / 1000;\n  return {\n    type: 'memory',\n    name: 'memory',\n    start: time,\n    end: time,\n    data: {\n      memory: {\n        jsHeapSizeLimit,\n        totalJSHeapSize,\n        usedJSHeapSize,\n      },\n    },\n  };\n}\n","import { record } from '@sentry-internal/rrweb';\nimport { browserPerformanceTimeOrigin } from '@sentry/utils';\n\nimport { WINDOW } from '../constants';\nimport type {\n  AllPerformanceEntry,\n  PerformanceNavigationTiming,\n  PerformancePaintTiming,\n  ReplayPerformanceEntry,\n} from '../types';\n\n// Map entryType -> function to normalize data for event\n// @ts-ignore TODO: entry type does not fit the create* functions entry type\nconst ENTRY_TYPES: Record<string, (entry: AllPerformanceEntry) => null | ReplayPerformanceEntry> = {\n  // @ts-ignore TODO: entry type does not fit the create* functions entry type\n  resource: createResourceEntry,\n  paint: createPaintEntry,\n  // @ts-ignore TODO: entry type does not fit the create* functions entry type\n  navigation: createNavigationEntry,\n  // @ts-ignore TODO: entry type does not fit the create* functions entry type\n  ['largest-contentful-paint']: createLargestContentfulPaint,\n};\n\n/**\n * Create replay performance entries from the browser performance entries.\n */\nexport function createPerformanceEntries(entries: AllPerformanceEntry[]): ReplayPerformanceEntry[] {\n  return entries.map(createPerformanceEntry).filter(Boolean) as ReplayPerformanceEntry[];\n}\n\nfunction createPerformanceEntry(entry: AllPerformanceEntry): ReplayPerformanceEntry | null {\n  if (ENTRY_TYPES[entry.entryType] === undefined) {\n    return null;\n  }\n\n  return ENTRY_TYPES[entry.entryType](entry);\n}\n\nfunction getAbsoluteTime(time: number): number {\n  // browserPerformanceTimeOrigin can be undefined if `performance` or\n  // `performance.now` doesn't exist, but this is already checked by this integration\n  return ((browserPerformanceTimeOrigin || WINDOW.performance.timeOrigin) + time) / 1000;\n}\n\n// TODO: type definition!\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction createPaintEntry(entry: PerformancePaintTiming) {\n  const { duration, entryType, name, startTime } = entry;\n\n  const start = getAbsoluteTime(startTime);\n  return {\n    type: entryType,\n    name,\n    start,\n    end: start + duration,\n  };\n}\n\n// TODO: type definition!\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction createNavigationEntry(entry: PerformanceNavigationTiming) {\n  // TODO: There looks to be some more interesting bits in here (domComplete, domContentLoaded)\n  const { entryType, name, duration, domComplete, startTime, transferSize, type } = entry;\n\n  // Ignore entries with no duration, they do not seem to be useful and cause dupes\n  if (duration === 0) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${type}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(domComplete),\n    name,\n    data: {\n      size: transferSize,\n      duration,\n    },\n  };\n}\n\n// TODO: type definition!\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction createResourceEntry(entry: PerformanceResourceTiming) {\n  const { entryType, initiatorType, name, responseEnd, startTime, encodedBodySize, transferSize } = entry;\n\n  // Core SDK handles these\n  if (['fetch', 'xmlhttprequest'].includes(initiatorType)) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${initiatorType}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(responseEnd),\n    name,\n    data: {\n      size: transferSize,\n      encodedBodySize,\n    },\n  };\n}\n\n// TODO: type definition!\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction createLargestContentfulPaint(entry: PerformanceEntry & { size: number; element: Node }) {\n  const { duration, entryType, startTime, size } = entry;\n\n  const start = getAbsoluteTime(startTime);\n\n  return {\n    type: entryType,\n    name: entryType,\n    start,\n    end: start + duration,\n    data: {\n      duration,\n      size,\n      // Not sure why this errors, Node should be correct (Argument of type 'Node' is not assignable to parameter of type 'INode')\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      nodeId: record.mirror.getId(entry.element as any),\n    },\n  };\n}\n","type DebouncedCallback = {\n  (): void | unknown;\n  flush: () => void | unknown;\n  cancel: () => void;\n};\ntype CallbackFunction = () => unknown;\ntype DebounceOptions = { maxWait?: number };\n\n/**\n * Heavily simplified debounce function based on lodash.debounce.\n *\n * This function takes a callback function (@param fun) and delays its invocation\n * by @param wait milliseconds. Optionally, a maxWait can be specified in @param options,\n * which ensures that the callback is invoked at least once after the specified max. wait time.\n *\n * @param func the function whose invocation is to be debounced\n * @param wait the minimum time until the function is invoked after it was called once\n * @param options the options object, which can contain the `maxWait` property\n *\n * @returns the debounced version of the function, which needs to be called at least once to start the\n *          debouncing process. Subsequent calls will reset the debouncing timer and, in case @paramfunc\n *          was already invoked in the meantime, return @param func's return value.\n *          The debounced function has two additional properties:\n *          - `flush`: Invokes the debounced function immediately and returns its return value\n *          - `cancel`: Cancels the debouncing process and resets the debouncing timer\n */\nexport function debounce(func: CallbackFunction, wait: number, options?: DebounceOptions): DebouncedCallback {\n  let callbackReturnValue: unknown;\n\n  let timerId: ReturnType<typeof setTimeout> | undefined;\n  let maxTimerId: ReturnType<typeof setTimeout> | undefined;\n\n  const maxWait = options && options.maxWait ? Math.max(options.maxWait, wait) : 0;\n\n  function invokeFunc(): unknown {\n    cancelTimers();\n    callbackReturnValue = func();\n    return callbackReturnValue;\n  }\n\n  function cancelTimers(): void {\n    timerId !== undefined && clearTimeout(timerId);\n    maxTimerId !== undefined && clearTimeout(maxTimerId);\n    timerId = maxTimerId = undefined;\n  }\n\n  function flush(): unknown {\n    if (timerId !== undefined || maxTimerId !== undefined) {\n      return invokeFunc();\n    }\n    return callbackReturnValue;\n  }\n\n  function debounced(): unknown {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(invokeFunc, wait);\n\n    if (maxWait && maxTimerId === undefined && maxWait !== wait) {\n      maxTimerId = setTimeout(invokeFunc, maxWait);\n    }\n\n    return callbackReturnValue;\n  }\n\n  debounced.cancel = cancelTimers;\n  debounced.flush = flush;\n  return debounced;\n}\n","import { getCurrentHub } from '@sentry/core';\nimport type { Client, DataCategory, Event, EventDropReason } from '@sentry/types';\n\nlet _originalRecordDroppedEvent: Client['recordDroppedEvent'] | undefined;\n\n/**\n * Overwrite the `recordDroppedEvent` method on the client, so we can find out which events were dropped.\n * */\nexport function overwriteRecordDroppedEvent(errorIds: Set<string>): void {\n  const client = getCurrentHub().getClient();\n\n  if (!client) {\n    return;\n  }\n\n  const _originalCallback = client.recordDroppedEvent.bind(client);\n\n  const recordDroppedEvent: Client['recordDroppedEvent'] = (\n    reason: EventDropReason,\n    category: DataCategory,\n    event?: Event,\n  ): void => {\n    if (event && !event.type && event.event_id) {\n      errorIds.delete(event.event_id);\n    }\n\n    return _originalCallback(reason, category, event);\n  };\n\n  client.recordDroppedEvent = recordDroppedEvent;\n  _originalRecordDroppedEvent = _originalCallback;\n}\n\n/**\n * Restore the original method.\n * */\nexport function restoreRecordDroppedEvent(): void {\n  const client = getCurrentHub().getClient();\n\n  if (!client || !_originalRecordDroppedEvent) {\n    return;\n  }\n\n  client.recordDroppedEvent = _originalRecordDroppedEvent;\n}\n","import type { DsnComponents, ReplayEnvelope, ReplayEvent, ReplayRecordingData } from '@sentry/types';\nimport { createEnvelope, createEventEnvelopeHeaders, getSdkMetadataForEnvelopeHeader } from '@sentry/utils';\n\n/**\n * Create a replay envelope ready to be sent.\n * This includes both the replay event, as well as the recording data.\n */\nexport function createReplayEnvelope(\n  replayEvent: ReplayEvent,\n  recordingData: ReplayRecordingData,\n  dsn: DsnComponents,\n  tunnel?: string,\n): ReplayEnvelope {\n  return createEnvelope<ReplayEnvelope>(\n    createEventEnvelopeHeaders(replayEvent, getSdkMetadataForEnvelopeHeader(replayEvent), tunnel, dsn),\n    [\n      [{ type: 'replay_event' }, replayEvent],\n      [\n        {\n          type: 'replay_recording',\n          // If string then we need to encode to UTF8, otherwise will have\n          // wrong size. TextEncoder has similar browser support to\n          // MutationObserver, although it does not accept IE11.\n          length:\n            typeof recordingData === 'string' ? new TextEncoder().encode(recordingData).length : recordingData.length,\n        },\n        recordingData,\n      ],\n    ],\n  );\n}\n","import type { ReplayRecordingData } from '@sentry/types';\n\n/**\n * Prepare the recording data ready to be sent.\n */\nexport function prepareRecordingData({\n  recordingData,\n  headers,\n}: {\n  recordingData: ReplayRecordingData;\n  headers: Record<string, unknown>;\n}): ReplayRecordingData {\n  let payloadWithSequence;\n\n  // XXX: newline is needed to separate sequence id from events\n  const replayHeaders = `${JSON.stringify(headers)}\n`;\n\n  if (typeof recordingData === 'string') {\n    payloadWithSequence = `${replayHeaders}${recordingData}`;\n  } else {\n    const enc = new TextEncoder();\n    // XXX: newline is needed to separate sequence id from events\n    const sequence = enc.encode(replayHeaders);\n    // Merge the two Uint8Arrays\n    payloadWithSequence = new Uint8Array(sequence.length + recordingData.length);\n    payloadWithSequence.set(sequence);\n    payloadWithSequence.set(recordingData, sequence.length);\n  }\n\n  return payloadWithSequence;\n}\n","import type { Scope } from '@sentry/core';\nimport { prepareEvent } from '@sentry/core';\nimport type { IntegrationIndex } from '@sentry/core/build/types/integration';\nimport type { Client, ReplayEvent } from '@sentry/types';\n\n/**\n * Prepare a replay event & enrich it with the SDK metadata.\n */\nexport async function prepareReplayEvent({\n  client,\n  scope,\n  replayId: event_id,\n  event,\n}: {\n  client: Client & { _integrations?: IntegrationIndex };\n  scope: Scope;\n  replayId: string;\n  event: ReplayEvent;\n}): Promise<ReplayEvent | null> {\n  const integrations =\n    typeof client._integrations === 'object' && client._integrations !== null && !Array.isArray(client._integrations)\n      ? Object.keys(client._integrations)\n      : undefined;\n  const preparedEvent = (await prepareEvent(\n    client.getOptions(),\n    event,\n    { event_id, integrations },\n    scope,\n  )) as ReplayEvent | null;\n\n  // If e.g. a global event processor returned null\n  if (!preparedEvent) {\n    return null;\n  }\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  // extract the SDK name because `client._prepareEvent` doesn't add it to the event\n  const metadata = client.getSdkMetadata && client.getSdkMetadata();\n  const { name, version } = (metadata && metadata.sdk) || {};\n\n  preparedEvent.sdk = {\n    ...preparedEvent.sdk,\n    name: name || 'sentry.javascript.unknown',\n    version: version || '0.0.0',\n  };\n\n  return preparedEvent;\n}\n","import { getCurrentHub } from '@sentry/core';\nimport type { ReplayEvent, TransportMakeRequestResponse } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { REPLAY_EVENT_NAME, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport type { SendReplayData } from '../types';\nimport { createReplayEnvelope } from './createReplayEnvelope';\nimport { prepareRecordingData } from './prepareRecordingData';\nimport { prepareReplayEvent } from './prepareReplayEvent';\n\n/**\n * Send replay attachment using `fetch()`\n */\nexport async function sendReplayRequest({\n  recordingData,\n  replayId,\n  segmentId: segment_id,\n  includeReplayStartTimestamp,\n  eventContext,\n  timestamp,\n  session,\n  options,\n}: SendReplayData): Promise<void | TransportMakeRequestResponse> {\n  const preparedRecordingData = prepareRecordingData({\n    recordingData,\n    headers: {\n      segment_id,\n    },\n  });\n\n  const { urls, errorIds, traceIds, initialTimestamp } = eventContext;\n\n  const hub = getCurrentHub();\n  const client = hub.getClient();\n  const scope = hub.getScope();\n  const transport = client && client.getTransport();\n  const dsn = client && client.getDsn();\n\n  if (!client || !scope || !transport || !dsn || !session.sampled) {\n    return;\n  }\n\n  const baseEvent: ReplayEvent = {\n    // @ts-ignore private api\n    type: REPLAY_EVENT_NAME,\n    ...(includeReplayStartTimestamp ? { replay_start_timestamp: initialTimestamp / 1000 } : {}),\n    timestamp: timestamp / 1000,\n    error_ids: errorIds,\n    trace_ids: traceIds,\n    urls,\n    replay_id: replayId,\n    segment_id,\n    replay_type: session.sampled,\n  };\n\n  const replayEvent = await prepareReplayEvent({ scope, client, replayId, event: baseEvent });\n\n  if (!replayEvent) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'replay', baseEvent);\n    __DEBUG_BUILD__ && logger.log('An event processor returned `null`, will not send event.');\n    return;\n  }\n\n  replayEvent.contexts = {\n    ...replayEvent.contexts,\n    replay: {\n      ...(replayEvent.contexts && replayEvent.contexts.replay),\n      session_sample_rate: options.sessionSampleRate,\n      error_sample_rate: options.errorSampleRate,\n    },\n  };\n\n  /*\n  For reference, the fully built event looks something like this:\n  {\n      \"type\": \"replay_event\",\n      \"timestamp\": 1670837008.634,\n      \"error_ids\": [\n          \"errorId\"\n      ],\n      \"trace_ids\": [\n          \"traceId\"\n      ],\n      \"urls\": [\n          \"https://example.com\"\n      ],\n      \"replay_id\": \"eventId\",\n      \"segment_id\": 3,\n      \"replay_type\": \"error\",\n      \"platform\": \"javascript\",\n      \"event_id\": \"eventId\",\n      \"environment\": \"production\",\n      \"sdk\": {\n          \"integrations\": [\n              \"BrowserTracing\",\n              \"Replay\"\n          ],\n          \"name\": \"sentry.javascript.browser\",\n          \"version\": \"7.25.0\"\n      },\n      \"sdkProcessingMetadata\": {},\n      \"contexts\": {\n        \"replay\": {\n          \"session_sample_rate\": 1,\n          \"error_sample_rate\": 0,\n        },\n      },\n  }\n  */\n\n  const envelope = createReplayEnvelope(replayEvent, preparedRecordingData, dsn, client.getOptions().tunnel);\n\n  let response: void | TransportMakeRequestResponse;\n\n  try {\n    response = await transport.send(envelope);\n  } catch {\n    throw new Error(UNABLE_TO_SEND_REPLAY);\n  }\n\n  // TODO (v8): we can remove this guard once transport.send's type signature doesn't include void anymore\n  if (!response) {\n    return response;\n  }\n\n  // If the status code is invalid, we want to immediately stop & not retry\n  if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n    throw new TransportStatusCodeError(response.statusCode);\n  }\n\n  return response;\n}\n\n/**\n * This error indicates that the transport returned an invalid status code.\n */\nexport class TransportStatusCodeError extends Error {\n  public constructor(statusCode: number) {\n    super(`Transport returned status code ${statusCode}`);\n  }\n}\n","import { captureException, setContext } from '@sentry/core';\n\nimport { RETRY_BASE_INTERVAL, RETRY_MAX_COUNT, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport type { SendReplayData } from '../types';\nimport { sendReplayRequest, TransportStatusCodeError } from './sendReplayRequest';\n\n/**\n * Finalize and send the current replay event to Sentry\n */\nexport async function sendReplay(\n  replayData: SendReplayData,\n  retryConfig = {\n    count: 0,\n    interval: RETRY_BASE_INTERVAL,\n  },\n): Promise<unknown> {\n  const { recordingData, options } = replayData;\n\n  // short circuit if there's no events to upload (this shouldn't happen as _runFlush makes this check)\n  if (!recordingData.length) {\n    return;\n  }\n\n  try {\n    await sendReplayRequest(replayData);\n    return true;\n  } catch (err) {\n    if (err instanceof TransportStatusCodeError) {\n      throw err;\n    }\n\n    // Capture error for every failed replay\n    setContext('Replays', {\n      _retryCount: retryConfig.count,\n    });\n\n    if (__DEBUG_BUILD__ && options._experiments && options._experiments.captureExceptions) {\n      captureException(err);\n    }\n\n    // If an error happened here, it's likely that uploading the attachment\n    // failed, we'll can retry with the same events payload\n    if (retryConfig.count >= RETRY_MAX_COUNT) {\n      throw new Error(`${UNABLE_TO_SEND_REPLAY} - max retries exceeded`);\n    }\n\n    // will retry in intervals of 5, 10, 30\n    retryConfig.interval *= ++retryConfig.count;\n\n    return await new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          await sendReplay(replayData, retryConfig);\n          resolve(true);\n        } catch (err) {\n          reject(err);\n        }\n      }, retryConfig.interval);\n    });\n  }\n}\n","/* eslint-disable max-lines */ // TODO: We might want to split this file up\nimport { EventType, record } from '@sentry-internal/rrweb';\nimport { captureException } from '@sentry/core';\nimport type { Breadcrumb, ReplayRecordingMode } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport {\n  ERROR_CHECKOUT_TIME,\n  MAX_SESSION_LIFE,\n  SESSION_IDLE_DURATION,\n  VISIBILITY_CHANGE_TIMEOUT,\n  WINDOW,\n} from './constants';\nimport { setupPerformanceObserver } from './coreHandlers/performanceObserver';\nimport { createEventBuffer } from './eventBuffer';\nimport { getSession } from './session/getSession';\nimport { saveSession } from './session/saveSession';\nimport type {\n  AddEventResult,\n  AddUpdateCallback,\n  AllPerformanceEntry,\n  EventBuffer,\n  InternalEventContext,\n  PopEventContext,\n  RecordingEvent,\n  RecordingOptions,\n  ReplayContainer as ReplayContainerInterface,\n  ReplayPluginOptions,\n  Session,\n} from './types';\nimport { addEvent } from './util/addEvent';\nimport { addGlobalListeners } from './util/addGlobalListeners';\nimport { addMemoryEntry } from './util/addMemoryEntry';\nimport { createBreadcrumb } from './util/createBreadcrumb';\nimport { createPerformanceEntries } from './util/createPerformanceEntries';\nimport { createPerformanceSpans } from './util/createPerformanceSpans';\nimport { debounce } from './util/debounce';\nimport { isExpired } from './util/isExpired';\nimport { isSessionExpired } from './util/isSessionExpired';\nimport { overwriteRecordDroppedEvent, restoreRecordDroppedEvent } from './util/monkeyPatchRecordDroppedEvent';\nimport { sendReplay } from './util/sendReplay';\n\n/**\n * The main replay container class, which holds all the state and methods for recording and sending replays.\n */\nexport class ReplayContainer implements ReplayContainerInterface {\n  public eventBuffer: EventBuffer | null = null;\n\n  /**\n   * List of PerformanceEntry from PerformanceObserver\n   */\n  public performanceEvents: AllPerformanceEntry[] = [];\n\n  public session: Session | undefined;\n\n  /**\n   * Recording can happen in one of two modes:\n   * * session: Record the whole session, sending it continuously\n   * * error: Always keep the last 60s of recording, and when an error occurs, send it immediately\n   */\n  public recordingMode: ReplayRecordingMode = 'session';\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n  private readonly _recordingOptions: RecordingOptions;\n\n  private readonly _options: ReplayPluginOptions;\n\n  private _performanceObserver: PerformanceObserver | null = null;\n\n  private _debouncedFlush: ReturnType<typeof debounce>;\n  private _flushLock: Promise<unknown> | null = null;\n\n  /**\n   * Timestamp of the last user activity. This lives across sessions.\n   */\n  private _lastActivity: number = new Date().getTime();\n\n  /**\n   * Is the integration currently active?\n   */\n  private _isEnabled: boolean = false;\n\n  /**\n   * Paused is a state where:\n   * - DOM Recording is not listening at all\n   * - Nothing will be added to event buffer (e.g. core SDK events)\n   */\n  private _isPaused: boolean = false;\n\n  /**\n   * Have we attached listeners to the core SDK?\n   * Note we have to track this as there is no way to remove instrumentation handlers.\n   */\n  private _hasInitializedCoreListeners: boolean = false;\n\n  /**\n   * Function to stop recording\n   */\n  private _stopRecording: ReturnType<typeof record> | null = null;\n\n  private _context: InternalEventContext = {\n    errorIds: new Set(),\n    traceIds: new Set(),\n    urls: [],\n    earliestEvent: null,\n    initialTimestamp: new Date().getTime(),\n    initialUrl: '',\n  };\n\n  public constructor({\n    options,\n    recordingOptions,\n  }: {\n    options: ReplayPluginOptions;\n    recordingOptions: RecordingOptions;\n  }) {\n    this._recordingOptions = recordingOptions;\n    this._options = options;\n\n    this._debouncedFlush = debounce(() => this._flush(), this._options.flushMinDelay, {\n      maxWait: this._options.flushMaxDelay,\n    });\n  }\n\n  /** Get the event context. */\n  public getContext(): InternalEventContext {\n    return this._context;\n  }\n\n  /** If recording is currently enabled. */\n  public isEnabled(): boolean {\n    return this._isEnabled;\n  }\n\n  /** If recording is currently paused. */\n  public isPaused(): boolean {\n    return this._isPaused;\n  }\n\n  /** Get the replay integration options. */\n  public getOptions(): ReplayPluginOptions {\n    return this._options;\n  }\n\n  /**\n   * Initializes the plugin.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * _performanceObserver, Recording, Sentry SDK, etc)\n   */\n  public start(): void {\n    this._setInitialState();\n\n    if (!this._loadAndCheckSession()) {\n      return;\n    }\n\n    // If there is no session, then something bad has happened - can't continue\n    if (!this.session) {\n      this._handleException(new Error('No session found'));\n      return;\n    }\n\n    if (!this.session.sampled) {\n      // If session was not sampled, then we do not initialize the integration at all.\n      return;\n    }\n\n    // If session is sampled for errors, then we need to set the recordingMode\n    // to 'error', which will configure recording with different options.\n    if (this.session.sampled === 'error') {\n      this.recordingMode = 'error';\n    }\n\n    // setup() is generally called on page load or manually - in both cases we\n    // should treat it as an activity\n    this._updateSessionActivity();\n\n    this.eventBuffer = createEventBuffer({\n      useCompression: this._options.useCompression,\n    });\n\n    this._addListeners();\n\n    // Need to set as enabled before we start recording, as `record()` can trigger a flush with a new checkout\n    this._isEnabled = true;\n\n    this.startRecording();\n  }\n\n  /**\n   * Start recording.\n   *\n   * Note that this will cause a new DOM checkout\n   */\n  public startRecording(): void {\n    try {\n      this._stopRecording = record({\n        ...this._recordingOptions,\n        // When running in error sampling mode, we need to overwrite `checkoutEveryNms`\n        // Without this, it would record forever, until an error happens, which we don't want\n        // instead, we'll always keep the last 60 seconds of replay before an error happened\n        ...(this.recordingMode === 'error' && { checkoutEveryNms: ERROR_CHECKOUT_TIME }),\n        emit: this._handleRecordingEmit,\n      });\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Stops the recording, if it was running.\n   * Returns true if it was stopped, else false.\n   */\n  public stopRecording(): boolean {\n    try {\n      if (this._stopRecording) {\n        this._stopRecording();\n        this._stopRecording = undefined;\n        return true;\n      }\n\n      return false;\n    } catch (err) {\n      this._handleException(err);\n      return false;\n    }\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  public stop(): void {\n    if (!this._isEnabled) {\n      return;\n    }\n\n    try {\n      __DEBUG_BUILD__ && logger.log('[Replay] Stopping Replays');\n      this._isEnabled = false;\n      this._removeListeners();\n      this.stopRecording();\n      this.eventBuffer && this.eventBuffer.destroy();\n      this.eventBuffer = null;\n      this._debouncedFlush.cancel();\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Pause some replay functionality. See comments for `_isPaused`.\n   * This differs from stop as this only stops DOM recording, it is\n   * not as thorough of a shutdown as `stop()`.\n   */\n  public pause(): void {\n    this._isPaused = true;\n    this.stopRecording();\n  }\n\n  /**\n   * Resumes recording, see notes for `pause().\n   *\n   * Note that calling `startRecording()` here will cause a\n   * new DOM checkout.`\n   */\n  public resume(): void {\n    if (!this._loadAndCheckSession()) {\n      return;\n    }\n\n    this._isPaused = false;\n    this.startRecording();\n  }\n\n  /**\n   * We want to batch uploads of replay events. Save events only if\n   * `<flushMinDelay>` milliseconds have elapsed since the last event\n   * *OR* if `<flushMaxDelay>` milliseconds have elapsed.\n   *\n   * Accepts a callback to perform side-effects and returns true to stop batch\n   * processing and hand back control to caller.\n   */\n  public addUpdate(cb: AddUpdateCallback): void {\n    // We need to always run `cb` (e.g. in the case of `this.recordingMode == 'error'`)\n    const cbResult = cb();\n\n    // If this option is turned on then we will only want to call `flush`\n    // explicitly\n    if (this.recordingMode === 'error') {\n      return;\n    }\n\n    // If callback is true, we do not want to continue with flushing -- the\n    // caller will need to handle it.\n    if (cbResult === true) {\n      return;\n    }\n\n    // addUpdate is called quite frequently - use _debouncedFlush so that it\n    // respects the flush delays and does not flush immediately\n    this._debouncedFlush();\n  }\n\n  /**\n   * Updates the user activity timestamp and resumes recording. This should be\n   * called in an event handler for a user action that we consider as the user\n   * being \"active\" (e.g. a mouse click).\n   */\n  public triggerUserActivity(): void {\n    this._updateUserActivity();\n\n    // This case means that recording was once stopped due to inactivity.\n    // Ensure that recording is resumed.\n    if (!this._stopRecording) {\n      // Create a new session, otherwise when the user action is flushed, it\n      // will get rejected due to an expired session.\n      if (!this._loadAndCheckSession()) {\n        return;\n      }\n\n      // Note: This will cause a new DOM checkout\n      this.resume();\n      return;\n    }\n\n    // Otherwise... recording was never suspended, continue as normalish\n    this.checkAndHandleExpiredSession();\n\n    this._updateSessionActivity();\n  }\n\n  /**\n   *\n   * Always flush via `_debouncedFlush` so that we do not have flushes triggered\n   * from calling both `flush` and `_debouncedFlush`. Otherwise, there could be\n   * cases of mulitple flushes happening closely together.\n   */\n  public flushImmediate(): Promise<void> {\n    this._debouncedFlush();\n    // `.flush` is provided by the debounced function, analogously to lodash.debounce\n    return this._debouncedFlush.flush() as Promise<void>;\n  }\n\n  /** Get the current sesion (=replay) ID */\n  public getSessionId(): string | undefined {\n    return this.session && this.session.id;\n  }\n\n  /**\n   * Checks if recording should be stopped due to user inactivity. Otherwise\n   * check if session is expired and create a new session if so. Triggers a new\n   * full snapshot on new session.\n   *\n   * Returns true if session is not expired, false otherwise.\n   * @hidden\n   */\n  public checkAndHandleExpiredSession(expiry?: number): boolean | void {\n    const oldSessionId = this.getSessionId();\n\n    // Prevent starting a new session if the last user activity is older than\n    // MAX_SESSION_LIFE. Otherwise non-user activity can trigger a new\n    // session+recording. This creates noisy replays that do not have much\n    // content in them.\n    if (this._lastActivity && isExpired(this._lastActivity, MAX_SESSION_LIFE)) {\n      // Pause recording\n      this.pause();\n      return;\n    }\n\n    // --- There is recent user activity --- //\n    // This will create a new session if expired, based on expiry length\n    if (!this._loadAndCheckSession(expiry)) {\n      return;\n    }\n\n    // Session was expired if session ids do not match\n    const expired = oldSessionId !== this.getSessionId();\n\n    if (!expired) {\n      return true;\n    }\n\n    // Session is expired, trigger a full snapshot (which will create a new session)\n    this._triggerFullSnapshot();\n\n    return false;\n  }\n\n  /** A wrapper to conditionally capture exceptions. */\n  private _handleException(error: unknown): void {\n    __DEBUG_BUILD__ && logger.error('[Replay]', error);\n\n    if (__DEBUG_BUILD__ && this._options._experiments && this._options._experiments.captureExceptions) {\n      captureException(error);\n    }\n  }\n\n  /**\n   * Loads (or refreshes) the current session.\n   * Returns false if session is not recorded.\n   */\n  private _loadAndCheckSession(expiry = SESSION_IDLE_DURATION): boolean {\n    const { type, session } = getSession({\n      expiry,\n      stickySession: Boolean(this._options.stickySession),\n      currentSession: this.session,\n      sessionSampleRate: this._options.sessionSampleRate,\n      errorSampleRate: this._options.errorSampleRate,\n    });\n\n    // If session was newly created (i.e. was not loaded from storage), then\n    // enable flag to create the root replay\n    if (type === 'new') {\n      this._setInitialState();\n    }\n\n    const currentSessionId = this.getSessionId();\n    if (session.id !== currentSessionId) {\n      session.previousSessionId = currentSessionId;\n    }\n\n    this.session = session;\n\n    if (!this.session.sampled) {\n      this.stop();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Capture some initial state that can change throughout the lifespan of the\n   * replay. This is required because otherwise they would be captured at the\n   * first flush.\n   */\n  private _setInitialState(): void {\n    const urlPath = `${WINDOW.location.pathname}${WINDOW.location.hash}${WINDOW.location.search}`;\n    const url = `${WINDOW.location.origin}${urlPath}`;\n\n    this.performanceEvents = [];\n\n    // Reset _context as well\n    this._clearContext();\n\n    this._context.initialUrl = url;\n    this._context.initialTimestamp = new Date().getTime();\n    this._context.urls.push(url);\n  }\n\n  /**\n   * Adds listeners to record events for the replay\n   */\n  private _addListeners(): void {\n    try {\n      WINDOW.document.addEventListener('visibilitychange', this._handleVisibilityChange);\n      WINDOW.addEventListener('blur', this._handleWindowBlur);\n      WINDOW.addEventListener('focus', this._handleWindowFocus);\n\n      // We need to filter out dropped events captured by `addGlobalEventProcessor(this.handleGlobalEvent)` below\n      overwriteRecordDroppedEvent(this._context.errorIds);\n\n      // There is no way to remove these listeners, so ensure they are only added once\n      if (!this._hasInitializedCoreListeners) {\n        addGlobalListeners(this);\n\n        this._hasInitializedCoreListeners = true;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n\n    // PerformanceObserver //\n    if (!('PerformanceObserver' in WINDOW)) {\n      return;\n    }\n\n    this._performanceObserver = setupPerformanceObserver(this);\n  }\n\n  /**\n   * Cleans up listeners that were created in `_addListeners`\n   */\n  private _removeListeners(): void {\n    try {\n      WINDOW.document.removeEventListener('visibilitychange', this._handleVisibilityChange);\n\n      WINDOW.removeEventListener('blur', this._handleWindowBlur);\n      WINDOW.removeEventListener('focus', this._handleWindowFocus);\n\n      restoreRecordDroppedEvent();\n\n      if (this._performanceObserver) {\n        this._performanceObserver.disconnect();\n        this._performanceObserver = null;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Handler for recording events.\n   *\n   * Adds to event buffer, and has varying flushing behaviors if the event was a checkout.\n   */\n  private _handleRecordingEmit: (event: RecordingEvent, isCheckout?: boolean) => void = (\n    event: RecordingEvent,\n    isCheckout?: boolean,\n  ) => {\n    // If this is false, it means session is expired, create and a new session and wait for checkout\n    if (!this.checkAndHandleExpiredSession()) {\n      __DEBUG_BUILD__ && logger.error('[Replay] Received replay event after session expired.');\n\n      return;\n    }\n\n    this.addUpdate(() => {\n      // The session is always started immediately on pageload/init, but for\n      // error-only replays, it should reflect the most recent checkout\n      // when an error occurs. Clear any state that happens before this current\n      // checkout. This needs to happen before `addEvent()` which updates state\n      // dependent on this reset.\n      if (this.recordingMode === 'error' && event.type === 2) {\n        this._setInitialState();\n      }\n\n      // We need to clear existing events on a checkout, otherwise they are\n      // incremental event updates and should be appended\n      void addEvent(this, event, isCheckout);\n\n      // Different behavior for full snapshots (type=2), ignore other event types\n      // See https://github.com/rrweb-io/rrweb/blob/d8f9290ca496712aa1e7d472549480c4e7876594/packages/rrweb/src/types.ts#L16\n      if (event.type !== 2) {\n        return false;\n      }\n\n      // If there is a previousSessionId after a full snapshot occurs, then\n      // the replay session was started due to session expiration. The new session\n      // is started before triggering a new checkout and contains the id\n      // of the previous session. Do not immediately flush in this case\n      // to avoid capturing only the checkout and instead the replay will\n      // be captured if they perform any follow-up actions.\n      if (this.session && this.session.previousSessionId) {\n        return true;\n      }\n\n      // See note above re: session start needs to reflect the most recent\n      // checkout.\n      if (this.recordingMode === 'error' && this.session && this._context.earliestEvent) {\n        this.session.started = this._context.earliestEvent;\n        this._maybeSaveSession();\n      }\n\n      // Flush immediately so that we do not miss the first segment, otherwise\n      // it can prevent loading on the UI. This will cause an increase in short\n      // replays (e.g. opening and closing a tab quickly), but these can be\n      // filtered on the UI.\n      if (this.recordingMode === 'session') {\n        // We want to ensure the worker is ready, as otherwise we'd always send the first event uncompressed\n        void this.flushImmediate();\n      }\n\n      return true;\n    });\n  };\n\n  /**\n   * Handle when visibility of the page content changes. Opening a new tab will\n   * cause the state to change to hidden because of content of current page will\n   * be hidden. Likewise, moving a different window to cover the contents of the\n   * page will also trigger a change to a hidden state.\n   */\n  private _handleVisibilityChange: () => void = () => {\n    if (WINDOW.document.visibilityState === 'visible') {\n      this._doChangeToForegroundTasks();\n    } else {\n      this._doChangeToBackgroundTasks();\n    }\n  };\n\n  /**\n   * Handle when page is blurred\n   */\n  private _handleWindowBlur: () => void = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.blur',\n    });\n\n    // Do not count blur as a user action -- it's part of the process of them\n    // leaving the page\n    this._doChangeToBackgroundTasks(breadcrumb);\n  };\n\n  /**\n   * Handle when page is focused\n   */\n  private _handleWindowFocus: () => void = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.focus',\n    });\n\n    // Do not count focus as a user action -- instead wait until they focus and\n    // interactive with page\n    this._doChangeToForegroundTasks(breadcrumb);\n  };\n\n  /**\n   * Tasks to run when we consider a page to be hidden (via blurring and/or visibility)\n   */\n  private _doChangeToBackgroundTasks(breadcrumb?: Breadcrumb): void {\n    if (!this.session) {\n      return;\n    }\n\n    const expired = isSessionExpired(this.session, VISIBILITY_CHANGE_TIMEOUT);\n\n    if (breadcrumb && !expired) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Send replay when the page/tab becomes hidden. There is no reason to send\n    // replay if it becomes visible, since no actions we care about were done\n    // while it was hidden\n    this._conditionalFlush();\n  }\n\n  /**\n   * Tasks to run when we consider a page to be visible (via focus and/or visibility)\n   */\n  private _doChangeToForegroundTasks(breadcrumb?: Breadcrumb): void {\n    if (!this.session) {\n      return;\n    }\n\n    const isSessionActive = this.checkAndHandleExpiredSession(VISIBILITY_CHANGE_TIMEOUT);\n\n    if (!isSessionActive) {\n      // If the user has come back to the page within VISIBILITY_CHANGE_TIMEOUT\n      // ms, we will re-use the existing session, otherwise create a new\n      // session\n      __DEBUG_BUILD__ && logger.log('[Replay] Document has become active, but session has expired');\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n  }\n\n  /**\n   * Trigger rrweb to take a full snapshot which will cause this plugin to\n   * create a new Replay event.\n   */\n  private _triggerFullSnapshot(): void {\n    try {\n      __DEBUG_BUILD__ && logger.log('[Replay] Taking full rrweb snapshot');\n      record.takeFullSnapshot(true);\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Update user activity (across session lifespans)\n   */\n  private _updateUserActivity(_lastActivity: number = new Date().getTime()): void {\n    this._lastActivity = _lastActivity;\n  }\n\n  /**\n   * Updates the session's last activity timestamp\n   */\n  private _updateSessionActivity(_lastActivity: number = new Date().getTime()): void {\n    if (this.session) {\n      this.session.lastActivity = _lastActivity;\n      this._maybeSaveSession();\n    }\n  }\n\n  /**\n   * Helper to create (and buffer) a replay breadcrumb from a core SDK breadcrumb\n   */\n  private _createCustomBreadcrumb(breadcrumb: Breadcrumb): void {\n    this.addUpdate(() => {\n      void addEvent(this, {\n        type: EventType.Custom,\n        timestamp: breadcrumb.timestamp || 0,\n        data: {\n          tag: 'breadcrumb',\n          payload: breadcrumb,\n        },\n      });\n    });\n  }\n\n  /**\n   * Observed performance events are added to `this.performanceEvents`. These\n   * are included in the replay event before it is finished and sent to Sentry.\n   */\n  private _addPerformanceEntries(): Promise<Array<AddEventResult | null>> {\n    // Copy and reset entries before processing\n    const entries = [...this.performanceEvents];\n    this.performanceEvents = [];\n\n    return Promise.all(createPerformanceSpans(this, createPerformanceEntries(entries)));\n  }\n\n  /**\n   * Only flush if `this.recordingMode === 'session'`\n   */\n  private _conditionalFlush(): void {\n    if (this.recordingMode === 'error') {\n      return;\n    }\n\n    void this.flushImmediate();\n  }\n\n  /**\n   * Clear _context\n   */\n  private _clearContext(): void {\n    // XXX: `initialTimestamp` and `initialUrl` do not get cleared\n    this._context.errorIds.clear();\n    this._context.traceIds.clear();\n    this._context.urls = [];\n    this._context.earliestEvent = null;\n  }\n\n  /**\n   * Return and clear _context\n   */\n  private _popEventContext(): PopEventContext {\n    if (this._context.earliestEvent && this._context.earliestEvent < this._context.initialTimestamp) {\n      this._context.initialTimestamp = this._context.earliestEvent;\n    }\n\n    const _context = {\n      initialTimestamp: this._context.initialTimestamp,\n      initialUrl: this._context.initialUrl,\n      errorIds: Array.from(this._context.errorIds).filter(Boolean),\n      traceIds: Array.from(this._context.traceIds).filter(Boolean),\n      urls: this._context.urls,\n    };\n\n    this._clearContext();\n\n    return _context;\n  }\n\n  /**\n   * Flushes replay event buffer to Sentry.\n   *\n   * Performance events are only added right before flushing - this is\n   * due to the buffered performance observer events.\n   *\n   * Should never be called directly, only by `flush`\n   */\n  private async _runFlush(): Promise<void> {\n    if (!this.session || !this.eventBuffer) {\n      __DEBUG_BUILD__ && logger.error('[Replay] No session or eventBuffer found to flush.');\n      return;\n    }\n\n    await this._addPerformanceEntries();\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer || !this.eventBuffer.hasEvents) {\n      return;\n    }\n\n    // Only attach memory event if eventBuffer is not empty\n    await addMemoryEntry(this);\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer) {\n      return;\n    }\n\n    try {\n      // Note this empties the event buffer regardless of outcome of sending replay\n      const recordingData = await this.eventBuffer.finish();\n\n      // NOTE: Copy values from instance members, as it's possible they could\n      // change before the flush finishes.\n      const replayId = this.session.id;\n      const eventContext = this._popEventContext();\n      // Always increment segmentId regardless of outcome of sending replay\n      const segmentId = this.session.segmentId++;\n      this._maybeSaveSession();\n\n      await sendReplay({\n        replayId,\n        recordingData,\n        segmentId,\n        includeReplayStartTimestamp: segmentId === 0,\n        eventContext,\n        session: this.session,\n        options: this.getOptions(),\n        timestamp: new Date().getTime(),\n      });\n    } catch (err) {\n      this._handleException(err);\n\n      // This means we retried 3 times, and all of them failed\n      // In this case, we want to completely stop the replay - otherwise, we may get inconsistent segments\n      this.stop();\n    }\n  }\n\n  /**\n   * Flush recording data to Sentry. Creates a lock so that only a single flush\n   * can be active at a time. Do not call this directly.\n   */\n  private _flush: () => Promise<void> = async () => {\n    if (!this._isEnabled) {\n      // This can happen if e.g. the replay was stopped because of exceeding the retry limit\n      return;\n    }\n\n    if (!this.checkAndHandleExpiredSession()) {\n      __DEBUG_BUILD__ && logger.error('[Replay] Attempting to finish replay event after session expired.');\n      return;\n    }\n\n    if (!this.session) {\n      __DEBUG_BUILD__ && logger.error('[Replay] No session found to flush.');\n      return;\n    }\n\n    // A flush is about to happen, cancel any queued flushes\n    this._debouncedFlush.cancel();\n\n    // this._flushLock acts as a lock so that future calls to `_flush()`\n    // will be blocked until this promise resolves\n    if (!this._flushLock) {\n      this._flushLock = this._runFlush();\n      await this._flushLock;\n      this._flushLock = null;\n      return;\n    }\n\n    // Wait for previous flush to finish, then call the debounced `_flush()`.\n    // It's possible there are other flush requests queued and waiting for it\n    // to resolve. We want to reduce all outstanding requests (as well as any\n    // new flush requests that occur within a second of the locked flush\n    // completing) into a single flush.\n\n    try {\n      await this._flushLock;\n    } catch (err) {\n      __DEBUG_BUILD__ && logger.error(err);\n    } finally {\n      this._debouncedFlush();\n    }\n  };\n\n  /** Save the session, if it is sticky */\n  private _maybeSaveSession(): void {\n    if (this.session && this._options.stickySession) {\n      saveSession(this.session);\n    }\n  }\n}\n","import type { DeprecatedPrivacyOptions, ReplayIntegrationPrivacyOptions } from '../types';\n\ntype GetPrivacyOptions = Required<Omit<ReplayIntegrationPrivacyOptions, 'maskFn'>> &\n  Omit<DeprecatedPrivacyOptions, 'maskInputOptions'>;\ninterface GetPrivacyReturn {\n  maskTextSelector: string;\n  unmaskTextSelector: string;\n  maskInputSelector: string;\n  unmaskInputSelector: string;\n  blockSelector: string;\n  unblockSelector: string;\n  ignoreSelector: string;\n\n  blockClass?: RegExp;\n  maskTextClass?: RegExp;\n}\n\nfunction getOption(\n  selectors: string[],\n  defaultSelectors: string[],\n  deprecatedClassOption?: string | RegExp,\n  deprecatedSelectorOption?: string,\n): string {\n  const deprecatedSelectors = typeof deprecatedSelectorOption === 'string' ? deprecatedSelectorOption.split(',') : [];\n\n  const allSelectors = [\n    ...selectors,\n    // @deprecated\n    ...deprecatedSelectors,\n\n    // sentry defaults\n    ...defaultSelectors,\n  ];\n\n  // @deprecated\n  if (typeof deprecatedClassOption !== 'undefined') {\n    // NOTE: No support for RegExp\n    if (typeof deprecatedClassOption === 'string') {\n      allSelectors.push(`.${deprecatedClassOption}`);\n    }\n\n    // eslint-disable-next-line no-console\n    console.warn(\n      '[Replay] You are using a deprecated configuration item for privacy. Read the documentation on how to use the new privacy configuration.',\n    );\n  }\n\n  return allSelectors.join(',');\n}\n\n/**\n * Returns privacy related configuration for use in rrweb\n */\nexport function getPrivacyOptions({\n  mask,\n  unmask,\n  block,\n  unblock,\n  ignore,\n\n  // eslint-disable-next-line deprecation/deprecation\n  blockClass,\n  // eslint-disable-next-line deprecation/deprecation\n  blockSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextClass,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  ignoreClass,\n}: GetPrivacyOptions): GetPrivacyReturn {\n  const maskSelector = getOption(mask, ['.sentry-mask', '[data-sentry-mask]'], maskTextClass, maskTextSelector);\n  const unmaskSelector = getOption(unmask, ['.sentry-unmask', '[data-sentry-unmask]']);\n\n  const options: GetPrivacyReturn = {\n    // We are making the decision to make text and input selectors the same\n    maskTextSelector: maskSelector,\n    unmaskTextSelector: unmaskSelector,\n    maskInputSelector: maskSelector,\n    unmaskInputSelector: unmaskSelector,\n\n    blockSelector: getOption(block, ['.sentry-block', '[data-sentry-block]'], blockClass, blockSelector),\n    unblockSelector: getOption(unblock, ['.sentry-unblock', '[data-sentry-unblock]']),\n    ignoreSelector: getOption(ignore, ['.sentry-ignore', '[data-sentry-ignore]'], ignoreClass),\n  };\n\n  if (blockClass instanceof RegExp) {\n    options.blockClass = blockClass;\n  }\n\n  if (maskTextClass instanceof RegExp) {\n    options.maskTextClass = maskTextClass;\n  }\n\n  return options;\n}\n","import { isNodeEnv } from '@sentry/utils';\n\n/**\n * Returns true if we are in the browser.\n */\nexport function isBrowser(): boolean {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof window !== 'undefined' && (!isNodeEnv() || isElectronNodeRenderer());\n}\n\ntype ElectronProcess = { type?: string };\n\n// Electron renderers with nodeIntegration enabled are detected as Node.js so we specifically test for them\nfunction isElectronNodeRenderer(): boolean {\n  return typeof process !== 'undefined' && (process as ElectronProcess).type === 'renderer';\n}\n","import { getCurrentHub } from '@sentry/core';\nimport type { BrowserClientReplayOptions, Integration } from '@sentry/types';\nimport { dropUndefinedKeys } from '@sentry/utils';\n\nimport { DEFAULT_FLUSH_MAX_DELAY, DEFAULT_FLUSH_MIN_DELAY, MASK_ALL_TEXT_SELECTOR } from './constants';\nimport { ReplayContainer } from './replay';\nimport type { RecordingOptions, ReplayConfiguration, ReplayPluginOptions } from './types';\nimport { getPrivacyOptions } from './util/getPrivacyOptions';\nimport { isBrowser } from './util/isBrowser';\n\nconst MEDIA_SELECTORS = 'img,image,svg,path,rect,area,video,object,picture,embed,map,audio';\n\nlet _initialized = false;\n\ntype InitialReplayPluginOptions = Omit<ReplayPluginOptions, 'sessionSampleRate' | 'errorSampleRate'> &\n  Partial<Pick<ReplayPluginOptions, 'sessionSampleRate' | 'errorSampleRate'>>;\n\n/**\n * The main replay integration class, to be passed to `init({  integrations: [] })`.\n */\nexport class Replay implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Replay';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Replay.id;\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n  private readonly _recordingOptions: RecordingOptions;\n\n  /**\n   * Initial options passed to the replay integration, merged with default values.\n   * Note: `sessionSampleRate` and `errorSampleRate` are not required here, as they\n   * can only be finally set when setupOnce() is called.\n   *\n   * @private\n   */\n  private readonly _initialOptions: InitialReplayPluginOptions;\n\n  private _replay?: ReplayContainer;\n\n  public constructor({\n    flushMinDelay = DEFAULT_FLUSH_MIN_DELAY,\n    flushMaxDelay = DEFAULT_FLUSH_MAX_DELAY,\n    stickySession = true,\n    useCompression = true,\n    _experiments = {},\n    sessionSampleRate,\n    errorSampleRate,\n    maskAllText,\n    maskAllInputs = true,\n    blockAllMedia = true,\n\n    mask = [],\n    unmask = [],\n    block = [],\n    unblock = [],\n    ignore = [],\n    maskFn,\n\n    // eslint-disable-next-line deprecation/deprecation\n    blockClass,\n    // eslint-disable-next-line deprecation/deprecation\n    blockSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    maskInputOptions,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextClass,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    ignoreClass,\n  }: ReplayConfiguration = {}) {\n    this._recordingOptions = {\n      maskAllInputs,\n      maskInputOptions: { ...(maskInputOptions || {}), password: true },\n      maskTextFn: maskFn,\n      maskInputFn: maskFn,\n\n      ...getPrivacyOptions({\n        mask,\n        unmask,\n        block,\n        unblock,\n        ignore,\n        blockClass,\n        blockSelector,\n        maskTextClass,\n        maskTextSelector,\n        ignoreClass,\n      }),\n\n      // Our defaults\n      slimDOMOptions: 'all',\n      inlineStylesheet: true,\n      // Disable inline images as it will increase segment/replay size\n      inlineImages: false,\n      // collect fonts, but be aware that `sentry.io` needs to be an allowed\n      // origin for playback\n      collectFonts: true,\n    };\n\n    this._initialOptions = {\n      flushMinDelay,\n      flushMaxDelay,\n      stickySession,\n      sessionSampleRate,\n      errorSampleRate,\n      useCompression,\n      maskAllText: typeof maskAllText === 'boolean' ? maskAllText : !maskTextSelector,\n      blockAllMedia,\n      _experiments,\n    };\n\n    if (typeof sessionSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`sessionSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysSessionSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysSessionSampleRate: ${sessionSampleRate} })`,\n      );\n\n      this._initialOptions.sessionSampleRate = sessionSampleRate;\n    }\n\n    if (typeof errorSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`errorSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysOnErrorSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysOnErrorSampleRate: ${errorSampleRate} })`,\n      );\n\n      this._initialOptions.errorSampleRate = errorSampleRate;\n    }\n\n    if (this._initialOptions.maskAllText) {\n      // `maskAllText` is a more user friendly option to configure\n      // `maskTextSelector`. This means that all nodes will have their text\n      // content masked.\n      this._recordingOptions.maskTextSelector = MASK_ALL_TEXT_SELECTOR;\n    }\n\n    if (this._initialOptions.blockAllMedia) {\n      // `blockAllMedia` is a more user friendly option to configure blocking\n      // embedded media elements\n      this._recordingOptions.blockSelector = !this._recordingOptions.blockSelector\n        ? MEDIA_SELECTORS\n        : `${this._recordingOptions.blockSelector},${MEDIA_SELECTORS}`;\n    }\n\n    if (this._isInitialized && isBrowser()) {\n      throw new Error('Multiple Sentry Session Replay instances are not supported');\n    }\n\n    this._isInitialized = true;\n  }\n\n  /** If replay has already been initialized */\n  protected get _isInitialized(): boolean {\n    return _initialized;\n  }\n\n  /** Update _isInitialized */\n  protected set _isInitialized(value: boolean) {\n    _initialized = value;\n  }\n\n  /**\n   * We previously used to create a transaction in `setupOnce` and it would\n   * potentially create a transaction before some native SDK integrations have run\n   * and applied their own global event processor. An example is:\n   * https://github.com/getsentry/sentry-javascript/blob/b47ceafbdac7f8b99093ce6023726ad4687edc48/packages/browser/src/integrations/useragent.ts\n   *\n   * So we call `replay.setup` in next event loop as a workaround to wait for other\n   * global event processors to finish. This is no longer needed, but keeping it\n   * here to avoid any future issues.\n   */\n  public setupOnce(): void {\n    if (!isBrowser()) {\n      return;\n    }\n\n    this._setup();\n\n    // XXX: See method comments above\n    setTimeout(() => this.start());\n  }\n\n  /**\n   * Initializes the plugin.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * PerformanceObserver, Recording, Sentry SDK, etc)\n   */\n  public start(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.start();\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  public stop(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.stop();\n  }\n\n  /**\n   * Immediately send all pending events.\n   */\n  public flush(): Promise<void> | void {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return;\n    }\n\n    return this._replay.flushImmediate();\n  }\n\n  /** Setup the integration. */\n  private _setup(): void {\n    // Client is not available in constructor, so we need to wait until setupOnce\n    const finalOptions = loadReplayOptionsFromClient(this._initialOptions);\n\n    this._replay = new ReplayContainer({\n      options: finalOptions,\n      recordingOptions: this._recordingOptions,\n    });\n  }\n}\n\n/** Parse Replay-related options from SDK options */\nfunction loadReplayOptionsFromClient(initialOptions: InitialReplayPluginOptions): ReplayPluginOptions {\n  const client = getCurrentHub().getClient();\n  const opt = client && (client.getOptions() as BrowserClientReplayOptions);\n\n  const finalOptions = { sessionSampleRate: 0, errorSampleRate: 0, ...dropUndefinedKeys(initialOptions) };\n\n  if (!opt) {\n    // eslint-disable-next-line no-console\n    console.warn('SDK client is not available.');\n    return finalOptions;\n  }\n\n  if (\n    initialOptions.sessionSampleRate == null && // TODO remove once deprecated rates are removed\n    initialOptions.errorSampleRate == null && // TODO remove once deprecated rates are removed\n    opt.replaysSessionSampleRate == null &&\n    opt.replaysOnErrorSampleRate == null\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      'Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.',\n    );\n  }\n\n  if (typeof opt.replaysSessionSampleRate === 'number') {\n    finalOptions.sessionSampleRate = opt.replaysSessionSampleRate;\n  }\n\n  if (typeof opt.replaysOnErrorSampleRate === 'number') {\n    finalOptions.errorSampleRate = opt.replaysOnErrorSampleRate;\n  }\n\n  return finalOptions;\n}\n"]},"metadata":{},"sourceType":"module"}